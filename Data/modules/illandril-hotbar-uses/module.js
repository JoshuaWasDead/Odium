const moduleMetadata = {"id":"illandril-hotbar-uses","version":"3.1.2","title":"Illandril's Hotbar Uses","bugs":"https://github.com/illandril/FoundryVTT-hotbar-uses/issues"};

const validationPattern=/^[a-z_][a-z0-9\-_]*[a-z0-9_]$/i,assertValidPrefixSection=a=>{if(!validationPattern.test(a))throw new Error("CSS prefixes must be at least two characters, start and end with a letter or \"_\", and contain only letters, numbers, \"_\", or \"-\"")};class CSSPrefix{#prefix;constructor(a){assertValidPrefixSection(a),this.#prefix=`${a}--`;}child(a){return assertValidPrefixSection(a),`${this.#prefix}${a}`}childPrefix(a){return assertValidPrefixSection(a),new CSSPrefix(this.child(a))}}

class Logger{#logName;#logColor;#logPrefix;#logStyle;#logLevel;constructor(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"#4f0104";this.#logName=a,this.#logLevel=b,this.#logColor=c,this.#logPrefix=`%c${a}`,this.#logStyle=`background-color: ${c}; color: #fff; padding: 0.1em 0.5em;`;}child(a){let b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:this.#logColor;return new Logger(`${this.#logName} - ${a}`,this.#logLevel,b)}debug(){if(this.#logLevel.debug){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.debug(this.#logPrefix,this.#logStyle,...b);}}info(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.info(this.#logPrefix,this.#logStyle,...b);}warn(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.warn(this.#logPrefix,this.#logStyle,...b);}error(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.error(this.#logPrefix,this.#logStyle,...b);}}

const isChoicesArray=Array.isArray;let canRegister=!1;const pendingRegistrations=[];let pendingDebugRegistration;Hooks.once("init",()=>{canRegister=!0;for(const a of pendingRegistrations)a();pendingDebugRegistration?.();});class ModuleSettings{#namespace;#localize;constructor(a,b){this.#namespace=a,this.#localize=b;}registerMenu(a,b){const c={...b,name:`${this.#namespace}.setting.menu.${a}.name`,label:`${this.#namespace}.setting.menu.${a}.label`,hint:`${this.#namespace}.setting.menu.${a}.hint`},d=()=>{game.settings.registerMenu(this.#namespace,a,c);};return canRegister?d():pendingRegistrations.push(d),{id:`${this.#namespace}--menu--${a}`,title:`${this.#namespace}.setting.menu.${a}.title`,template:`modules/${this.#namespace}/templates/menu-${a}.html`}}#mapChoices(a,b){let c;return b&&(isChoicesArray(b)?c={choices:Object.fromEntries(b.map(b=>[b,this.#localize(`setting.${a}.choice.${b}`)]))}:c={choices:Object.fromEntries(Object.entries(b).map(a=>[a[0],"function"==typeof a[1]?a[1]():a[1]]))}),c}register(a,b,c){let{scope:i="world",hasHint:d,config:j=!0,requiresReload:k=!1,choices:e,callOnChangeOnInit:f,onChange:g,...h}=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};const l={set:b=>{game.settings.set(this.#namespace,a,b);},get:()=>game.settings.get(this.#namespace,a)},m=()=>{const m=this.#mapChoices(a,e);game.settings.register(this.#namespace,a,{name:this.#localize(`setting.${a}.label`),hint:d?this.#localize(`setting.${a}.hint`):void 0,config:"function"==typeof j?j():j,scope:i,type:b,default:c,requiresReload:k,onChange:g,...m,...h}),f&&g?.(l.get());};return canRegister?m():"debug"===a?pendingDebugRegistration=m:pendingRegistrations.push(m),l}registerKeybinding(a,b,c){let{hasHint:d,defaultKeybindings:e,precedence:g=foundry.CONST.KEYBINDING_PRECEDENCE.NORMAL,...f}=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{};const h=()=>{game.keybindings.register(this.#namespace,a,{name:this.#localize(`hotkey.${a}.label`),hint:d?this.#localize(`hotkey.${a}.hint`):void 0,editable:e??[],onDown:b,onUp:c,precedence:g,...f});};canRegister?h():pendingRegistrations.push(h);}}

class ModuleSocket{#socketKey;constructor(a){this.#socketKey=`module.${a}`;}emit(a){if(!game.socket)throw new Error("emit was called before game.socket was initialized or after it was torn down");game.socket.emit(this.#socketKey,a);}on(a){if(!game.socket)throw new Error("on was called before game.socket was initialized or after it was torn down");game.socket.on(this.#socketKey,a);}}

class Template{#path;constructor(a,b){this.#path=`modules/${a}/templates/${b}`,Hooks.on("init",()=>{void getTemplate(this.#path);});}async render(a){return await renderTemplate(this.#path,a)}}

class ModuleUtils{#id;#logger;#settings;#cssPrefix;#socketInitialized=!1;constructor(a){let{id:b,title:c,version:d,bugs:e,color:f}=a;const g=this.localize.bind(this);this.localize=g,this.#id=b,this.#settings=new ModuleSettings(b,g);const h={debug:!1};this.#settings.register("debug",Boolean,!1,{scope:"client",hasHint:!0,callOnChangeOnInit:!0,onChange:a=>{h.debug=a;}}),this.#logger=new Logger(`${c} v${d}`,h,f),e?this.logger.info(`Started. To report bugs, go to: ${e}`):this.logger.info("Started");}get id(){return this.#id}get logger(){return this.#logger}get cssPrefix(){return this.#cssPrefix||(this.#cssPrefix=new CSSPrefix(this.#id)),this.#cssPrefix}get settings(){return this.#settings}localize(a,b){let c=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];const d=`${this.#id}.${a}`;return !0!==c||game.i18n.has(d)?b?game.i18n.format(d,b):game.i18n.localize(d):void 0}registerTemplate(a){return new Template(this.#id,a)}initializeSocket(){if(this.#socketInitialized)throw new Error("Socket should only be initialized once (to ensure the same generic type is used for all socket messages sent by this module, since they will all use the same message key)");return this.#socketInitialized=!0,new ModuleSocket(this.#id)}}

const module=new ModuleUtils(moduleMetadata);

const getNumber=(a,b)=>{if(!b)return null;const c=Number.parseInt(b,10);if(!Number.isNaN(c))return c;const d=foundry.utils.getProperty(a,b);let e;return e="number"==typeof d?d:"string"==typeof d?Number.parseInt(d,10):Number.NaN,Number.isNaN(e)?null:e};

const getActorBySpeaker=()=>{const a=ChatMessage.getSpeaker();let b;return a.token&&(b=game.actors.tokens[a.token]),a.actor&&!b&&(b=game.actors.get(a.actor)),b},getActorByID=a=>{const b=game.canvas?.tokens?.placeables.find(b=>{let{actor:c}=b;return c?.id===a});return b?b.actor:game.actors.get(a)},getActorByName=a=>{const b=game.canvas?.tokens?.placeables.find(b=>{let{actor:c}=b;return c?.name===a});return b?b.actor:game.actors.find(b=>b.name===a)},getActor=a=>{let b,{actorID:c,actorName:d}=a;return b=c?getActorByID(c):d?getActorByName(d):getActorBySpeaker(),b};

const getItems=(a,b)=>{if(b.id){const c=a.items.get(b.id);return c?[c]:[]}if(b.name){let c=b.type;return a.items.filter(a=>a.name===b.name&&(null===c?(c=a.type,!0):a.type===c))}if(b.actionIndex){const c=Number.parseInt(b.actionIndex,10);if(!Number.isNaN(c)&&0<=c){const d=foundry.utils.getProperty(a,"system.actions");if(d&&Array.isArray(d)){const a=d[c];if(a.name===b.actionName)return [a]}}return []}return null};

const addNullable=(a,b)=>"number"==typeof b?null===a?b:a+b:a;

const getItemLookupDetailsForCommandFromRegex=(a,b)=>{let c=null;if(b)for(const d of a){const a=b.match(d);if(a){c={name:a.groups?.itemName||null,type:a.groups?.itemType||null,id:a.groups?.itemID||null,actorID:a.groups?.actorID||null,actorName:a.groups?.actorName||null,magicitemsModuleName:a.groups?.magicitemsModuleName||null,generic:!!a.groups?.generic,available:a.groups?.available||null,consumed:a.groups?.consumed||null,max:a.groups?.max||null,actionIndex:a.groups?.actionIndex||null,actionName:a.groups?.actionName||null,groups:a.groups??{}};break}}return c};

const GENERIC_MACRO_REGEX_ARRAY=[/^(.*\n)?\s*\/\/\s*(?<generic>HotbarUsesGeneric)\s*(\n\s*\/\/\s*ActorID\s*=\s*(?<actorID>[^\n]+))?(\n\s*\/\/\s*ActorName\s*=\s*(?<actorName>[^\n]+))?(\n\s*\/\/\s*ItemID\s*=\s*(?<itemID>[^\n]+))?(\n\s*\/\/\s*ItemName\s*=\s*(?<itemName>[^\n]+))?(\n\s*\/\/\s*ItemType\s*=\s*(?<itemType>[^\n]+))?(\n\s*\/\/\s*Available\s*=\s*(?<available>[^\n]+))?(\n\s*\/\/\s*Consumed\s*=\s*(?<consumed>[^\n]+))?(\n\s*\/\/\s*Max\s*=\s*(?<max>[^\n]+))?(\n.*)?$/is],getMacroSettings$1=()=>{const a=window.CONFIG;return a.illandril||(a.illandril={}),a.illandril.hotbarUses||(a.illandril.hotbarUses={}),a.illandril.hotbarUses.macros||(a.illandril.hotbarUses.macros={}),a.illandril.hotbarUses.macros};const setDefaultMacroRegexArray$1=(a,b)=>{getMacroSettings$1()[a]=b;};const getMacroRegexArray$1=a=>(getMacroSettings$1()[a]??[]).concat(GENERIC_MACRO_REGEX_ARRAY);

const getItemLookupDetailsForCommand$1=(a,b)=>{const c=getItemLookupDetailsForCommandFromRegex(getMacroRegexArray$1(a),b);return module.logger.debug("getItemLookupDetailsForCommand",a,b,c),c};

const genericCalculateUses=(a,b,c)=>{if(!c.available&&!c.consumed)return module.logger.error("Available or Consumed must be specified when using HotbarUsesGeneric"),{available:-1};if(b){let a=null,d=null,e=null;for(const f of b){const b=getNumber(f,c.available),g=getNumber(f,c.consumed),h=getNumber(f,c.max);d=addNullable(d,b),a=addNullable(a,g),e=addNullable(e,h);}return {showZeroUses:null!==d||null!==a,available:null===d?void 0:d,consumed:null===a?void 0:a,maximum:null===e?void 0:e}}const d=getNumber(a,c.available),e=getNumber(a,c.consumed),f=getNumber(a,c.max);return {showZeroUses:null!==d||null!==e,available:null===d?void 0:d,consumed:null===e?void 0:e,maximum:null===f?void 0:f}};class ItemSystem{constructor(a,b,c){this.systemID=a,this.calculateUsesForItem=c,setDefaultMacroRegexArray$1(a,b);}async calculateUses(a){const b=getItemLookupDetailsForCommand$1(this.systemID,a);if(!b)return null;const c=getActor(b);if(!c)return module.logger.debug("Could not find actor",b),{available:0};const d=getItems(c,b);return b.generic?(module.logger.debug("generic uses",b),genericCalculateUses(c,d,b)):(module.logger.debug("Items uses",b,d),await this.calculateUsesForItems(d))}async calculateUsesForItems(a){if(!a?.length)return module.logger.debug("No items"),{available:0};let b={showZeroUses:!0};const c=await Promise.all(a.map(a=>this.calculateUsesForItem(a)));module.logger.debug("Item uses",a,c);for(const d of c){if(!d){b=null;break}if(d.isAmmunition){b=d;break}"number"==typeof d.available&&("number"==typeof b.available?b.available+=d.available:b.available=d.available),"number"==typeof d.consumed&&("number"==typeof b.consumed?b.consumed+=d.consumed:b.consumed=d.consumed),"number"==typeof d.maximum&&("number"==typeof b.maximum?b.maximum+=d.maximum:b.maximum=d.maximum);}return b}}

const SYSTEM_ID$5="archmage",DEFAULT_MACRO_REGEX_ARRAY$5=[/^\s*game\s*\.\s*archmage\s*\.\s*rollItemMacro\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/\s*\/\/\s*HotbarUses13thAge\s*:\s*ActorID\s*=\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*ItemID\s*=\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*(\n.*)?$/is,/\s*\/\/\s*HotbarUses13thAge\s*:\s*(ActorName\s*=\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*)?ItemName\s*=\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*(ItemType\s*=\s*(?<qc>["'`])(?<itemType>.+?)\k<qc>\s*)?(\n.*)?$/is];class Toolkit13ItemSystem extends ItemSystem{constructor(){super(SYSTEM_ID$5,DEFAULT_MACRO_REGEX_ARRAY$5,async a=>{const b=a.system,c=b.quantity,d=b.maxQuantity;if(c&&d){const a=getNumber(c,"value")||0,b=getNumber(d,"value");if(null!==b)return {available:a,maximum:b}}return null});}}var archmage = new Toolkit13ItemSystem;

const SYSTEM_ID$4="demonlord",DEFAULT_MACRO_REGEX_ARRAY$4=[/^(\s*\/\/.+\n)?\s*game\s*\.\s*demonlord\s*\.\s*rollTalentMacro\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*(,\s*(?<qb>["'`])true\k<qb>\s*)?\)\s*;?\s*$/,/^\s*game\s*\.\s*demonlord\s*\.\s*rollSpellMacro\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/\s*\/\/\s*HotbarUsesDemonLord\s*:\s*ActorID\s*=\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*ItemID\s*=\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*(\n.*)?$/is,/\s*\/\/\s*HotbarUsesDemonLord\s*:\s*(ActorName\s*=\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*)?ItemName\s*=\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*(ItemType\s*=\s*(?<qc>["'`])(?<itemType>.+?)\k<qc>\s*)?(\n.*)?$/is];class DemonLordItemSystem extends ItemSystem{constructor(){super(SYSTEM_ID$4,DEFAULT_MACRO_REGEX_ARRAY$4,a=>{let b=null;return "spell"===a.type?b=calculateSpellUses$2(a.system):"talent"===a.type&&(b=calculateTalentUses(a.system)),Promise.resolve(b)});}}var demonlord = new DemonLordItemSystem;function consumedValueMax(a){if(a){const b=getNumber(a,"value")||0,c=getNumber(a,"max")||0;if(0<b||0<c)return {consumed:b,maximum:c}}return null}function calculateTalentUses(a){return consumedValueMax(a?.uses)}function calculateSpellUses$2(a){return consumedValueMax(a?.castings)}

const SYSTEM_ID$3="dnd5e",DEFAULT_MACRO_REGEX_ARRAY$3=[/^\s*game\s*\.\s*dnd5e\s*\.\s*rollItemMacro\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/^\s*game\s*\.\s*dnd5e\s*\.\s*macros\s*\.\s*rollItem\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/^\s*dnd5e\s*\.\s*documents\s*\.\s*macro\s*\.\s*rollItem\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/MinorQOL\s*\.\s*doRoll\s*\(\s*event\s*,\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*,\s*(\{|\{.+,)\s*type\s*:\s*(?<qb>["'`])(?<itemType>.+?)\k<qb>\s*(,.*\}|\})\s*\)\s*;?/,/^\s*BetterRolls\s*\.\s*quickRoll\s*\(\s*(?<q>["'`])(?<itemName>.+?)\k<q>\s*\)\s*;?\s*$/,/^\s*BetterRolls\s*\.\s*(vanillaRoll|quickRollById)\s*\(\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*,\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*\)\s*;?\s*$/,/^\s*BetterRolls\s*\.\s*quickRollByName\s*\(\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*,\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*\)\s*;?\s*$/,/^const\s+actorId\s*=\s*"(?<actorID>.+?)"\s*;\s*const\s+itemId\s*=\s*"(?<itemID>.+?)"\s*;\s*const\s+actorToRoll\s*=.*const\s+itemToRoll\s*=\s*actorToRoll.*/is,/^\s*ItemMacro\s*\.\s*runMacro\s*\(\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*,\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*\)\s*;?\s*$/,/\s*\/\/\s*HotbarUses5e\s*:\s*ActorID\s*=\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*ItemID\s*=\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*(\n.*)?$/is,/\s*\/\/\s*HotbarUses5e\s*:\s*(ActorName\s*=\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*)?ItemName\s*=\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*(ItemType\s*=\s*(?<qc>["'`])(?<itemType>.+?)\k<qc>\s*)?(\n.*)?$/is],calculateUsesForItem5e=a=>{const b=a.system,c=b.consume;if(c?.target)return calculateConsumeUses(a.actor,c);const d=b.uses;if(d&&"number"==typeof d.max&&d.value&&(0<d.max||0<d.value))return calculateLimitedUses(b,d.value,d.max);const e=a.type;return "feat"===e?calculateFeatUses(b):"consumable"===e||"loot"===e?{available:b.quantity}:"spell"===e?calculateSpellUses$1(a,b):"weapon"===e?calculateWeaponUses(b):null};class DnD5eItemSystem extends ItemSystem{constructor(){super(SYSTEM_ID$3,DEFAULT_MACRO_REGEX_ARRAY$3,a=>Promise.resolve(calculateUsesForItem5e(a)));}}var dnd5e = new DnD5eItemSystem;function calculateConsumeUses(a,b){let c,d;if(b.target)if("attribute"===b.type){const d=foundry.utils.getProperty(a?.system,b.target);c="number"==typeof d?d:0;}else if("ammo"===b.type||"material"===b.type){const d=a?.items.get(b.target);c=d&&"quantity"in d.system&&"number"==typeof d.system.quantity?d.system.quantity:0;}else if("charges"===b.type){const e=a?.items.get(b.target);e?({available:c,maximum:d}=calculateLimitedUses(e.system,getNumber(e,"system.uses.value")||0,getNumber(e,"system.uses.max")||0)):c=0;}return void 0===c?null:(b.amount&&1<b.amount&&(c=Math.floor(c/b.amount),void 0!==d&&(d=Math.floor(d/b.amount))),{available:c,maximum:d,isAmmunition:!0})}function calculateLimitedUses(a,b,c){let d=b,e=c;if("quantity"in a){const b=a.quantity;b&&(d+=(b-1)*e,e*=b);}return {available:d,maximum:e}}function calculateFeatUses(a){return a.recharge?.value?{available:a.recharge.charged?1:0,maximum:1}:null}function calculateSpellUses$1(a,b){const c=a.actor?.system;if(!c||!("spells"in c))return null;let d,e;const f=b.preparation?.mode;if("pact"===f)d=c.spells?.pact?.value,e=c.spells?.pact?.max;else if("innate"===f||"atwill"===f);else {const a=b.level;a&&0<a&&(d=c.spells?.[`spell${a}`]?.value,e=c.spells?.[`spell${a}`]?.max);}return "number"==typeof d?{available:d,maximum:e}:null}function calculateWeaponUses(a){return foundry.utils.getProperty(a.properties,"thr")&&!foundry.utils.getProperty(a.properties,"ret")?{available:a.quantity}:null}

const SYSTEM_ID$2="GENERIC";class GenericSystem extends ItemSystem{constructor(){super(SYSTEM_ID$2,[],()=>Promise.resolve(null));}}var generic = new GenericSystem;

const SYSTEM_ID$1="pf1",DEFAULT_MACRO_REGEX_ARRAY$2=[/^\s*game\s*\.\s*pf1\s*\.\s*rollItemMacro\s*\([\s\S]*itemId:\s*(?<q1>["'`])(?<itemID>.+?)\k<q1>[\s\S]*actorId:\s*(?<q2>["'`])(?<actorID>.+?)\k<q2>/,/^\s*game\s*\.\s*pf1\s*\.\s*rollItemMacro\s*\([\s\S]*actorId:\s*(?<q2>["'`])(?<actorID>.+?)\k<q2>[\s\S]*itemId:\s*(?<q1>["'`])(?<itemID>.+?)\k<q1>/,/^\s*fromUuidSync\(\s*(?<q>["'`])Actor\.(?<actorID>[^.]+)\.Item\.(?<itemID>[^.]+?)\k<q>\s*\)\.use\(\)\s*;?\s*$/,/\s*\/\/\s*HotbarUsesPF1\s*:\s*ActorID\s*=\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*ItemID\s*=\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*(\n.*)?$/is,/\s*\/\/\s*HotbarUsesPF1\s*:\s*(ActorName\s*=\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*)?ItemName\s*=\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*(ItemType\s*=\s*(?<qc>["'`])(?<itemType>.+?)\k<qc>\s*)?(\n.*)?$/is];class PF1ItemSystem extends ItemSystem{constructor(){super(SYSTEM_ID$1,DEFAULT_MACRO_REGEX_ARRAY$2,a=>{let b=null;return "spell"===a.type?b=calculateSpellUses(a):a.isCharged?b=calculateChargeUses(a):a.hasAction&&1===a.system.actions?.length&&(b=calculateActionUses(a,a.firstAction)),Promise.resolve(b)});}}var pf1 = new PF1ItemSystem;const calculateSpellUses=a=>{if(a.getSpellUses){let b=a.getSpellUses();if(b===Number.POSITIVE_INFINITY)return null;let c=a.getSpellUses(!0);return a.chargeCost&&1<a.chargeCost&&(b=Math.floor(b/a.chargeCost),c=Math.floor(c/a.chargeCost)),{available:b,maximum:c}}return null},calculateActionUses=(a,b)=>{if(b?.data?.usesAmmo){const b=a.getFlag("pf1","defaultAmmo");if("string"!=typeof b)return null;const c=a.actor?.items.get(b);if(c?.getFlag("pf1","abundant"))return null;const d=c?.system.quantity??0;return {available:d,isAmmunition:!0}}return null},calculateChargeUses=a=>{let b=a.charges||0,c=a.maxCharges||0;const d=a.getDefaultChargeCost?.()??a.chargeCost??1;return 1<d&&(b=Math.floor(b/d),c=Math.floor(c/d)),a.isSingleUse?{available:b,isAmmunition:!0}:{available:b,maximum:c}};

const SYSTEM_ID="pf2e",DEFAULT_MACRO_REGEX_ARRAY$1=[/^\s*game\s*\.\s*pf2e\s*\.\s*rollItemMacro\s*\(\s*(?<q>["'`])(?<itemID>.+?)\k<q>\s*\)\s*;?\s*$/,/^\s*game\s*\.\s*pf2e\s*\.\s*rollActionMacro\s*\(\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*,\s*(?<actionIndex>\d+?)\s*,\s*(?<q2>["'`])(?<actionName>.+?)\k<q2>\s*\)\s*;?\s*$/,/^\s*game\s*\.\s*pf2e\s*\.\s*rollActionMacro\s*\(\s*\{\s*actorUUID\s*:\s*(?<q>["'`])Actor\.(?<actorID>.+?)\k<q>\s*.*itemId\s*:\s*(?<q2>["'`])(?<itemID>.+?)\k<q2>.*?\}\s*\)\s*;?\s*$/,/\s*\/\/\s*HotbarUsesPF2e\s*:\s*ActorID\s*=\s*(?<q>["'`])(?<actorID>.+?)\k<q>\s*ItemID\s*=\s*(?<qb>["'`])(?<itemID>.+?)\k<qb>\s*(\n.*)?$/is,/\s*\/\/\s*HotbarUsesPF2e\s*:\s*(ActorName\s*=\s*(?<q>["'`])(?<actorName>.+?)\k<q>\s*)?ItemName\s*=\s*(?<qb>["'`])(?<itemName>.+?)\k<qb>\s*(ItemType\s*=\s*(?<qc>["'`])(?<itemType>.+?)\k<qc>\s*)?(\n.*)?$/is];class PF2eItemSystem extends ItemSystem{constructor(){super(SYSTEM_ID,DEFAULT_MACRO_REGEX_ARRAY$1,a=>Promise.resolve(calculateUsesForItem(a)));}}var pf2 = new PF2eItemSystem;function calculateUsesForItem(a){return a instanceof Item?calculateUsesForActualItem(a):calculateUsesForAction(a)}function calculateUsesForActualItem(a){if("consumable"===a.type||"equipment"===a.type||"treasure"===a.type){const b=a.system;if(b.quantity)return calculateQuantityAndChargesUses(b)}return null}function getAmmoForAction(a){let b;if(a.ammunition?.selectedAmmo||a.selectedAmmoId){const c=a.ammunition?.selectedAmmo?.id||a.selectedAmmoId,d=b=>b._id===c;a.ammunition&&(a.ammunition.compatible&&(b=a.ammunition.compatible.find(d)),!b&&a.ammunition.incompatible&&(b=a.ammunition.incompatible.find(d))),!b&&a.ammo&&(b=a.ammo.find(d));}return b}function calculateUsesForAction(a){const b=getAmmoForAction(a);return b?{...calculateQuantityAndChargesUses(b),isAmmunition:!0}:null}const extractQuantity=a=>{let b=a.quantity;return "object"==typeof b&&(b=b.value),"string"==typeof b&&(b=Number.parseInt(b,10)),b||0};function calculateQuantityAndChargesUses(a){const b=extractQuantity(a),c=a.charges;if(c){const a=getNumber(c,"value")||0,d=getNumber(c,"max")||0;if(1<d)return {available:a+d*(b-1),maximum:d*b}}return {available:b}}

const systems=[archmage,demonlord,dnd5e,pf1,pf2];let cachedSystem;const getItemSystem=()=>(cachedSystem||(cachedSystem=(()=>{for(const a of systems)if(game.system.id===a.systemID)return a;return module.logger.warn(game.system.id,"is not supported - only HotbarUsesGeneric lookups will work. Go to the GitHub page for this module to learn more and/or to request support for this system: https://github.com/illandril/FoundryVTT-hotbar-uses"),generic})()),cachedSystem);const calculateUses$2=a=>getItemSystem().calculateUses(a);

const getMacroSettings=()=>{const a=window.CONFIG;return a.illandril||(a.illandril={}),a.illandril.hotbarUses||(a.illandril.hotbarUses={}),a.illandril.hotbarUses.specialtyMacros||(a.illandril.hotbarUses.specialtyMacros={}),a.illandril.hotbarUses.specialtyMacros};const setDefaultMacroRegexArray=(a,b)=>{getMacroSettings()[a]=b;};const getMacroRegexArray=a=>getMacroSettings()[a]??[];

const getItemLookupDetailsForCommand=(a,b)=>{const c=getItemLookupDetailsForCommandFromRegex(getMacroRegexArray(a),b);return module.logger.debug("getItemLookupDetailsForCommand",a,b,c),c?{...c.groups,...c}:c};class SpecialtyModule{constructor(a,b,c,d){this.moduleID=a,this.getItems=c,this.calculateUsesForItem=d,setDefaultMacroRegexArray(a,b);}isModuleActive(){return game.modules.get(this.moduleID)?.active??!1}canCalculateUses(a){return null!==getItemLookupDetailsForCommand(this.moduleID,a)}async calculateUses(a){const b=getItemLookupDetailsForCommand(this.moduleID,a);if(!b)return null;const c=this.getActor(b);return c?await this.calculateUsesForItems(this.getItems(c,b)):{available:0}}getActor(a){return getActor(a)}async calculateUsesForItems(a){if(!a?.length)return {available:0};let b={};const c=await Promise.all(a.map(a=>this.calculateUsesForItem(a)));for(const d of c){if(null===d){b=null;break}"number"==typeof d.available&&("number"==typeof b.available?b.available+=d.available:b.available=d.available),"number"==typeof d.consumed&&("number"==typeof b.consumed?b.consumed+=d.consumed:b.consumed=d.consumed),"number"==typeof d.maximum&&("number"==typeof b.maximum?b.maximum+=d.maximum:b.maximum=d.maximum);}return b}}

const MODULE_ID="magic-items-2",DEFAULT_MACRO_REGEX_ARRAY=[/^\s*MagicItems\s*\.\s*roll\s*\(\s*(?<q>["'`])(?<magicItemName>.+)\k<q>\s*,\s*(?<qb>["'`])(?<itemName>.+)\k<qb>\s*\)\s*;?\s*$/];class MagicItemsModule extends SpecialtyModule{constructor(){super(MODULE_ID,DEFAULT_MACRO_REGEX_ARRAY,(a,b)=>{module.logger.debug("MagicItemsModule.getItems",a.id,b);const c=MagicItems.actor(a.id);if(module.logger.debug("MagicItemsModule.getItems - actor",c),!c)return [];const d=b.groups.magicItemName,e=c.items.find(a=>a.name===d);if(module.logger.debug("MagicItemsModule.getItems - item",e),!e)return [];const f=b.groups.itemName,g=e.ownedEntries.find(a=>a.name===f);return module.logger.debug("MagicItemsModule.getItems - ownedEntry",e),g?[g]:[]},a=>{module.logger.debug("MagicItemsModule.calculateUsesForItem",a);let b;if(b="number"==typeof a.item.consumption?a.item.consumption:Number.parseInt(a.item.consumption,10),1>b)return Promise.resolve(null);const c=a.magicItem.charges,d=a.magicItem.chargesOnWholeItem?a.magicItem.uses:a.uses,e=Math.floor(d/b),f=Math.floor(c/b);return Promise.resolve({available:e,maximum:f})});}}var magicitems = new MagicItemsModule;

const specialtyModules=[magicitems];const calculateUses$1=async a=>{let b=null;for(const c of specialtyModules)if(c.isModuleActive()&&c.canCalculateUses(a)&&(b=await c.calculateUses(a),b))break;return b};

const calculateUses=async a=>{const b=await calculateUses$2(a);return b?b:calculateUses$1(a)};

const SETTINGS_UPDATED=`${module.id}.SettingsUpdated`;var showMax = module.settings.register("showMax",Boolean,!0,{scope:"client",config:!0,onChange:()=>Hooks.callAll(SETTINGS_UPDATED)});

const CSS_COUNTER=module.cssPrefix.child("counter"),CSS_HAS_USES=module.cssPrefix.child("hasUses"),CSS_ZERO_USES=module.cssPrefix.child("zeroUses"),CSS_SHOW_ZERO=module.cssPrefix.child("showZero"),getCounterElem=a=>{let b=a.querySelector(`.${CSS_COUNTER}`);return b||(b=document.createElement("span"),b.classList.add(CSS_COUNTER),a.appendChild(b)),b},hideUses=a=>{a.classList.remove(CSS_HAS_USES);const b=getCounterElem(a);b.classList.remove(CSS_SHOW_ZERO),b.classList.remove(CSS_ZERO_USES),b.innerText="";},showUses=(a,b)=>{const c=getCounterElem(a);let d=!1,e=!1,f=!1,g="";"number"==typeof b?(e=0<b,g=`${b}`):"string"==typeof b?(e=!0,g=b):"object"==typeof b&&("number"==typeof b.available?(e=0!==b.available,d=!!b.showZeroUses,g=`${b.available}`):"number"==typeof b.consumed?(e="number"!=typeof b.maximum||b.consumed<b.maximum,g=`${b.consumed}`):b.showZeroUses?(e=!1,d=!0,g="0"):(module.logger.error("Unable to determine uses",b),g="?"),showMax.get()&&"number"==typeof b.maximum&&(f=!0,g=`${g}/${b.maximum}`)),c.innerText=g,f||d?c.classList.add(CSS_SHOW_ZERO):c.classList.remove(CSS_SHOW_ZERO),a.classList.add(CSS_HAS_USES),e?c.classList.remove(CSS_ZERO_USES):c.classList.add(CSS_ZERO_USES);};const updateSlot=(a,b)=>{null===b?hideUses(a):showUses(a,b);};

const COMMAND_EQUIVALENT=/^(.*\n)?\s*\/\/\s*HotbarUses:(?<command>[^\n]+)(\n.*)?$/is;let hasShownMacroUses=!1;function getCommand(a){if(!a)return null;const b=a.command,c=b.match(COMMAND_EQUIVALENT);return c?.groups?.command??b}const renderHotbar=foundry.utils.debounce(()=>{module.logger.debug("Forcing hotbar render"),ui.hotbar.render(),ui.customHotbar?.render?.();},1),rerenderHotbarIfNecessary=foundry.utils.debounce(()=>{hasShownMacroUses&&renderHotbar();},1);Hooks.on(SETTINGS_UPDATED,rerenderHotbarIfNecessary),Hooks.on("updateItem",rerenderHotbarIfNecessary),Hooks.on("updateActor",rerenderHotbarIfNecessary),Hooks.on("updateToken",rerenderHotbarIfNecessary),Hooks.on("controlToken",rerenderHotbarIfNecessary),Hooks.on("deleteItem",rerenderHotbarIfNecessary),Hooks.on("createItem",rerenderHotbarIfNecessary);function onRenderHotbar(a){void onRenderHotbarElem(a.element[0]);}const onRenderHotbarElem=async a=>{const b=a.querySelectorAll("[data-macro-id]");return module.logger.debug("onRenderHotbarElem",b),Promise.all([...b].map(a=>(async()=>{const b=a.getAttribute("data-macro-id");if(!b)return void module.logger.debug("onRenderHotbarElem",b,null);const c=game.macros.get(b),d=getCommand(c),e=await calculateUses(d);module.logger.debug("onRenderHotbarElem",b,d,c,e),updateSlot(a,e),null!==e&&(hasShownMacroUses=!0);})()))};Hooks.once("ready",()=>{Hooks.on("render",a=>{a===ui.hotbar&&onRenderHotbar(a);}),Hooks.on("renderHotbar",onRenderHotbar),renderHotbar();});
