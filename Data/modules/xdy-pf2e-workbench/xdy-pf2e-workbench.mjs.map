{"version":3,"file":"xdy-pf2e-workbench.mjs","sources":["../src/module/preloadTemplates.ts","../src/module/utils.ts","../src/module/settings/menu.ts","../src/module/settings/mystification.ts","../src/module/settings/reminders.ts","../src/module/settings/automation-world.ts","../src/module/settings/automation-client.ts","../src/module/settings/qol-world.ts","../src/module/settings/houseRules.ts","../src/module/settings/index.ts","../src/module/xdy-pf2e-constants.ts","../src/module/feature/tokenMystificationHandler/traits-name-generator.ts","../src/module/feature/tokenMystificationHandler/index.ts","../src/module/feature/heroPointHandler/index.ts","../src/module/feature/initiativeHandler/index.ts","../src/module/keybinds.ts","../src/module/feature/NPCScaleData.ts","../src/module/feature/npc-roller/NpcRoller.ts","../src/module/feature/cr-scaler/Utilities.ts","../src/module/feature/cr-scaler/NPCScalerUtil.ts","../src/module/feature/cr-scaler/NPCScaler.ts","../src/module/feature/macros/follow-the-expert.ts","../src/module/feature/macros/basicActionMacros.ts","../src/module/feature/macros/buildNpcSpellbookJournal.ts","../src/module/feature/reminders/index.ts","../src/module/feature/qolHandler/index.ts","../src/module/feature/damageHandler/index.ts","../src/module/feature/conditionHandler/index.ts","../src/module/feature/damageHandler/dyingHandling.ts","../src/module/feature/reminders/checkAttackValidity.ts","../src/module/feature/reminders/reminderBreathWeapon.ts","../src/module/feature/qolHandler/handlePrivateSpellcasting.ts","../src/module/hooks.ts","../src/module/feature/cr-scaler/NPCScalerSetup.ts","../src/module/feature/settingsHandler/index.ts","../src/module/feature/api/getAllFromAllowedPacks.ts","../src/module/feature/macros/refocus.ts","../src/module/xdy-pf2e-workbench.ts"],"sourcesContent":["export async function preloadTemplates(): Promise<void> {\n    const templatePaths: string[] = [\n        // Add paths to \"modules/xdy-pf2e-workbench/templates\"\n    ];\n\n    await loadTemplates(templatePaths);\n}\n","import { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { MODULENAME, Phase, phase } from \"./xdy-pf2e-workbench.js\";\nimport { ActorFlagsPF2e } from \"@actor/data/base.js\";\nimport { ActorPF2e } from \"@actor/index.js\";\nimport BaseUser from \"foundry-types/common/documents/user.js\";\n\nfunction shouldIHandleThisMessage(message: ChatMessagePF2e, playerCondition = true, gmCondition = true) {\n    const userId = message.user.id;\n    const amIMessageSender = userId === game.user?.id;\n    if (!game.user?.isGM && playerCondition && amIMessageSender) {\n        return true;\n    } else if (game.user?.isGM && gmCondition && amIMessageSender) {\n        return true;\n    }\n    return false;\n}\n\n// TODO Can this be reworked to not parse the message?\nfunction degreeOfSuccessWithRerollHandling(message: ChatMessagePF2e): string {\n    const flags = <ActorFlagsPF2e>message.flags.pf2e;\n    let degreeOfSuccess = <string>flags.context?.outcome ?? \"\";\n    if (flags?.context?.isReroll) {\n        const match = message.flavor?.match('Result: <span .*? class=\"(.*?)\"');\n        if (match && match[1]) {\n            degreeOfSuccess = match[1];\n        }\n    }\n    return degreeOfSuccess;\n}\n\nfunction isFirstGM() {\n    return game.users.activeGM === game.user;\n}\n\nfunction myRandomId() {\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    return Array.from(Array(16).keys())\n        .map(() => letters[Math.floor(Math.random() * letters.length)])\n        .join(\"\");\n}\n\nfunction isActuallyDamageRoll(message) {\n    // TODO Anything using this should probably hook into Hooks.call(`pf2e.damageRoll`, rollData) instead...\n    const isPhysicalDamageroll =\n        message.rolls?.length !== 0 &&\n        [\"ancestry\", \"effect\", \"feat\", \"melee\", \"weapon\"].includes(message.item?.type) &&\n        (!message.isRoll || message.isDamageRoll);\n    const isSpellDamageRoll = message.item?.type === \"spell\" && message.isDamageRoll;\n    return (\n        isPhysicalDamageroll || isSpellDamageRoll\n        // TODO (message.flags[\"xdy-pf2e-workbench\"].autoRollDamage.actuallyCasting ?? true) && //TODO Add this (and setting the flag) to support not rolling damage when the chat button is clicked. For now, meh.\n    );\n}\n\nexport { shouldIHandleThisMessage, degreeOfSuccessWithRerollHandling, isFirstGM, myRandomId, isActuallyDamageRoll };\n\nexport function logTrace(...args) {\n    log(0, ...args);\n}\n\nexport function logDebug(...args) {\n    log(1, ...args);\n}\n\nexport function logInfo(...args) {\n    log(2, ...args);\n}\n\nexport function logWarn(...args) {\n    log(3, ...args);\n}\n\nexport function logError(...args) {\n    log(4, ...args);\n}\n\nfunction log(logLevel = 2, ...args) {\n    let number = 2;\n    if (phase >= Phase.READY) {\n        number = Number(game.settings.get(MODULENAME, \"logLevel\")) ?? 2;\n    }\n\n    if (logLevel >= number) {\n        switch (logLevel) {\n            case 0:\n                console.trace(...args);\n                break;\n            case 1:\n                console.debug(...args);\n                break;\n            case 2:\n                console.info(...args);\n                break;\n            case 3:\n                console.warn(...args);\n                break;\n            case 4:\n                console.error(...args);\n                break;\n            case 5:\n                break;\n        }\n    }\n}\n\nexport function debounce(callback, wait) {\n    let timeout;\n    return (...args) => {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => callback.apply(context, args), wait);\n    };\n}\n\nexport function shouldIHandleThis(actor) {\n    if (!actor) return null;\n    const currentUser = game.users.current;\n    const activePlayers = game.users.players.filter((u) => u.active);\n    const assignedUser = activePlayers.find((u) => u.character === actor);\n    const anyoneWithPermission = activePlayers.find((u) => actor.canUserModify(u, \"update\"));\n    const updater =\n        currentUser?.active && actor.canUserModify(currentUser, \"update\")\n            ? currentUser\n            : assignedUser ?? game.users.activeGM ?? anyoneWithPermission ?? null;\n    return game.user.id === updater?.id;\n}\n\nexport function pushNotification(message: any, type: string = \"info\") {\n    game.socket.emit(\"module.\" + MODULENAME, { operation: \"notification\", args: [type, message] });\n}\n\nexport function unflatten(object) {\n    const result = {};\n    Object.keys(object).forEach(function (k) {\n        setValue(result, k, object[k]);\n    });\n    return result;\n}\n\nexport function setValue(object, path, value) {\n    const split = path.split(\".\");\n    const top = split.pop();\n\n    split.reduce(function (o, k, i, kk) {\n        return (o[k] = o[k] || (isFinite(i + 1 in kk ? kk[i + 1] : top) ? [] : {}));\n    }, object)[top] = value;\n}\n\n/**\n * Applies patches to a housepatcher object.\n *\n * @param {string} housepatcher - The housepatcher object containing patches.\n * @return {Promise<void>} A promise that resolves when the patches have been applied.\n */\nexport async function housepatcher(housepatcher) {\n    try {\n        const patches = JSON.parse(decodeURI(String(housepatcher)));\n        let count = 0;\n\n        for (const { uuid, action, data } of patches) {\n            const document = await fromUuid(uuid);\n\n            if (document?.compendium) {\n                const compendium = document.compendium;\n\n                if (action === \"update\") {\n                    const original: any = document.toObject();\n                    const traits = original?.system?.traits?.value;\n\n                    const housepatchedTrait = \"xdy-pf2e-housepatched\";\n                    const cccPatchedTrait = \"pf2e-ccc-patched\";\n                    if (!(traits?.includes(cccPatchedTrait) || traits?.includes(housepatchedTrait))) {\n                        const update: any = unflatten(data);\n                        update.system = update.system ?? {};\n                        update.system.traits = update.system.traits ?? {};\n                        update.system.traits.value = update.system.traits.value ?? [];\n                        update.system.traits.value.push(housepatchedTrait);\n\n                        const merged = fu.mergeObject(original, update);\n                        await document.update(unflatten(merged));\n                        count += 1;\n                    }\n                } else if (action === \"unlock\") {\n                    if (compendium.locked) {\n                        await compendium.configure({ locked: false });\n                    }\n                } else if (action === \"lock\") {\n                    if (!compendium.locked) {\n                        await compendium.configure({ locked: true });\n                    }\n                } else if (action === \"delete\") {\n                    await document.delete();\n                    await compendium.getIndex();\n                }\n            }\n        }\n\n        const message = game.i18n.format(`${MODULENAME}.SETTINGS.housepatcher.notification`, { count });\n        ui.notifications.info(message);\n    } catch (e) {\n        ui.notifications.error(game.i18n.format(`${MODULENAME}.SETTINGS.housepatcher.error`));\n        game.settings.set(MODULENAME, \"housepatcher\", \"\");\n    }\n}\n\nexport function minionsInCurrentScene(actor: ActorPF2e): ActorPF2e[] {\n    return actor.isOfType(\"character\") ? <ActorPF2e[]>game.scenes.current?.tokens\n              ?.filter(() => !game.user.isGM)\n              ?.filter((token) => token.canUserModify(<BaseUser>(<unknown>game.user), \"update\"))\n              ?.map((token) => token.actor)\n              ?.filter((x) => x?.traits.has(\"minion\")) : [];\n}\n\nexport function setFlag(doc, flag, value) {\n    return doc.setFlag(MODULENAME, flag, value);\n}\n\n// Functions copied from C:\\Users\\jk\\foundryvtt\\forks\\pf2e\\build\\lib\\foundry-utils.ts\n// Not sure why I can't use directly.\n\n/**\n * Check if a key is present in a given object in a type safe way\n *\n * @param obj The object to check\n * @param key The key to check\n */\nexport function objectHasKey<O extends object>(obj: O, key: unknown): key is keyof O {\n    return (typeof key === \"string\" || typeof key === \"number\") && key in obj;\n}\n","import { MODULENAME } from \"../xdy-pf2e-workbench.js\";\n\nexport type PartialSettingsData = Omit<SettingRegistration, \"scope\" | \"config\">;\n\ninterface SettingsTemplateData extends PartialSettingsData {\n    key: string;\n    value: unknown;\n}\n\nexport interface MenuTemplateData extends FormApplicationData {\n    settings: SettingsTemplateData[];\n}\n\n/**\n * @var {string} type   The HTMLElement's type (e.g. \"input\" or \"select\"). Defaults to \"input\".\n * @var {string} falsy  The falsy value. Useful for select-type elements. Defaults to false.\n * @var {string[]} list A list with the setting IDs that should be toggled when the setting is changed.\n */\ninterface HideListTemplateData {\n    [key: string]: {\n        type?: string;\n        falsy?: string;\n        list?: string[];\n    };\n}\n\n/** An adjusted copy of the settings menu from core pf2e meant for the module */\n// @ts-ignore\nexport class SettingsMenuPF2eWorkbench extends FormApplication {\n    static readonly namespace: string;\n\n    static override get defaultOptions() {\n        const options = super.defaultOptions;\n        return fu.mergeObject(options, {\n            title: `${MODULENAME}.SETTINGS.${this.namespace}.name`, // lgtm [js/mixed-static-instance-this-access]\n            id: `${this.namespace}-settings`, // lgtm [js/mixed-static-instance-this-access]\n            template: `modules/xdy-pf2e-workbench/templates/menu.hbs`,\n            classes: [\"form\", \"xdy-pf2e-workbench\", \"settings-menu\"],\n            width: 780,\n            height: 680,\n            closeOnSubmit: true,\n            resizable: true,\n        });\n    }\n\n    get namespace(): string {\n        return (this.constructor as typeof SettingsMenuPF2eWorkbench).namespace;\n    }\n\n    /** Settings to be registered and also later referenced during user updates */\n    protected static get settings(): Record<string, PartialSettingsData> {\n        return {};\n    }\n\n    static registerSettings(): void {\n        const settings = this.settings;\n        for (const setting of Object.keys(settings)) {\n            game.settings.register(MODULENAME, setting, {\n                ...settings[setting],\n                config: false,\n            });\n        }\n    }\n\n    static hideForm(form: HTMLElement, boolean: Boolean): void {\n        form.style.display = !boolean ? \"none\" : \"\";\n    }\n\n    static readonly hidelist: Object = {} as HideListTemplateData;\n\n    // @ts-ignore\n    static hook(...args: any): HookCallback<unknown[]> {\n        const html = args[1];\n        Object.entries(this.hidelist).forEach(([k, v]) => {\n            const setting = game.settings.get(\"xdy-pf2e-workbench\", k) !== (v.falsy ?? false);\n            const settingCheckbox = html.find(`.form-fields [name=\"${k}\"]`);\n            for (const form of v.list) {\n                const settingForm = html.find(`.form-group:has(.form-fields [name=\"${form}\"])`)[0];\n                this.hideForm(settingForm, setting);\n            }\n            settingCheckbox.on(\"change\", (event) => {\n                for (const form of v.list) {\n                    const settingForm = html.find(`.form-group:has(.form-fields [name=\"${form}\"])`)[0];\n                    let condition = event.target.checked;\n                    switch (v.type) {\n                        case \"select\":\n                            condition = event.target.value !== v.falsy;\n                            break;\n                        case \"input\":\n                        default:\n                            break;\n                    }\n                    this.hideForm(settingForm, condition);\n                }\n            });\n        });\n    }\n\n    static setRenderHooks(): void {\n        const hook = this.hook;\n        if (hook) {\n            // @ts-ignore\n            Hooks.on(`render${this.name}`, hook.bind(this));\n        }\n    }\n\n    static registerSettingsAndCreateMenu(icon, restricted = true) {\n        game.settings.registerMenu(MODULENAME, this.namespace, {\n            name: `${MODULENAME}.SETTINGS.${this.namespace}.name`, // lgtm [js/mixed-static-instance-this-access]\n            label: `${MODULENAME}.SETTINGS.${this.namespace}.label`, // lgtm [js/mixed-static-instance-this-access]\n            hint: `${MODULENAME}.SETTINGS.${this.namespace}.hint`, // lgtm [js/mixed-static-instance-this-access]\n            icon: icon,\n            type: this,\n            restricted: restricted,\n        });\n        this.registerSettings();\n        this.setRenderHooks();\n    }\n\n    override getData(): MenuTemplateData {\n        const settings = (this.constructor as typeof SettingsMenuPF2eWorkbench).settings;\n        const templateData: SettingsTemplateData[] = Object.entries(settings).map(([key, setting]) => {\n            const value = game.settings.get(MODULENAME, key);\n            return {\n                ...setting,\n                key,\n                value,\n                isCheckbox: setting.type === Boolean,\n                isFilepicker: setting.type === String && setting.filePicker,\n                isNumber: setting.type === Number,\n                isSelect: !!setting.choices,\n                isText: setting.type === String && !setting.filePicker,\n            };\n        });\n        return <MenuTemplateData>fu.mergeObject(super.getData(), {\n            settings: templateData,\n            instructions: `${MODULENAME}.SETTINGS.${this.namespace}.hint`, // lgtm [js/mixed-static-instance-this-access]\n        });\n    }\n\n    protected override async _updateObject(_event: Event, data: Record<string, unknown>): Promise<void> {\n        for (const key of Object.keys(data)) {\n            let datum = data[key];\n            // \"null\" check is due to a previous bug that may have left invalid data in text fields\n            if (datum === null || datum === \"null\") {\n                datum = \"\";\n            }\n            // If statement handles bug in foundry\n            if (![\"submit\", \"reset\"].includes(key)) {\n                await game.settings.set(MODULENAME, key, datum);\n            }\n        }\n    }\n}\n","import { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./menu.js\";\n\nexport let mystifyRandomPropertyType: string;\nexport let mystifyModifierKey: string;\n\nexport class WorkbenchMystificationSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"mystificationSettings\";\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            npcMystifyAllPhysicalMagicalItems: {\n                name: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItems.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItems.hint`,\n                scope: \"world\",\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItems.no`),\n                    onScene: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItems.onScene`),\n                    onZeroHp: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItems.onZeroHp`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreater: {\n                name: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreater.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreater.hint`,\n                scope: \"world\",\n                default: -1,\n                type: Number,\n            },\n            npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterUsingPartyLevel: {\n                name: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterUsingPartyLevel.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterUsingPartyLevel.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n            npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterMultiplier: {\n                name: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterMultiplier.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterMultiplier.hint`,\n                scope: \"world\",\n                default: \"1.0\",\n                type: String,\n            },\n            npcMystifyAllPhysicalMagicalItemsOfThisRarityOrGreater: {\n                name: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisRarityOrGreater.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifyAllPhysicalMagicalItemsOfThisRarityOrGreater.hint`,\n                scope: \"world\",\n                default: \"common\",\n                type: String,\n                choices: {\n                    common: game.i18n.localize(\"PF2E.TraitCommon\"),\n                    uncommon: game.i18n.localize(\"PF2E.TraitUncommon\"),\n                    rare: game.i18n.localize(\"PF2E.TraitRare\"),\n                    unique: game.i18n.localize(\"PF2E.TraitUnique\"),\n                },\n            },\n            npcMystifier: {\n                name: `${MODULENAME}.SETTINGS.npcMystifier.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifier.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            npcMystifierDemystifyAllTokensBasedOnTheSameActor: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierDemystifyAllTokensBasedOnTheSameActor.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierDemystifyAllTokensBasedOnTheSameActor.hint`,\n                scope: \"world\",\n                default: true,\n                type: Boolean,\n            },\n            npcMystifierAddRandomProperty: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierAddRandomProperty.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierAddRandomProperty.hint`,\n                scope: \"world\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierAddRandomProperty.none`),\n                    numberPostfix: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.npcMystifierAddRandomProperty.numberPostfix`,\n                    ),\n                    wordPrefix: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierAddRandomProperty.wordPrefix`),\n                },\n                default: \"none\",\n                onChange: (key) => {\n                    mystifyRandomPropertyType = <string>key;\n                },\n            },\n            npcMystifierRandomWordPrefixRollTable: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierWordPrefix.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierWordPrefix.hint`,\n                scope: \"world\",\n                default: \"\",\n                type: String,\n            },\n            npcMystifierKeepRandomProperty: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierKeepRandomProperty.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierKeepRandomProperty.hint`,\n                scope: \"world\",\n                default: true,\n                type: Boolean,\n            },\n            npcMystifierRandomPropertySkipForUnique: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierRandomPropertySkipForUnique.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierRandomPropertySkipForUnique.hint`,\n                scope: \"world\",\n                default: true,\n                type: Boolean,\n            },\n            npcMystifierPrefix: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierPrefix.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierPrefix.hint`,\n                scope: \"world\",\n                type: String,\n                default: \"\",\n            },\n            npcMystifierPostfix: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierPostfix.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierPostfix.hint`,\n                scope: \"world\",\n                type: String,\n                default: \"Workbench Adjectives\",\n            },\n            npcMystifierUseSize: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseSize.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseSize.hint`,\n                scope: \"world\",\n                default: true,\n                type: Boolean,\n            },\n            npcMystifierUseRarities: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseRarities.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseRarities.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n            npcMystifierUseRaritiesReplacement: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseRaritiesReplacement.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseRaritiesReplacement.hint`,\n                scope: \"world\",\n                default: \"\",\n                type: String,\n            },\n            npcMystifierUseEliteWeak: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseEliteWeak.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseEliteWeak.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n            npcMystifierUseCreatureTypesTraits: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseCreatureTypesTraits.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseCreatureTypesTraits.hint`,\n                scope: \"world\",\n                default: true,\n                type: Boolean,\n            },\n            npcMystifierUseCreatureTraits: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseCreatureTraits.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseCreatureTraits.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n            npcMystifierUseOtherTraits: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseOtherTraits.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseOtherTraits.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n            npcMystifierBlacklist: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierBlacklist.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierBlacklist.hint`,\n                scope: \"world\",\n                default: \"\",\n                type: String,\n            },\n            npcMystifierNoMatch: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierNoMatch.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierNoMatch.hint`,\n                scope: \"world\",\n                default: \"...\",\n                type: String,\n                onChange: async (choice) => {\n                    if (!choice) {\n                        // Sleep a bit, then set to a sane value...\n                        await new Promise((resolve) => setTimeout(resolve, 250));\n                        game.settings.set(MODULENAME, \"npcMystifierNoMatch\", \"...\");\n                    }\n                },\n            },\n            npcMystifierModifierKey: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierModifierKey.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierModifierKey.hint`,\n                scope: \"world\",\n                type: String,\n                choices: {\n                    ALWAYS: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierModifierKey.always`),\n                    DISABLED: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierModifierKey.disabled`),\n                    ALT: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierModifierKey.alt`),\n                    CONTROL: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierModifierKey.control`),\n                    META: game.i18n.localize(`${MODULENAME}.SETTINGS.npcMystifierModifierKey.meta`),\n                },\n                default: \"CONTROL\",\n                onChange: (key) => {\n                    mystifyModifierKey = <string>key;\n                },\n            },\n            npcMystifierUseMystifiedNameInChat: {\n                name: `${MODULENAME}.SETTINGS.npcMystifierUseMystifiedNameInChat.name`,\n                hint: `${MODULENAME}.SETTINGS.npcMystifierUseMystifiedNameInChat.hint`,\n                scope: \"world\",\n                default: false,\n                type: Boolean,\n            },\n        };\n    }\n\n    static override registerSettings(): void {\n        super.registerSettings();\n        mystifyModifierKey = String(game.settings.get(MODULENAME, \"npcMystifierModifierKey\"));\n        mystifyRandomPropertyType = String(game.settings.get(MODULENAME, \"npcMystifierAddRandomProperty\"));\n    }\n}\n","import { SettingsMenuPF2eWorkbench } from \"./menu.js\";\nimport { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\n\nexport class WorkbenchRemindersSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"remindersSettings\";\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            reminderCannotAttack: {\n                name: `${MODULENAME}.SETTINGS.reminderCannotAttack.name`,\n                hint: `${MODULENAME}.SETTINGS.reminderCannotAttack.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderCannotAttack.no`),\n                    reminder: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderCannotAttack.reminder`),\n                    cancelAttack: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderCannotAttack.cancelAttack`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            reminderCannotAttackIgnoreDeadEidolon: {\n                name: `${MODULENAME}.SETTINGS.reminderCannotAttackIgnoreDeadEidolon.name`,\n                hint: `${MODULENAME}.SETTINGS.reminderCannotAttackIgnoreDeadEidolon.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            reminderTargeting: {\n                name: `${MODULENAME}.SETTINGS.reminderTargeting.name`,\n                hint: `${MODULENAME}.SETTINGS.reminderTargeting.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderTargeting.no`),\n                    reminder: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderTargeting.reminder`),\n                    mustTarget: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderTargeting.mustTarget`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            actionsReminderAllow: {\n                name: `${MODULENAME}.SETTINGS.actionsReminderAllow.name`,\n                hint: `${MODULENAME}.SETTINGS.actionsReminderAllow.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"none\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.actionsReminderAllow.none`),\n                    all: game.i18n.localize(`${MODULENAME}.SETTINGS.actionsReminderAllow.all`),\n                    gm: game.i18n.localize(`${MODULENAME}.SETTINGS.actionsReminderAllow.gm`),\n                    players: game.i18n.localize(`${MODULENAME}.SETTINGS.actionsReminderAllow.players`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            reminderBreathWeapon: {\n                name: `${MODULENAME}.SETTINGS.reminderBreathWeapon.name`,\n                hint: `${MODULENAME}.SETTINGS.reminderBreathWeapon.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            reminderBreathWeaponHidden: {\n                name: `${MODULENAME}.SETTINGS.reminderBreathWeaponHidden.name`,\n                hint: `${MODULENAME}.SETTINGS.reminderBreathWeaponHidden.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            heroPointHandler: {\n                name: `${MODULENAME}.SETTINGS.heroPointHandler.name`,\n                hint: `${MODULENAME}.SETTINGS.heroPointHandler.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            heropointHandlerNotificationChat: {\n                name: `${MODULENAME}.SETTINGS.heropointHandlerNotificationChat.name`,\n                hint: `${MODULENAME}.SETTINGS.heropointHandlerNotificationChat.hint`,\n                scope: \"world\",\n                config: true,\n                default: true,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            heroPointHandlerStartTimerOnReady: {\n                name: `${MODULENAME}.SETTINGS.heroPointHandlerStartTimerOnReady.name`,\n                hint: `${MODULENAME}.SETTINGS.heroPointHandlerStartTimerOnReady.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            heroPointHandlerDefaultTimeoutMinutes: {\n                name: `${MODULENAME}.SETTINGS.heroPointHandlerDefaultTimeoutMinutes.name`,\n                hint: `${MODULENAME}.SETTINGS.heroPointHandlerDefaultTimeoutMinutes.hint`,\n                scope: \"world\",\n                config: true,\n                default: 60,\n                type: Number,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            heropointHandlerNotification: {\n                name: `${MODULENAME}.SETTINGS.heropointHandlerNotification.name`,\n                hint: `${MODULENAME}.SETTINGS.heropointHandlerNotification.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n        };\n    }\n}\n","import { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./menu.js\";\n\nexport class WorkbenchWorldAutomationSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"automationWorldSettings\";\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            enableAutomaticMove: {\n                name: `${MODULENAME}.SETTINGS.enableAutomaticMove.name`,\n                hint: `${MODULENAME}.SETTINGS.enableAutomaticMove.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"noAutomation\",\n                type: String,\n                choices: {\n                    noAutomation: game.i18n.localize(`${MODULENAME}.SETTINGS.enableAutomaticMove.noAutomation`),\n                    reaching0HP: game.i18n.localize(`${MODULENAME}.SETTINGS.enableAutomaticMove.reaching0HP`),\n                    reaching0HPCharactersOnly: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.enableAutomaticMove.reaching0HPCharactersOnly`,\n                    ),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRollDamageAllow: {\n                name: `${MODULENAME}.SETTINGS.autoRollDamageAllow.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRollDamageAllow.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"none\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageAllow.none`),\n                    all: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageAllow.all`),\n                    gm: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageAllow.gm`),\n                    players: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageAllow.players`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            applyPersistentAllow: {\n                name: `${MODULENAME}.SETTINGS.applyPersistentAllow.name`,\n                hint: `${MODULENAME}.SETTINGS.applyPersistentAllow.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"none\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.applyPersistentAllow.none`),\n                    all: game.i18n.localize(`${MODULENAME}.SETTINGS.applyPersistentAllow.all`),\n                    gm: game.i18n.localize(`${MODULENAME}.SETTINGS.applyPersistentAllow.gm`),\n                    players: game.i18n.localize(`${MODULENAME}.SETTINGS.applyPersistentAllow.players`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            handleDyingRecoveryRollAllow: {\n                name: `${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.name`,\n                hint: `${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"none\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.none`),\n                    all: game.i18n.localize(`${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.all`),\n                    gm: game.i18n.localize(`${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.gm`),\n                    players: game.i18n.localize(`${MODULENAME}.SETTINGS.handleDyingRecoveryRollAllow.players`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoReduceStunned: {\n                name: `${MODULENAME}.SETTINGS.autoReduceStunned.name`,\n                hint: `${MODULENAME}.SETTINGS.autoReduceStunned.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            giveUnconsciousIfDyingRemovedAt0HP: {\n                name: `${MODULENAME}.SETTINGS.giveUnconsciousIfDyingRemovedAt0HP.name`,\n                hint: `${MODULENAME}.SETTINGS.giveUnconsciousIfDyingRemovedAt0HP.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRemoveUnconsciousAtGreaterThanZeroHP: {\n                name: `${MODULENAME}.SETTINGS.autoRemoveUnconsciousAtGreaterThanZeroHP.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRemoveUnconsciousAtGreaterThanZeroHP.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            giveWoundedWhenDyingRemoved: {\n                name: `${MODULENAME}.SETTINGS.giveWoundedWhenDyingRemoved.name`,\n                hint: `${MODULENAME}.SETTINGS.giveWoundedWhenDyingRemoved.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoGainDyingAtZeroHP: {\n                name: `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.name`,\n                hint: `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.no`),\n                    addOne: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.addOne`),\n                    addWoundedLevel: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.addWoundedLevel`),\n                    addOneForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.addOneForCharacters`,\n                    ),\n                    addWoundedLevelForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.addWoundedLevelForCharacters`,\n                    ),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            nonLethalIsNotLethal: {\n                name: `${MODULENAME}.SETTINGS.nonLethalIsNotLethal.name`,\n                hint: `${MODULENAME}.SETTINGS.nonLethalIsNotLethal.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.nonLethalIsNotLethal.no`),\n                    unconscious: game.i18n.localize(`${MODULENAME}.SETTINGS.nonLethalIsNotLethal.unconscious`),\n                    unconsciousForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.nonLethalIsNotLethal.unconsciousForCharacters`,\n                    ),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoGainDyingAtZeroHPIfCriticallyHitOneMore: {\n                name: `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHPIfCriticallyHitOneMore.name`,\n                hint: `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHPIfCriticallyHitOneMore.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHPIfCriticallyHitOneMore.no`),\n                    add: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHPIfCriticallyHitOneMore.add`),\n                    addForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoGainDyingAtZeroHPIfCriticallyHitOneMore.addForCharacters`,\n                    ),\n                },\n            },\n            autoGainDyingIfTakingDamageWhenAlreadyDying: {\n                name: `${MODULENAME}.SETTINGS.autoGainDyingIfTakingDamageWhenAlreadyDying.name`,\n                hint: `${MODULENAME}.SETTINGS.autoGainDyingIfTakingDamageWhenAlreadyDying.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingIfTakingDamageWhenAlreadyDying.no`),\n                    add: game.i18n.localize(`${MODULENAME}.SETTINGS.autoGainDyingIfTakingDamageWhenAlreadyDying.add`),\n                    addForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoGainDyingIfTakingDamageWhenAlreadyDying.addForCharacters`,\n                    ),\n                },\n            },\n            autoGainDyingIgnoresTargeting: {\n                name: `${MODULENAME}.SETTINGS.autoGainDyingIgnoresTargeting.name`,\n                hint: `${MODULENAME}.SETTINGS.autoGainDyingIgnoresTargeting.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRemoveDyingAtGreaterThanZeroHP: {\n                name: `${MODULENAME}.SETTINGS.autoRemoveDyingAtGreaterThanZeroHP.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRemoveDyingAtGreaterThanZeroHP.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"no\",\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRemoveDyingAtGreaterThanZeroHP.no`),\n                    remove: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRemoveDyingAtGreaterThanZeroHP.removeDying`),\n                    removeForCharacters: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoRemoveDyingAtGreaterThanZeroHP.removeDyingForCharacters`,\n                    ),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            dropHeldItemsOnBecomingUnconscious: {\n                name: `${MODULENAME}.SETTINGS.dropHeldItemsOnBecomingUnconscious.name`,\n                hint: `${MODULENAME}.SETTINGS.dropHeldItemsOnBecomingUnconscious.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n        };\n    }\n\n    static override readonly hidelist = {\n        autoGainDyingAtZeroHP: {\n            type: \"select\",\n            falsy: \"no\",\n            list: [\n                \"nonLethalIsNotLethal\",\n                \"autoGainDyingAtZeroHPIfCriticallyHitOneMore\",\n                \"autoGainDyingIfTakingDamageWhenAlreadyDying\",\n                \"autoGainDyingIgnoresTargeting\",\n            ],\n        },\n    };\n}\n","import { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./menu.js\";\n\nexport class WorkbenchClientAutomationSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"automationClientSettings\";\n\n    static override get defaultOptions() {\n        return fu.mergeObject(super.defaultOptions, {\n            height: \"fit-content\",\n        });\n    }\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            // NOTE Do NOT rename this without talking to Symon S, his macros for Spellstrike and Eldritch shot parse for workbench and its settings to avoid double rolling damage.\n            autoRollDamageForStrike: {\n                name: `${MODULENAME}.SETTINGS.autoRollDamageForStrike.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRollDamageForStrike.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRollDamageForSpellAttack: {\n                name: `${MODULENAME}.SETTINGS.autoRollDamageForSpellAttack.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRollDamageForSpellAttack.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRollDamageForSpellWhenNotAnAttack: {\n                name: `${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: String,\n                choices: {\n                    no: game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.no`),\n                    anySpell: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.anySpell`,\n                    ),\n                    saveSpell: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.saveSpell`,\n                    ),\n                    nonSaveSpell: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.autoRollDamageForSpellWhenNotAnAttack.nonSaveSpell`,\n                    ),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            autoRollDamageNotifyOnSpellCardNotFound: {\n                name: `${MODULENAME}.SETTINGS.autoRollDamageNotifyOnSpellCardNotFound.name`,\n                hint: `${MODULENAME}.SETTINGS.autoRollDamageNotifyOnSpellCardNotFound.hint`,\n                scope: \"client\",\n                config: true,\n                default: true,\n                type: Boolean,\n            },\n            applyPersistentDamage: {\n                name: `${MODULENAME}.SETTINGS.applyPersistentDamage.name`,\n                hint: `${MODULENAME}.SETTINGS.applyPersistentDamage.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            applyPersistentDamageRecoveryRoll: {\n                name: `${MODULENAME}.SETTINGS.applyPersistentDamageRecoveryRoll.name`,\n                hint: `${MODULENAME}.SETTINGS.applyPersistentDamageRecoveryRoll.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            applyPersistentHealing: {\n                name: `${MODULENAME}.SETTINGS.applyPersistentHealing.name`,\n                hint: `${MODULENAME}.SETTINGS.applyPersistentHealing.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            handleDyingRecoveryRoll: {\n                name: `${MODULENAME}.SETTINGS.handleDyingRecoveryRoll.name`,\n                hint: `${MODULENAME}.SETTINGS.handleDyingRecoveryRoll.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            decreaseFrightenedConditionEachTurn: {\n                name: `${MODULENAME}.SETTINGS.decreaseFrightenedConditionEachTurn.name`,\n                hint: `${MODULENAME}.SETTINGS.decreaseFrightenedConditionEachTurn.hint`,\n                scope: \"client\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n        };\n    }\n}\n","import { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./menu.js\";\n\nexport class WorkbenchQolWorldSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"qolWorldSettings\";\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            npcScaler: {\n                name: `${MODULENAME}.SETTINGS.npcScaler.name`,\n                hint: `${MODULENAME}.SETTINGS.npcScaler.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            npcRoller: {\n                name: `${MODULENAME}.SETTINGS.npcRoller.name`,\n                hint: `${MODULENAME}.SETTINGS.npcRoller.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpell: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpell.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpell.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellAutoRevealIfKnown: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellAutoRevealIfKnown.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellAutoRevealIfKnown.hint`,\n                scope: \"world\",\n                config: true,\n                default: true,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellAutoRevealPartyMembersThatKnowSpell: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellAutoRevealPartyMembersThatKnowSpell.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellAutoRevealPartyMembersThatKnowSpell.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellHideName: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellHideName.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellHideName.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellAlwaysFor: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"none\",\n                type: String,\n                choices: {\n                    none: game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.none`),\n                    nonAllies: game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.nonAllies`),\n                    nonPartymembers: game.i18n.localize(\n                        `${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.nonPartymembers`,\n                    ),\n                    npcs: game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellAlwaysFor.npcs`),\n                },\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellWithPublicMessage: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellWithPublicMessageShowToGM: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessageShowToGM.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessageShowToGM.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            castPrivateSpellWithPublicMessageShowTraits: {\n                name: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessageShowTraits.name`,\n                hint: `${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessageShowTraits.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            tokenAnimation: {\n                name: `${MODULENAME}.SETTINGS.tokenAnimation.name`,\n                hint: `${MODULENAME}.SETTINGS.tokenAnimation.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            tokenAnimationSpeed: {\n                name: `${MODULENAME}.SETTINGS.tokenAnimationSpeed.name`,\n                hint: `${MODULENAME}.SETTINGS.tokenAnimationSpeed.hint`,\n                scope: \"world\",\n                config: true,\n                default: 6,\n                type: Number,\n                onChange: () => updateHooks(),\n                requiresReload: true,\n            },\n            playerFeatsPrerequisiteHint: {\n                name: `${MODULENAME}.SETTINGS.playerFeatsPrerequisiteHint.name`,\n                hint: `${MODULENAME}.SETTINGS.playerFeatsPrerequisiteHint.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n            },\n            playerFeatsRarityColour: {\n                name: `${MODULENAME}.SETTINGS.playerFeatsRarityColour.name`,\n                hint: `${MODULENAME}.SETTINGS.playerFeatsRarityColour.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n            },\n            playerCraftingRarityColour: {\n                name: `${MODULENAME}.SETTINGS.playerCraftingRarityColour.name`,\n                hint: `${MODULENAME}.SETTINGS.playerCraftingRarityColour.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n            },\n            playerSpellsRarityColour: {\n                name: `${MODULENAME}.SETTINGS.playerSpellsRarityColour.name`,\n                hint: `${MODULENAME}.SETTINGS.playerSpellsRarityColour.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n                onChange: () => updateHooks(),\n            },\n        };\n    }\n\n    static override readonly hidelist = {\n        castPrivateSpell: {\n            list: [\n                \"castPrivateSpellAutoRevealIfKnown\",\n                \"castPrivateSpellAutoRevealPartyMembersThatKnowSpell\",\n                \"castPrivateSpellAutoRevealPartyMembersThatKnowSpell\",\n                \"castPrivateSpellHideName\",\n                \"castPrivateSpellAlwaysFor\",\n            ],\n        },\n        castPrivateSpellWithPublicMessage: {\n            list: [\"castPrivateSpellWithPublicMessageShowToGM\", \"castPrivateSpellWithPublicMessageShowTraits\"],\n        },\n    };\n}\n","import { MODULENAME } from \"../xdy-pf2e-workbench.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./menu.js\";\n\nexport class WorkbenchHouseRulesSettings extends SettingsMenuPF2eWorkbench {\n    static override namespace = \"houseRulesSettings\";\n\n    static override get defaultOptions() {\n        return fu.mergeObject(super.defaultOptions, {\n            height: \"fit-content\",\n        });\n    }\n\n    public static override get settings(): Record<string, SettingRegistration> {\n        return {\n            keeleysHeroPointRule: {\n                name: `${MODULENAME}.SETTINGS.keeleysHeroPointRule.name`,\n                hint: `${MODULENAME}.SETTINGS.keeleysHeroPointRule.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n            },\n            legacyVariantRuleAncestryParagon: {\n                name: `${MODULENAME}.SETTINGS.legacyVariantRuleAncestryParagon.name`,\n                hint: `${MODULENAME}.SETTINGS.legacyVariantRuleAncestryParagon.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n            },\n            legacyVariantRuleDualClass: {\n                name: `${MODULENAME}.SETTINGS.legacyVariantRuleDualClass.name`,\n                hint: `${MODULENAME}.SETTINGS.legacyVariantRuleDualClass.hint`,\n                scope: \"world\",\n                config: true,\n                default: false,\n                type: Boolean,\n            },\n            housepatcher: {\n                name: `${MODULENAME}.SETTINGS.housepatcher.name`,\n                hint: `${MODULENAME}.SETTINGS.housepatcher.hint`,\n                scope: \"world\",\n                config: true,\n                default: \"\",\n                type: String,\n            },\n        };\n    }\n}\n","import { MODULENAME, updateHooks } from \"../xdy-pf2e-workbench.js\";\nimport { WorkbenchMystificationSettings } from \"./mystification.js\";\nimport { WorkbenchRemindersSettings } from \"./reminders.js\";\nimport { WorkbenchWorldAutomationSettings } from \"./automation-world.js\";\nimport { WorkbenchClientAutomationSettings } from \"./automation-client.js\";\nimport { WorkbenchQolWorldSettings } from \"./qol-world.js\";\nimport { logInfo } from \"../utils.js\";\nimport { WorkbenchHouseRulesSettings } from \"./houseRules.js\";\n\nexport { mystifyModifierKey, mystifyRandomPropertyType } from \"./mystification.js\";\n\nexport function registerWorkbenchSettings() {\n    logInfo(`${MODULENAME} | registerSettings`);\n\n    WorkbenchMystificationSettings.registerSettingsAndCreateMenu(\"fas fa-eye-slash\");\n    WorkbenchRemindersSettings.registerSettingsAndCreateMenu(\"fas fa-bell\");\n    WorkbenchQolWorldSettings.registerSettingsAndCreateMenu(\"fas fa-smile\");\n    WorkbenchWorldAutomationSettings.registerSettingsAndCreateMenu(\"fas fa-robot\");\n    WorkbenchClientAutomationSettings.registerSettingsAndCreateMenu(\"fas fa-magic\", false);\n    WorkbenchHouseRulesSettings.registerSettingsAndCreateMenu(\"fas fa-house\");\n\n    game.settings.register(MODULENAME, \"autoCollapseItemChatCardContent\", {\n        name: `${MODULENAME}.SETTINGS.autoCollapseItemChatCardContent.name`,\n        hint: `${MODULENAME}.SETTINGS.autoCollapseItemChatCardContent.hint`,\n        scope: \"client\",\n        config: true,\n        default: \"noCollapse\",\n        type: String,\n        choices: {\n            noCollapse: game.i18n.localize(`${MODULENAME}.SETTINGS.autoCollapseItemChatCardContent.noCollapse`),\n            collapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemChatCardContent.collapsedDefault`,\n            ),\n            nonCollapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemChatCardContent.nonCollapsedDefault`,\n            ),\n        },\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"autoCollapseItemChatCardMoveEffectLinks\", {\n        name: `${MODULENAME}.SETTINGS.autoCollapseItemChatCardMoveEffectLinks.name`,\n        hint: `${MODULENAME}.SETTINGS.autoCollapseItemChatCardMoveEffectLinks.hint`,\n        scope: \"client\",\n        config: true,\n        default: false,\n        type: Boolean,\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"autoCollapseItemActionChatCardContent\", {\n        name: `${MODULENAME}.SETTINGS.autoCollapseItemActionChatCardContent.name`,\n        hint: `${MODULENAME}.SETTINGS.autoCollapseItemActionChatCardContent.hint`,\n        scope: \"client\",\n        config: true,\n        default: \"noCollapse\",\n        type: String,\n        choices: {\n            noCollapse: game.i18n.localize(`${MODULENAME}.SETTINGS.autoCollapseItemActionChatCardContent.noCollapse`),\n            collapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemActionChatCardContent.collapsedDefault`,\n            ),\n            nonCollapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemActionChatCardContent.nonCollapsedDefault`,\n            ),\n        },\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"autoCollapseItemAttackChatCardContent\", {\n        name: `${MODULENAME}.SETTINGS.autoCollapseItemAttackChatCardContent.name`,\n        hint: `${MODULENAME}.SETTINGS.autoCollapseItemAttackChatCardContent.hint`,\n        scope: \"client\",\n        config: true,\n        default: \"noCollapse\",\n        type: String,\n        choices: {\n            noCollapse: game.i18n.localize(`${MODULENAME}.SETTINGS.autoCollapseItemAttackChatCardContent.noCollapse`),\n            collapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemAttackChatCardContent.collapsedDefault`,\n            ),\n            nonCollapsedDefault: game.i18n.localize(\n                `${MODULENAME}.SETTINGS.autoCollapseItemAttackChatCardContent.nonCollapsedDefault`,\n            ),\n        },\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"autoExpandDamageRolls\", {\n        name: `${MODULENAME}.SETTINGS.autoExpandDamageRolls.name`,\n        hint: `${MODULENAME}.SETTINGS.autoExpandDamageRolls.hint`,\n        scope: \"client\",\n        config: true,\n        default: \"collapsedDefault\",\n        type: String,\n        choices: {\n            collapsedAll: game.i18n.localize(`${MODULENAME}.SETTINGS.autoExpandDamageRolls.collapsedAll`),\n            expandedAll: game.i18n.localize(`${MODULENAME}.SETTINGS.autoExpandDamageRolls.expandedAll`),\n            expandedNew: game.i18n.localize(`${MODULENAME}.SETTINGS.autoExpandDamageRolls.expandedNew`),\n            expandedNewest: game.i18n.localize(`${MODULENAME}.SETTINGS.autoExpandDamageRolls.expandedNewest`),\n        },\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"basicActionMacroShowBestBonus\", {\n        name: `${MODULENAME}.macros.basicActionMacros.settings.showBestBonus.name`,\n        hint: `${MODULENAME}.macros.basicActionMacros.settings.showBestBonus.hint`,\n        scope: \"world\",\n        config: true,\n        default: true,\n        type: Boolean,\n    });\n\n    game.settings.register(MODULENAME, \"bamShowUnusable\", {\n        name: `${MODULENAME}.macros.basicActionMacros.bamShowUnusable.name`,\n        hint: `${MODULENAME}.macros.basicActionMacros.bamShowUnusable.hint`,\n        scope: \"client\",\n        config: true,\n        default: false,\n        type: Boolean,\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"bamTabview\", {\n        name: `${MODULENAME}.macros.basicActionMacros.bamTabview.name`,\n        hint: `${MODULENAME}.macros.basicActionMacros.bamTabview.hint`,\n        scope: \"client\",\n        config: true,\n        default: true,\n        type: Boolean,\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"customPauseImage\", {\n        name: `${MODULENAME}.SETTINGS.customPauseImage.name`,\n        hint: `${MODULENAME}.SETTINGS.customPauseImage.hint`,\n        scope: \"world\",\n        config: true,\n        default: \"\",\n        type: String,\n        filePicker: \"image\",\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"customPauseText\", {\n        name: `${MODULENAME}.SETTINGS.customPauseText.name`,\n        hint: `${MODULENAME}.SETTINGS.customPauseText.hint`,\n        scope: \"world\",\n        config: true,\n        default: \"\",\n        type: String,\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"customPauseRelocation\", {\n        name: `${MODULENAME}.SETTINGS.customPauseRelocation.name`,\n        hint: `${MODULENAME}.SETTINGS.customPauseRelocation.hint`,\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"logLevel\", {\n        name: `${MODULENAME}.SETTINGS.logLevel.name`,\n        hint: `${MODULENAME}.SETTINGS.logLevel.hint`,\n        scope: \"client\",\n        config: true,\n        default: 2,\n        type: Number,\n        choices: {\n            0: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.trace`),\n            1: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.debug`),\n            2: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.info`),\n            3: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.warn`),\n            4: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.error`),\n            5: game.i18n.localize(`${MODULENAME}.SETTINGS.logLevel.off`),\n        },\n        onChange: () => updateHooks(),\n    });\n\n    game.settings.register(MODULENAME, \"workbenchVersion\", {\n        name: `${MODULENAME}.SETTINGS.workbenchVersion.name`,\n        hint: `${MODULENAME}.SETTINGS.workbenchVersion.hint`,\n        scope: \"world\",\n        config: true,\n        default: \"3.34.0\",\n        type: String,\n        onChange: () => updateHooks(),\n    });\n}\n","export const AON_CREATURE_TYPES: string[] = [\n    \"aberration\",\n    \"animal\",\n    \"astral\",\n    \"beast\",\n    \"celestial\",\n    \"construct\",\n    \"dragon\",\n    \"dream\",\n    \"elemental\",\n    \"ethereal\",\n    \"fey\",\n    \"fiend\",\n    \"fungus\",\n    \"giant\",\n    \"humanoid\",\n    \"monitor\",\n    \"negative\",\n    \"ooze\",\n    \"petitioner\",\n    \"plant\",\n    \"positive\",\n    \"spirit\",\n    \"time\",\n    \"undead\",\n];\n\nexport const ELITE_WEAK: string[] = [\"elite\", \"weak\"];\n","import { TokenDocumentPF2e } from \"@scene\";\nimport { AON_CREATURE_TYPES, ELITE_WEAK } from \"../../xdy-pf2e-constants.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { TokenPF2e } from \"@module/canvas/token/object.js\";\n\nlet TRAITS: {\n    SIZES: string[];\n    RARITIES: string[];\n    PF2E_CREATURE_TRAITS: string[];\n    AON_CREATURE_TYPES: string[];\n    ELITE_WEAK: string[];\n};\n\nasync function fixesPreAndPost(settingkey: string): Promise<string> {\n    const fixSetting = String(game.settings.get(MODULENAME, settingkey));\n\n    // \"null\" check is due to a previous bug that may have left invalid data in text fields\n    if (fixSetting !== null && fixSetting !== \"null\" && fixSetting !== \"\") {\n        const table = game?.tables?.find((t) => t.name === fixSetting);\n        if (!table) {\n            const pack = game.packs.get(\"xdy-pf2e-workbench.xdy-internal-tables\");\n            if (pack) {\n                const index = await pack.getIndex();\n                const id = index.find((e) => e.name.includes(<string>fixSetting))?._id;\n                if (id) {\n                    const document = await pack?.getDocument(id);\n                    const draw = await (<RollTable>document).draw({ displayChat: false });\n                    if (draw && draw?.results[0]) {\n                        return draw?.results[0].getChatText();\n                    }\n                }\n            }\n        } else {\n            const draw = await table?.draw({ displayChat: false });\n            if (draw && draw?.results[0]) {\n                return draw?.results[0].getChatText();\n            }\n        }\n        return <string>fixSetting;\n    }\n    return \"\";\n}\n\nfunction fillTraits() {\n    TRAITS = {\n        RARITIES: Object.keys(CONFIG.PF2E.rarityTraits),\n        SIZES: Object.keys(CONFIG.PF2E.actorSizes),\n        AON_CREATURE_TYPES: AON_CREATURE_TYPES,\n        PF2E_CREATURE_TRAITS: Object.keys(CONFIG.PF2E.creatureTraits),\n        ELITE_WEAK: ELITE_WEAK,\n    };\n}\n\nfunction filterTraitList(traitsList: string[], prefix: string, postfix: string): string[] {\n    if (game.settings.get(MODULENAME, \"npcMystifierBlacklist\")) {\n        const blocklist =\n            String(game.settings.get(MODULENAME, \"npcMystifierBlacklist\")).toLocaleLowerCase().split(\",\") || null;\n        if (blocklist) {\n            traitsList = traitsList.filter((trait: string) => {\n                return !blocklist.map((trait: string) => trait.trim()).includes(trait);\n            });\n        }\n    }\n\n    let size: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseSize\")) {\n        size = traitsList.filter((trait: string) => TRAITS.SIZES.includes(trait));\n    }\n\n    let eliteWeak: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseEliteWeak\")) {\n        eliteWeak = traitsList.filter((trait: string) => TRAITS.ELITE_WEAK.includes(trait));\n    }\n\n    let rarities: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseRarities\")) {\n        rarities = traitsList.filter((trait: string) => TRAITS.RARITIES.includes(trait));\n        const replacement: string = String(\n            game.settings.get(MODULENAME, \"npcMystifierUseRaritiesReplacement\"),\n        ).toLocaleLowerCase();\n        if (replacement !== \"\") {\n            rarities = rarities.map((trait: string) => (trait !== \"common\" ? replacement : trait));\n        }\n    }\n\n    let aonCreatureTypes: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseCreatureTypesTraits\")) {\n        aonCreatureTypes = traitsList.filter((trait: string) => TRAITS.AON_CREATURE_TYPES.includes(trait));\n    }\n\n    let pf2eCreatureTraits: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseCreatureTraits\")) {\n        pf2eCreatureTraits = traitsList.filter((trait: string) => TRAITS.PF2E_CREATURE_TRAITS.includes(trait));\n    }\n\n    let others: string[] = [];\n    if (game.settings.get(MODULENAME, \"npcMystifierUseOtherTraits\")) {\n        others = traitsList\n            .filter((trait: string) => !TRAITS.ELITE_WEAK.includes(trait))\n            .filter((trait: string) => !TRAITS.SIZES.includes(trait))\n            .filter((trait: string) => !TRAITS.RARITIES.includes(trait))\n            .filter((trait: string) => !TRAITS.AON_CREATURE_TYPES.includes(trait))\n            .filter((trait: string) => !TRAITS.PF2E_CREATURE_TRAITS.includes(trait));\n    }\n\n    // Deduplicate using set\n    return Array.from(\n        new Set(\n            [prefix]\n                .concat(size)\n                .concat(eliteWeak)\n                .concat(rarities)\n                .concat(others)\n                .concat(aonCreatureTypes)\n                .concat(pf2eCreatureTraits)\n                .concat([postfix]),\n        ).values(),\n    );\n}\n\n/**\n * Generates a name from traits using the current mystification settings for a given token ID.\n *\n * @param {string} tokenId - The ID of the token.\n * @returns {Promise<void>} A promise that resolves with the generated name from traits.\n */\nexport async function generateNameFromTraitsForToken(tokenId: string) {\n    // @ts-ignore\n    const token = <TokenPF2e>(<unknown>game.scenes?.current?.tokens?.get(tokenId));\n    if (token) {\n        return generateNameFromTraits(token);\n    }\n}\n\nexport async function generateNameFromTraits(token: TokenPF2e | TokenDocumentPF2e) {\n    let result: any;\n    const traits = token?.actor?.system?.traits;\n    if (!TRAITS) {\n        fillTraits();\n    }\n\n    if (traits) {\n        let traitsList = <string[]>traits[\"value\"];\n        if (traitsList) {\n            const tokenRarities: any = traits.rarity;\n            if (tokenRarities) {\n                traitsList = traitsList.concat(tokenRarities);\n            }\n\n            const size = traits?.size?.value;\n            if (size) {\n                traitsList.push(size);\n            }\n\n            const actor: any = token.actor;\n            if (actor.system?.attributes?.adjustment) {\n                traitsList.push(actor.system?.attributes?.adjustment);\n            }\n\n            const prefix = (await fixesPreAndPost(\"npcMystifierPrefix\")) || \"\";\n            const postfix = (await fixesPreAndPost(\"npcMystifierPostfix\")) || \"\";\n            traitsList = filterTraitList(traitsList, prefix, postfix);\n\n            result = traitsList\n                .map((trait: string) => trait.trim())\n                .filter((trait: string, index: number) => {\n                    return traitsList.indexOf(trait) === index;\n                })\n                .filter((trait) => trait.trim().length > 0)\n                .map((trait: string) => {\n                    return trait?.charAt(0).toLocaleUpperCase() + trait?.slice(1);\n                })\n                .map((trait: string) => {\n                    const lowercaseTrait = trait.toLocaleLowerCase();\n                    if (TRAITS.ELITE_WEAK.includes(lowercaseTrait)) {\n                        switch (lowercaseTrait) {\n                            case TRAITS.ELITE_WEAK[0]:\n                                return game.i18n.localize(\"PF2E.NPC.Adjustment.EliteLabel\");\n                            case TRAITS.ELITE_WEAK[1]:\n                                return game.i18n.localize(\"PF2E.NPC.Adjustment.WeakLabel\");\n                        }\n                    } else if (TRAITS.SIZES.includes(lowercaseTrait)) {\n                        return game.i18n.localize(CONFIG.PF2E.actorSizes[lowercaseTrait]);\n                    }\n\n                    const translations: any = game.i18n.translations.PF2E ?? {};\n                    return (trait !== prefix && trait !== postfix ? translations[`Trait${trait}`] : trait) ?? trait;\n                })\n                .join(\" \");\n        }\n    } else {\n        // Shouldn't happen. But, just in case...\n        result = <string>game.settings.get(MODULENAME, \"npcMystifierNoMatch\");\n    }\n    return result;\n}\n","import { ScenePF2e, TokenDocumentPF2e } from \"@scene\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { ActorSystemData } from \"@actor/data/base.js\";\nimport { mystifyModifierKey, mystifyRandomPropertyType } from \"../../settings/index.js\";\nimport { generateNameFromTraits } from \"./traits-name-generator.js\";\nimport { logError } from \"../../utils.js\";\nimport { TokenPF2e } from \"@module/canvas/token/object.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\n\nfunction shouldSkipRandomProperty(token: TokenPF2e | TokenDocumentPF2e) {\n    return (\n        game.settings.get(MODULENAME, \"npcMystifierRandomPropertySkipForUnique\") &&\n        (<ActorSystemData>token?.actor?.system)?.traits?.rarity === \"unique\"\n    );\n}\n\nfunction hasRandomProperty(token: TokenPF2e | TokenDocumentPF2e) {\n    switch (mystifyRandomPropertyType) {\n        case \"numberPostfix\":\n        case \"wordPrefix\":\n            return token.name.split(\" \").length !== (token.actor?.prototypeToken.name.split(\" \") ?? [\"\"]).length;\n        default:\n            return false;\n    }\n}\n\nasync function fetchRandomWordPrefix(): Promise<string> {\n    const fixSetting = String(game.settings.get(MODULENAME, \"npcMystifierRandomWordPrefixRollTable\"));\n\n    // \"null\" check is due to a previous bug that may have left invalid data in text fields\n    if (fixSetting !== null && fixSetting !== \"null\" && fixSetting !== \"\") {\n        const table = game?.tables?.find((t) => t.name === fixSetting);\n        if (!table) {\n            const pack = game.packs.get(\"xdy-pf2e-workbench.xdy-internal-tables\");\n            if (pack) {\n                const index = await pack.getIndex();\n                const id = index.find((e) => e.name.includes(<string>fixSetting))?._id;\n                if (id) {\n                    const document = await pack?.getDocument(id);\n                    const draw = await (<RollTable>document).draw({ displayChat: false });\n                    if (draw && draw?.results[0]) {\n                        return draw?.results[0].getChatText();\n                    } else {\n                        return <string>fixSetting;\n                    }\n                }\n            }\n        }\n        const draw = await table?.draw({ displayChat: false });\n        if (draw && draw?.results[0]) {\n            return draw?.results[0].getChatText();\n        } else {\n            return <string>fixSetting;\n        }\n    }\n\n    logError(`Rolltable for ${fixSetting} setting not defined or not found.`);\n\n    return \"\";\n}\n\nexport async function buildTokenName(\n    token: TokenPF2e | TokenDocumentPF2e | null,\n    isMystified: boolean,\n): Promise<string> {\n    let tokenName = \"\";\n    if (token && token.actor) {\n        tokenName = token.name;\n        const keep = game.settings.get(MODULENAME, \"npcMystifierKeepRandomProperty\");\n        if (isMystified) {\n            if (keep && !shouldSkipRandomProperty(token)) {\n                switch (mystifyRandomPropertyType) {\n                    case \"numberPostfix\":\n                        tokenName = `${token.actor.prototypeToken.name} ${tokenName.match(/\\d+$/)?.[0] ?? \"\"}`.trim();\n                        break;\n                    case \"wordPrefix\":\n                        tokenName = `${(tokenName.match(/\\b([a-zA-Z0-9_-]+)\\b/) ?? [\"\"])[0]} ${\n                            token.actor.prototypeToken.name\n                        }`.trim();\n                        break;\n                    default:\n                        tokenName = token.actor.prototypeToken.name;\n                }\n            } else {\n                tokenName = token.actor.prototypeToken.name;\n            }\n        } else {\n            switch (game.settings.get(MODULENAME, \"npcMystifierUseOtherTraits\")) {\n                default:\n                    tokenName = await generateNameFromTraits(token);\n            }\n\n            if (hasRandomProperty(token) && keep && !shouldSkipRandomProperty(token)) {\n                switch (mystifyRandomPropertyType) {\n                    case \"numberPostfix\":\n                        tokenName = `${tokenName} ${token.name.match(/\\d+$/)?.[0] ?? \"\"}`.trim();\n                        break;\n                    case \"wordPrefix\":\n                        tokenName = `${(token.name.match(/\\b([a-zA-Z0-9_-]+)\\b/) ?? [\"\"])[0]} ${tokenName}`.trim();\n                        break;\n                    default:\n                        tokenName = token.actor.prototypeToken.name;\n                }\n            } else {\n                if (!shouldSkipRandomProperty(token)) {\n                    let rolled = 0;\n\n                    switch (mystifyRandomPropertyType) {\n                        case \"numberPostfix\":\n                            rolled = Math.floor(Math.random() * 100) + 1;\n                            // Retry once if the number is already used, can't be bothered to roll until unique or keep track of used numbers\n                            // @ts-ignore\n                            if (canvas?.scene?.tokens?.find((t) => t.name.endsWith(` ${rolled}`))) {\n                                rolled = Math.floor(Math.random() * 100) + 1;\n                            }\n                            tokenName += ` ${rolled}`;\n                            break;\n                        case \"wordPrefix\":\n                            tokenName = `${await fetchRandomWordPrefix()} ${tokenName}`.trim();\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    // Never return an empty string\n    return tokenName === \"\" ? String(game.settings.get(MODULENAME, \"npcMystifierNoMatch\")) : tokenName;\n}\n\nfunction isMystifyModifierKeyPressed() {\n    switch (mystifyModifierKey) {\n        case \"ALT\":\n            return game?.keyboard?.isModifierActive(KeyboardManager.MODIFIER_KEYS.ALT);\n        case \"CONTROL\":\n            return game?.keyboard?.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL);\n        case \"META\":\n            return game?.keyboard?.downKeys.has(\"MetaLeft\") || game?.keyboard?.downKeys.has(\"MetaRight\");\n        default:\n            return false;\n    }\n}\n\nexport async function tokenCreateMystification(token: any) {\n    const key = String(game.settings.get(MODULENAME, \"npcMystifierModifierKey\"));\n    if (\n        game.user?.isGM &&\n        token &&\n        !token?.actor?.hasPlayerOwner &&\n        key !== \"DISABLED\" &&\n        (key === \"ALWAYS\" || isMystifyModifierKeyPressed()) &&\n        (!game.keyboard?.downKeys.has(\"V\") || game.keyboard?.downKeys.has(\"Insert\"))\n    ) {\n        await doMystification(token, false);\n    }\n}\n\nexport function isTokenMystified(token: TokenPF2e | TokenDocumentPF2e | null): boolean {\n    const tokenName = token?.name;\n    const prototypeTokenName = token?.actor?.prototypeToken.name ?? \"\";\n\n    // TODO This needs improving. Basically, look at the various mystification settings and figure out what's been added, only check the non-added bits.\n    return (tokenName?.indexOf(prototypeTokenName) ?? -1) < 0;\n}\n\n/**\n * Takes a token ID and a boolean value to perform a mystification.\n *\n * @param {string} tokenId - The ID of the token.\n * @param {boolean} active - Whether the mystification should be active or not.\n * @return {Promise<void>} A promise that resolves when the mystification is complete.\n */\nexport async function doMystificationFromToken(tokenId: string, active: boolean) {\n    // @ts-ignore\n    const token = <TokenPF2e>(<unknown>game.scenes?.current?.tokens?.get(tokenId));\n    if (token) {\n        return doMystification(token, active);\n    }\n}\n\nexport async function doMystification(token: TokenPF2e, active: boolean) {\n    if (!token?.actor) {\n        return;\n    }\n\n    // define array of objects to be updated\n    const updates = [\n        {\n            _id: <string>token.id,\n            name: await buildTokenName(token, active),\n        },\n    ];\n\n    const scene: ScenePF2e | null = canvas?.scene;\n    const allOfActor = game.settings.get(MODULENAME, \"npcMystifierDemystifyAllTokensBasedOnTheSameActor\");\n    if (game.user?.isGM && isTokenMystified(token) && allOfActor) {\n        for (const sceneToken of scene?.tokens\n            ?.filter((t) => t.actor?.id === token?.actor?.id)\n            ?.filter((x) => isTokenMystified(x)) || []) {\n            updates.push({\n                _id: <string>sceneToken.id,\n                name: await buildTokenName(sceneToken, active),\n            });\n        }\n    }\n    // @ts-ignore\n    scene?.updateEmbeddedDocuments(\"Token\", updates, {}).then(() => {\n        if (game.combat) {\n            new Promise((resolve) => setTimeout(resolve, 50)).then(() => {\n                ui.combat?.render(true);\n                ui.combat.combats\n                    .filter((x) => x.combatants.filter((c) => c.actor?.id === token.actor?.id).length > 0)\n                    .forEach((c) => c.updateSource({}, { render: true }));\n            });\n        }\n    });\n}\n\nexport function renderNameHud(data: TokenDocumentPF2e, html: HTMLElement) {\n    let token: TokenPF2e | null;\n    if (canvas && canvas.tokens) {\n        token = canvas.tokens.get(<string>data._id) ?? null;\n\n        const title = isTokenMystified(token) ? \"Unmystify\" : \"Mystify\";\n        const toggle = document.createElement(\"div\");\n        toggle.className = `control-icon toggle ${isTokenMystified(token) ? \"active\" : \"\"}`;\n        toggle.setAttribute(\"data-action\", \"mystify\");\n\n        const icon = document.createElement(\"i\");\n        icon.className = \"fas fa-eye-slash\";\n        icon.title = title;\n\n        toggle.appendChild(icon);\n\n        if (canMystify() && !token?.actor?.hasPlayerOwner) {\n            toggle.addEventListener(\"click\", async (e) => {\n                const hudElement = e.currentTarget as HTMLElement;\n                const active = hudElement.classList.contains(\"active\");\n                if (token !== null && isTokenMystified(token) === active) {\n                    await doMystification(token, active);\n                }\n                hudElement.classList.toggle(\"active\");\n            });\n\n            const column = html.querySelector(\"div.col.left\");\n            if (column) {\n                column.appendChild(toggle);\n            }\n        }\n    }\n}\n\nexport function mangleNamesInChatMessage(message: ChatMessagePF2e, html: HTMLElement) {\n    const actorId = <string>message?.speaker?.actor;\n    const tokenId = message?.speaker?.token;\n    const actor = game.actors?.get(actorId);\n    const tokens = game.scenes?.active?.tokens ?? game.scenes?.current?.tokens ?? canvas?.scene?.tokens;\n    const token = tokens?.get(<string>tokenId);\n    const actionCard: Element | null = html.querySelector(\".action-card\");\n    const speakers: NodeListOf<Element> = html?.querySelectorAll(\".message-sender\");\n\n    const tokenName = token?.name || message.speaker.alias;\n    const tokenNameNoNumber = tokenName?.replace(/\\d+$/, \"\").trim();\n\n    if (tokenNameNoNumber && actor?.prototypeToken.name?.trim() !== tokenNameNoNumber) {\n        if (actionCard && actionCard.innerHTML) {\n            actionCard.innerHTML = actionCard.innerHTML.replace(\n                new RegExp(<string>actor?.prototypeToken.name, \"gi\"),\n                tokenName,\n            );\n        }\n        speakers.forEach((speaker) => {\n            if (speaker.innerHTML) {\n                speaker.innerHTML = speaker.innerHTML.replace(message.speaker.alias, tokenName);\n            }\n        });\n        message.speaker.alias = tokenName;\n    }\n}\n\nexport function canMystify() {\n    return game.user?.isGM && canvas && canvas.tokens;\n}\n","// These usecases should be handled\n// * Show a new handle  r, set timeout to 60, ignore on the first, none on the second\n// * Check on an existing timer, recalc timeout, ignore on the first, none on the second\n// * Timeout, recalc timeout, ignore on the first, random on the second\n\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { pushNotification } from \"../../utils.js\";\n\nexport enum HPHState {\n    Start,\n    Check,\n    Timeout,\n}\n\nconst ONE_MINUTE_IN_MS = 60 * 1000;\n\nasync function stopTimer() {\n    await game.user?.unsetFlag(MODULENAME, \"heroPointHandler.startTime\");\n    await game.user?.unsetFlag(MODULENAME, \"heroPointHandler.remainingMinutes\");\n    await game.user?.unsetFlag(MODULENAME, \"heroPointHandler.timeout\");\n}\n\nexport async function startTimer(remainingMinutes: number) {\n    const oldTimeout = <NodeJS.Timeout>game.user?.getFlag(MODULENAME, \"heroPointHandler.timeout\");\n    if (oldTimeout) {\n        clearTimeout(oldTimeout);\n    }\n    if (remainingMinutes > 0) {\n        const ms = remainingMinutes * ONE_MINUTE_IN_MS;\n        const timeout = setTimeout(async () => {\n            await heroPointHandler(HPHState.Timeout);\n        }, ms);\n\n        const updateData = {\n            flags: {\n                \"xdy-pf2e-workbench\": {\n                    heroPointHandler: {\n                        startTime: game.time.serverTime,\n                        remainingMinutes: remainingMinutes,\n                        timeout: timeout,\n                    },\n                },\n            },\n        };\n        await game.user?.update(updateData);\n    } else if (!remainingMinutes || remainingMinutes <= 0) {\n        await stopTimer();\n    }\n}\n\n/**\n * Calls the heroPointHandler function with the HPHState.Timeout parameter.\n *\n * @return {Promise<any>} The result of the heroPointHandler function.\n */\nexport async function callHeroPointHandler() {\n    return heroPointHandler(HPHState.Timeout);\n}\n\nexport function createRemainingTimeMessage(remainingMinutes: number) {\n    const message =\n        remainingMinutes > 0\n            ? game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.willBeResetIn`, {\n                  remainingMinutes: remainingMinutes,\n                  time: new Date(Date.now() + remainingMinutes * ONE_MINUTE_IN_MS).toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                  }),\n              })\n            : game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.timerStopped`);\n    sendMessage(message, [game.user.id]);\n}\n\nexport async function heroPointHandler(state: HPHState) {\n    if (\n        Object.values(ui.windows).find((w: Application) =>\n            w.title.includes(`${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.title`)}`),\n        )\n    ) {\n        return;\n    }\n\n    let remainingMinutes: number;\n    switch (state) {\n        case HPHState.Start:\n            remainingMinutes = Number.parseInt(\n                String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\")),\n            );\n            break;\n        case HPHState.Check:\n            remainingMinutes = calcRemainingMinutes(true);\n            break;\n        case HPHState.Timeout:\n            remainingMinutes = Number.parseInt(\n                String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\")),\n            );\n            break;\n    }\n\n    const title: any = `${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.title`)} (${\n        remainingMinutes\n            ? remainingMinutes + \" \" + game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.minutesLeft`)\n            : game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.noRunningTimer`)\n    })`;\n\n    const content = await buildHtml(remainingMinutes, state);\n\n    let button: string | null = null;\n    const handlerDialog = new Dialog({\n        title: title,\n        content,\n        buttons: {\n            timer: {\n                icon: '<i class=\"fas fa-hourglass\"></i>',\n                label: `${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.startTimerLabel`)}`,\n                callback: async (html: any) => {\n                    remainingMinutes = handleDialogResponse(html);\n                    button = \"timer\";\n                },\n            },\n            noTimer: {\n                label: `${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.noTimerLabel`)}`,\n                callback: async (html) => {\n                    handleDialogResponse(html);\n                    remainingMinutes = 0;\n                    button = \"noTimer\";\n                },\n            },\n        },\n        default: \"timer\",\n        close: async () => {\n            switch (button) {\n                case \"timer\":\n                    await startTimer(remainingMinutes);\n                    break;\n                case \"noTimer\":\n                    await stopTimer();\n                    break;\n            }\n            createRemainingTimeMessage(remainingMinutes);\n            return;\n        },\n    });\n    handlerDialog.render(true);\n}\n\nasync function buildHtml(remainingMinutes: number, state: HPHState) {\n    // TODO How to start using bootstrap? (I use bootstrap classes in the html).\n    // TODO Extract to a handlebars template\n\n    // TODO Get user name, add within parentheses after actor name\n    let charactersContent = \"\";\n    const actors = heroes();\n\n    let checked: number;\n    switch (state) {\n        case HPHState.Start:\n            checked = -1;\n            break;\n        case HPHState.Timeout:\n            checked = actors.length > 0 ? Math.floor(Math.random() * actors.length) : -1;\n            break;\n        case HPHState.Check:\n            checked = -1;\n            break;\n    }\n\n    const startContent = `\n<div class=\"form-group\">\n<div>${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.instructions`)}</div>\n<hr>\n  <label class=\"col-md-4 control-label\" for=\"radios\">${game.i18n.localize(\n      `${MODULENAME}.SETTINGS.heroPointHandler.doWhat`,\n  )}</label>\n  <div class=\"col-md-4\">\n      <div class=\"radio\">\n        <label for=\"sessionStart-0\">\n          <input type=\"radio\" name=\"sessionStart\" id=\"sessionStart-0\" value=\"RESET\">\n          ${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.resetTo`)}\n        </label>\n      </div>\n      <div class=\"radio\">\n        <label for=\"sessionStart-1\">\n          <input type=\"radio\" name=\"sessionStart\" id=\"sessionStart-1\" value=\"ADD\">\n          ${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.add`)}\n        </label>\n      </div>\n      <div class=\"radio\">\n        <label for=\"sessionStart-2\">\n          <input type=\"radio\" name=\"sessionStart\" id=\"sessionStart-2\" value=\"IGNORE\" checked=\"checked\">\n          ${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.ignore`)}\n        </label>\n      </div>\n  </div>\n</div>\n\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" for=\"heropoints\">${game.i18n.localize(\n      `${MODULENAME}.SETTINGS.heroPointHandler.thisMany`,\n  )}</label>\n  <div class=\"col-md-4\">\n    <input id=\"heropoints\" name=\"heropoints\" type=\"number\" value=\"1\" class=\"form-control input-md\">\n  </div>\n</div>\n\n<hr>\n<div class=\"form-group\">\n  <label class=\"col-md-4 control-label\" for=\"characters\">${game.i18n.localize(\n      `${MODULENAME}.SETTINGS.heroPointHandler.addOne`,\n  )}</label>\n  <div class=\"col-md-4\">`;\n\n    for (let i = 0; i < actors.length; i++) {\n        charactersContent += `\n    <div class=\"radio\">\n        <label for=\"characters-${i}\">\n          <input type=\"radio\" name=\"characters\" id=\"characters-${i}\" value=\"${actors[i]?.id}\" ${\n              checked === i ? 'checked=\"checked\"' : \"\"\n          }>\n          ${actors[i]?.name}\n        </label>\n    </div>`;\n    }\n\n    const maxMinutes = Number.parseInt(String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\")));\n    const remainingContent = `\n  <div class=\"radio\">\n    <label for=\"characters-NONE\">\n      <input type=\"radio\" name=\"characters\" id=\"characters-NONE\" value=\"NONE\" ${\n          checked === -1 ? 'checked=\"checked\"' : \"\"\n      }>\n      ${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.none`)}\n    </label>\n  </div>\n</div>\n\n<hr>\n<script>$(\"#timerTextId\").on(\"input\", function () {\n    const value = $(this).val();\n    if ((value !== \"\") && (value.indexOf(\".\") === -1)) {\n        $(this).val(Math.max(Math.min(value, ${Number.parseInt(\n            String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\")),\n        )}), 0));\n    }\n});</script>\n<div class=\"form-group\">\n  <div class=\"col-md-4\">\n    <div class=\"input-group\">\n      <span class=\"input-group-addon\">${game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.timerValue`, {\n          maxMinutes: maxMinutes,\n      })}</span>\n      <input id=\"timerTextId\" name=\"timerText\" class=\"form-control\" value=\"${\n          remainingMinutes || maxMinutes\n      }\" type=\"number\">\n    </div>\n    <p class=\"help-block\">${game.i18n.localize(`${MODULENAME}.SETTINGS.heroPointHandler.showAfter`)}</p>\n  </div>\n</div>\n`;\n\n    return startContent + charactersContent + remainingContent;\n}\n\nexport function calcRemainingMinutes(useDefault: boolean): number {\n    const savedTime: number = <number>game.user?.getFlag(MODULENAME, \"heroPointHandler.startTime\");\n    const savedMinutes = <number>game.user?.getFlag(MODULENAME, \"heroPointHandler.remainingMinutes\");\n    const remainingMinutes: number = Math.clamped(\n        savedMinutes ??\n            (useDefault\n                ? Number.parseInt(String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\")))\n                : 0),\n        0,\n        Number.parseInt(String(game.settings.get(MODULENAME, \"heroPointHandlerDefaultTimeoutMinutes\"))),\n    );\n    const passedMillis = game.time.serverTime - (savedTime ?? game.time.serverTime);\n    return remainingMinutes - Math.floor(passedMillis / ONE_MINUTE_IN_MS);\n}\n\n/**\n * Retrieves the list of party members that are characters (i.e. have heropoints.)\n *\n * @return {Array<Actor>} The list of hero actors.\n */\nfunction heroes() {\n    return (\n        game.actors?.party?.members\n            .filter((actor) => actor.isOfType(\"character\"))\n            .filter((actor) => !actor.system.traits?.value.toString().includes(\"minion\"))\n            .filter((actor) => !actor.system.traits?.value.toString().includes(\"eidolon\")) || []\n    );\n}\n\n/**\n * Resets the hero points for all heroes in the game.\n *\n * @param {number} heropoints - The number of hero points to set for each hero.\n * @return {Promise<void>} - A promise that resolves when all hero points have been updated.\n */\nexport async function resetHeroPoints(heropoints: number) {\n    for (const actor of heroes()) {\n        await actor.update({\n            // TODO Fix type.\n            \"system.resources.heroPoints.value\": Math.min(heropoints, (<any>actor).system.resources.heroPoints.max),\n        });\n    }\n}\n\n/**\n * Adds hero points to the specified actor or all actors.\n *\n * @param {number} heropoints - The number of hero points to add.\n * @param {any} [actorId=\"ALL\"] - The ID of the actor to add hero points to. If \"ALL\" is specified, hero points will be added to all actors.\n * @return {Promise<void>} - A promise that resolves when the hero points have been added.\n */\nexport async function addHeroPoints(heropoints: number, actorId: any = \"ALL\") {\n    let actors;\n    switch (actorId) {\n        case \"ALL\":\n            actors = heroes();\n            break;\n        case \"NONE\":\n            actors = [];\n            break;\n        default:\n            actors = [game.actors?.get(actorId)];\n            break;\n    }\n\n    for (const actor of actors) {\n        const system = actor.system;\n        const value = Math.min(\n            system.resources.heroPoints.value + heropoints,\n            (<any>actor).system.resources.heroPoints.max,\n        );\n        await actor.update({\n            \"system.resources.heroPoints.value\": value,\n        });\n    }\n}\n\nfunction addOneToSelectedCharacterIfAny(actorId: string): void {\n    addHeroPoints(1, actorId).then(() => {\n        const name = game?.actors?.find((actor) => actor.id === actorId)?.name;\n        let message: any;\n        if (actorId === \"ALL\") {\n            message = game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.addedToForAll`, {\n                heroPoints: 1,\n            });\n        } else if (name) {\n            message = game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.addedFor`, {\n                name: name,\n            });\n        }\n        if (message) {\n            sendMessage(message);\n            if (game.settings.get(MODULENAME, \"heropointHandlerNotification\")) {\n                pushNotification(message);\n            }\n        }\n    });\n}\n\nfunction sendMessage(message: string, whisper: string[] | undefined = undefined) {\n    if (game.settings.get(MODULENAME, \"heropointHandlerNotificationChat\")) {\n        ChatMessage.create({ flavor: message, whisper }, {}).then();\n    } else {\n        ui.notifications?.notify(message);\n    }\n}\n\nfunction handleDialogResponse(html: any) {\n    const sessionStart = html.find('input[name=\"sessionStart\"]:checked').val();\n    const heroPoints = parseInt(html.find('input[name=\"heropoints\"]').val());\n    const actorId = html.find('input[name=\"characters\"]:checked').val();\n    const remainingMinutes = parseInt(html.find('input[name=\"timerText\"]').val());\n\n    if (sessionStart === \"RESET\") {\n        resetHeroPoints(heroPoints).then(() => {\n            const message = game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.resetToForAll`, {\n                heroPoints: heroPoints,\n            });\n            sendMessage(message);\n            addOneToSelectedCharacterIfAny(actorId);\n        });\n    } else if (sessionStart === \"ADD\") {\n        addHeroPoints(heroPoints).then(() => {\n            const message = game.i18n.format(`${MODULENAME}.SETTINGS.heroPointHandler.addedToForAll`, {\n                heroPoints: heroPoints,\n            });\n\n            sendMessage(message);\n            addOneToSelectedCharacterIfAny(actorId);\n        });\n    } else if (sessionStart === \"IGNORE\") {\n        addOneToSelectedCharacterIfAny(actorId);\n    }\n\n    return remainingMinutes;\n}\n","import { ActorPF2e } from \"@actor\";\nimport { shouldIHandleThis } from \"../../utils.js\";\n\n/**\n * Moves the selected combatant ahead of the current combatant.\n *\n * @param {type} selectedCombatantId - The ID of the selected combatant.\n * @return {Promise<void>} A promise that resolves when the selected combatant has been moved.\n */\nexport async function moveSelectedAheadOfCurrent(selectedCombatantId): Promise<void> {\n    // TODO Ugly hack, might want to do a PR to expose the code in encounter-tracker#setInitiativeFromDrop?\n    // TODO Handle moving several tokens at once? For now, just take the first selected token.\n    const combat = game?.combat;\n    if (combat && selectedCombatantId && selectedCombatantId !== combat?.combatant?.id) {\n        const previous = combat?.combatants\n            .map((c) => ({\n                initiative: c.initiative || 0,\n            }))\n            .sort((a, b) => a.initiative - b.initiative)\n            .find((c) => {\n                return c.initiative > <number>combat?.combatant?.initiative;\n            })?.initiative;\n        const current = <number>combat?.combatant?.initiative;\n        const initiative = !previous || previous < current ? current + 2 : <number>((previous + current) / 2) || 0;\n        await combat?.setInitiative(<string>selectedCombatantId, initiative);\n    }\n}\n\nexport function moveOnZeroHP(actor: ActorPF2e): void {\n    const combatant = game.combat?.getCombatantByToken(\n        actor.isToken\n            ? <string>actor.token?.id\n            : <string>canvas?.scene?.tokens?.find((t) => t.actor?.id === actor.id)?.id,\n    );\n    if (shouldIHandleThis(actor) && combatant && combatant.id !== game.combat?.combatant?.id) {\n        moveSelectedAheadOfCurrent(combatant.id).then();\n    }\n}\n","import { logInfo } from \"./utils.js\";\nimport { MODULENAME } from \"./xdy-pf2e-workbench.js\";\nimport { canMystify, doMystification, isTokenMystified } from \"./feature/tokenMystificationHandler/index.js\";\nimport { calcRemainingMinutes, heroPointHandler, HPHState } from \"./feature/heroPointHandler/index.js\";\nimport { moveSelectedAheadOfCurrent } from \"./feature/initiativeHandler/index.js\";\nimport { TokenPF2e } from \"@module/canvas/token/object.js\";\n\nexport function registerWorkbenchKeybindings() {\n    logInfo(`${MODULENAME} | registerKeybindings`);\n\n    const keybindings = game.keybindings;\n\n    keybindings.register(MODULENAME, \"addUserTargets\", {\n        name: `${MODULENAME}.SETTINGS.addUserTargets.name`,\n        hint: `${MODULENAME}.SETTINGS.addUserTargets.hint`,\n        restricted: true,\n        editable: [],\n        onDown: () => {\n            const map = game.users\n                .filter((user) => !user.isGM)\n                .map((user) => {\n                    return { label: user.name, key: user.id };\n                });\n\n            let content = `<div style=\"display: flex; line-height: 2rem;\">\n        <label style=\"flex-grow: 1;\" for=\"dialogUserId\">User</label>\n        <select style=\"height: 2rem;\" id=\"dialogUserId\">`;\n            for (const { key, label } of map) {\n                content += `<option value=\"${key}\">${label}</option>`;\n            }\n            content += `</div></select>`;\n\n            const d = new Dialog({\n                title: game.i18n.localize(`${MODULENAME}.SETTINGS.addUserTargets.title`),\n                content,\n                buttons: {\n                    addFor: {\n                        icon: '<i class=\"fas fa-users\"></i>',\n                        label: game.i18n.localize(`${MODULENAME}.SETTINGS.addUserTargets.addFor`),\n                        callback: async (html) => {\n                            const targets: TokenPF2e[] = <TokenPF2e[]>(\n                                Array.from(canvas.tokens?.controlled).concat(\n                                    canvas.tokens.placeables.filter((it) => it.mouseInteractionManager.state === 1),\n                                )\n                            );\n                            const user: any = game.users.find(\n                                (u) => u.id === (html.find(\"#dialogUserId\").val() as string),\n                            );\n                            if (game.user?.isGM && targets && user) {\n                                for (const t of targets) {\n                                    t.setTarget(true, { user: user, releaseOthers: false });\n                                    user.targets.add(t);\n                                }\n                            }\n                        },\n                    },\n                    clearFor: {\n                        icon: '<i class=\"fas fa-users-slash\"></i>',\n                        label: game.i18n.localize(`${MODULENAME}.SETTINGS.addUserTargets.clearFor`),\n                        callback: async (html: JQuery) => {\n                            const user: any = game.users.find(\n                                (u) => u.id === (html.find(\"#dialogUserId\").val() as string),\n                            );\n                            if (game.user?.isGM && user) {\n                                const targets = user.targets;\n                                for (const t of targets) {\n                                    t.setTarget(false, { user: user, releaseOthers: false });\n                                }\n                            }\n                        },\n                    },\n                },\n                default: \"addFor\",\n            });\n            d.render(true);\n            return true;\n        },\n    });\n\n    keybindings.register(MODULENAME, \"heroPointHandler\", {\n        name: `${MODULENAME}.SETTINGS.heroPointHandlerKey.name`,\n        hint: `${MODULENAME}.SETTINGS.heroPointHandlerKey.hint`,\n        restricted: true,\n        editable: [],\n        onDown: () => {\n            if (game.user?.isGM && game.settings.get(MODULENAME, \"heroPointHandler\")) {\n                heroPointHandler(calcRemainingMinutes(false) > 0 ? HPHState.Check : HPHState.Start).then();\n            }\n            return true;\n        },\n    });\n\n    // Move combatant\n    keybindings.register(MODULENAME, \"moveBeforeCurrentCombatantKey\", {\n        name: `${MODULENAME}.SETTINGS.moveBeforeCurrentCombatantKey.name`,\n        hint: `${MODULENAME}.SETTINGS.moveBeforeCurrentCombatantKey.hint`,\n        restricted: true,\n        editable: [],\n        onDown: () => {\n            if (game.user?.isGM) {\n                const combatantByToken: any = game?.combat?.getCombatantByToken(\n                    <string>canvas?.tokens?.controlled[0].id,\n                );\n                moveSelectedAheadOfCurrent(combatantByToken).then();\n            }\n            return true;\n        },\n    });\n\n    // Mystification\n    keybindings.register(MODULENAME, \"npcMystifierMystifyKey\", {\n        name: `${MODULENAME}.SETTINGS.npcMystifierMystifyKey.name`,\n        hint: `${MODULENAME}.SETTINGS.npcMystifierMystifyKey.hint`,\n        restricted: true,\n        editable: [],\n        onDown: () => {\n            if (game.settings.get(MODULENAME, \"npcMystifier\")) {\n                if (canMystify()) {\n                    for (const token of canvas?.tokens?.controlled.filter((t) => !t.actor?.hasPlayerOwner) || []) {\n                        doMystification(token, isTokenMystified(token)).then();\n                    }\n                } else {\n                    ui.notifications?.warn(game.i18n.localize(`${MODULENAME}.SETTINGS.notifications.cantMystify`));\n                }\n                return true;\n            }\n            return false;\n        },\n        reservedModifiers: [],\n        // @ts-ignore\n        precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n    });\n\n    // Macro keybinds\n    for (let page = 1; page <= 5; page++) {\n        for (let column = 1; column <= 10; column++) {\n            keybindings.register(MODULENAME, `callHotbarPage${page}Macro${column}`, {\n                name: game.i18n.format(`${MODULENAME}.SETTINGS.callHotbarMacro.name`, { page: page, column: column }),\n                hint: game.i18n.format(`${MODULENAME}.SETTINGS.callHotbarMacro.hint`, { page: page, column: column }),\n                restricted: false,\n                editable: [],\n                onDown: () => {\n                    game.user?.getHotbarMacros(page)?.[column - 1][\"macro\"].execute();\n                    return true;\n                },\n            });\n        }\n    }\n}\n","/* Copyright 2020 Andrew Cuccinello, 2022 Jonas Karlsson\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SCALE_APP_DATA = {\n    hitPoints: [\n        {\n            level: -1,\n            high: { minimum: 9, maximum: 10, die: 2 },\n            moderate: { minimum: 7, maximum: 8, die: 2 },\n            low: { minimum: 5, maximum: 6, die: 2 },\n        },\n        {\n            level: 0,\n            high: { minimum: 17, maximum: 20, die: 4 },\n            moderate: { minimum: 14, maximum: 16, die: 3 },\n            low: { minimum: 11, maximum: 13, die: 3 },\n        },\n        {\n            level: 1,\n            high: { minimum: 24, maximum: 26, die: 3 },\n            moderate: { minimum: 19, maximum: 21, die: 3 },\n            low: { minimum: 14, maximum: 16, die: 3 },\n        },\n        {\n            level: 2,\n            high: { minimum: 36, maximum: 40, die: 5 },\n            moderate: { minimum: 28, maximum: 32, die: 5 },\n            low: { minimum: 21, maximum: 25, die: 5 },\n        },\n        {\n            level: 3,\n            high: { minimum: 53, maximum: 59, die: 7 },\n            moderate: { minimum: 42, maximum: 48, die: 7 },\n            low: { minimum: 31, maximum: 37, die: 7 },\n        },\n        {\n            level: 4,\n            high: { minimum: 72, maximum: 78, die: 7 },\n            moderate: { minimum: 57, maximum: 63, die: 7 },\n            low: { minimum: 42, maximum: 48, die: 7 },\n        },\n        {\n            level: 5,\n            high: { minimum: 91, maximum: 97, die: 7 },\n            moderate: { minimum: 72, maximum: 78, die: 7 },\n            low: { minimum: 53, maximum: 59, die: 7 },\n        },\n        {\n            level: 6,\n            high: { minimum: 115, maximum: 123, die: 9 },\n            moderate: { minimum: 91, maximum: 99, die: 9 },\n            low: { minimum: 67, maximum: 75, die: 9 },\n        },\n        {\n            level: 7,\n            high: { minimum: 140, maximum: 148, die: 9 },\n            moderate: { minimum: 111, maximum: 119, die: 9 },\n            low: { minimum: 82, maximum: 90, die: 9 },\n        },\n        {\n            level: 8,\n            high: { minimum: 165, maximum: 173, die: 9 },\n            moderate: { minimum: 131, maximum: 139, die: 9 },\n            low: { minimum: 97, maximum: 105, die: 9 },\n        },\n        {\n            level: 9,\n            high: { minimum: 190, maximum: 198, die: 9 },\n            moderate: { minimum: 151, maximum: 159, die: 9 },\n            low: { minimum: 112, maximum: 120, die: 9 },\n        },\n        {\n            level: 10,\n            high: { minimum: 215, maximum: 223, die: 9 },\n            moderate: { minimum: 171, maximum: 179, die: 9 },\n            low: { minimum: 127, maximum: 135, die: 9 },\n        },\n        {\n            level: 11,\n            high: { minimum: 240, maximum: 248, die: 9 },\n            moderate: { minimum: 191, maximum: 199, die: 9 },\n            low: { minimum: 142, maximum: 150, die: 9 },\n        },\n        {\n            level: 12,\n            high: { minimum: 265, maximum: 273, die: 9 },\n            moderate: { minimum: 211, maximum: 219, die: 9 },\n            low: { minimum: 157, maximum: 165, die: 9 },\n        },\n        {\n            level: 13,\n            high: { minimum: 290, maximum: 298, die: 9 },\n            moderate: { minimum: 231, maximum: 239, die: 9 },\n            low: { minimum: 172, maximum: 180, die: 9 },\n        },\n        {\n            level: 14,\n            high: { minimum: 315, maximum: 323, die: 9 },\n            moderate: { minimum: 251, maximum: 259, die: 9 },\n            low: { minimum: 187, maximum: 195, die: 9 },\n        },\n        {\n            level: 15,\n            high: { minimum: 340, maximum: 348, die: 9 },\n            moderate: { minimum: 271, maximum: 279, die: 9 },\n            low: { minimum: 202, maximum: 210, die: 9 },\n        },\n        {\n            level: 16,\n            high: { minimum: 365, maximum: 373, die: 9 },\n            moderate: { minimum: 291, maximum: 299, die: 9 },\n            low: { minimum: 217, maximum: 225, die: 9 },\n        },\n        {\n            level: 17,\n            high: { minimum: 390, maximum: 398, die: 9 },\n            moderate: { minimum: 311, maximum: 319, die: 9 },\n            low: { minimum: 232, maximum: 240, die: 9 },\n        },\n        {\n            level: 18,\n            high: { minimum: 415, maximum: 423, die: 9 },\n            moderate: { minimum: 331, maximum: 339, die: 9 },\n            low: { minimum: 247, maximum: 255, die: 9 },\n        },\n        {\n            level: 19,\n            high: { minimum: 440, maximum: 448, die: 9 },\n            moderate: { minimum: 351, maximum: 359, die: 9 },\n            low: { minimum: 262, maximum: 270, die: 9 },\n        },\n        {\n            level: 20,\n            high: { minimum: 465, maximum: 473, die: 9 },\n            moderate: { minimum: 371, maximum: 379, die: 9 },\n            low: { minimum: 277, maximum: 285, die: 9 },\n        },\n        {\n            level: 21,\n            high: { minimum: 495, maximum: 505, die: 11 },\n            moderate: { minimum: 395, maximum: 405, die: 11 },\n            low: { minimum: 295, maximum: 305, die: 11 },\n        },\n        {\n            level: 22,\n            high: { minimum: 532, maximum: 544, die: 13 },\n            moderate: { minimum: 424, maximum: 436, die: 13 },\n            low: { minimum: 317, maximum: 329, die: 13 },\n        },\n        {\n            level: 23,\n            high: { minimum: 569, maximum: 581, die: 13 },\n            moderate: { minimum: 454, maximum: 466, die: 13 },\n            low: { minimum: 339, maximum: 351, die: 13 },\n        },\n        {\n            level: 24,\n            high: { minimum: 617, maximum: 633, die: 17 },\n            moderate: { minimum: 492, maximum: 508, die: 17 },\n            low: { minimum: 367, maximum: 383, die: 17 },\n        },\n    ],\n    abilityScore: [\n        { level: -1, extreme: 3, high: 3, moderate: 2, low: 0, terrible: -4, abysmal: -5 },\n        { level: 0, extreme: 3, high: 3, moderate: 2, low: 0, terrible: -4, abysmal: -5 },\n        { level: 1, extreme: 5, high: 4, moderate: 3, low: 1, terrible: -4, abysmal: -5 },\n        { level: 2, extreme: 5, high: 4, moderate: 3, low: 1, terrible: -4, abysmal: -5 },\n        { level: 3, extreme: 5, high: 4, moderate: 3, low: 1, terrible: -4, abysmal: -5 },\n        { level: 4, extreme: 6, high: 5, moderate: 3, low: 2, terrible: -4, abysmal: -5 },\n        { level: 5, extreme: 6, high: 5, moderate: 4, low: 2, terrible: -4, abysmal: -5 },\n        { level: 6, extreme: 7, high: 5, moderate: 4, low: 2, terrible: -4, abysmal: -5 },\n        { level: 7, extreme: 7, high: 6, moderate: 4, low: 2, terrible: -4, abysmal: -5 },\n        { level: 8, extreme: 7, high: 6, moderate: 4, low: 3, terrible: -4, abysmal: -5 },\n        { level: 9, extreme: 7, high: 6, moderate: 4, low: 3, terrible: -4, abysmal: -5 },\n        { level: 10, extreme: 8, high: 7, moderate: 5, low: 3, terrible: -4, abysmal: -5 },\n        { level: 11, extreme: 8, high: 7, moderate: 5, low: 3, terrible: -4, abysmal: -5 },\n        { level: 12, extreme: 8, high: 7, moderate: 5, low: 4, terrible: -4, abysmal: -5 },\n        { level: 13, extreme: 9, high: 8, moderate: 5, low: 4, terrible: -4, abysmal: -5 },\n        { level: 14, extreme: 9, high: 8, moderate: 5, low: 4, terrible: -4, abysmal: -5 },\n        { level: 15, extreme: 9, high: 8, moderate: 6, low: 4, terrible: -4, abysmal: -5 },\n        { level: 16, extreme: 10, high: 9, moderate: 6, low: 5, terrible: -4, abysmal: -5 },\n        { level: 17, extreme: 10, high: 9, moderate: 6, low: 5, terrible: -4, abysmal: -5 },\n        { level: 18, extreme: 10, high: 9, moderate: 6, low: 5, terrible: -4, abysmal: -5 },\n        { level: 19, extreme: 11, high: 10, moderate: 6, low: 5, terrible: -4, abysmal: -5 },\n        { level: 20, extreme: 11, high: 10, moderate: 7, low: 6, terrible: -4, abysmal: -5 },\n        { level: 21, extreme: 11, high: 10, moderate: 7, low: 6, terrible: -4, abysmal: -5 },\n        { level: 22, extreme: 11, high: 10, moderate: 8, low: 6, terrible: -4, abysmal: -5 },\n        { level: 23, extreme: 11, high: 10, moderate: 8, low: 6, terrible: -4, abysmal: -5 },\n        { level: 24, extreme: 13, high: 12, moderate: 9, low: 7, terrible: -4, abysmal: -5 },\n    ],\n    savingThrow: [\n        { level: -1, extreme: 9, high: 8, moderate: 5, low: 2, terrible: 0 },\n        { level: 0, extreme: 10, high: 9, moderate: 6, low: 3, terrible: 1 },\n        { level: 1, extreme: 11, high: 10, moderate: 7, low: 4, terrible: 2 },\n        { level: 2, extreme: 12, high: 11, moderate: 8, low: 5, terrible: 3 },\n        { level: 3, extreme: 14, high: 12, moderate: 9, low: 6, terrible: 4 },\n        { level: 4, extreme: 15, high: 14, moderate: 11, low: 8, terrible: 6 },\n        { level: 5, extreme: 17, high: 15, moderate: 12, low: 9, terrible: 7 },\n        { level: 6, extreme: 18, high: 17, moderate: 14, low: 11, terrible: 8 },\n        { level: 7, extreme: 20, high: 18, moderate: 15, low: 12, terrible: 10 },\n        { level: 8, extreme: 21, high: 19, moderate: 16, low: 13, terrible: 11 },\n        { level: 9, extreme: 23, high: 21, moderate: 18, low: 15, terrible: 12 },\n        { level: 10, extreme: 24, high: 22, moderate: 19, low: 16, terrible: 14 },\n        { level: 11, extreme: 26, high: 24, moderate: 21, low: 18, terrible: 15 },\n        { level: 12, extreme: 27, high: 25, moderate: 22, low: 19, terrible: 16 },\n        { level: 13, extreme: 29, high: 26, moderate: 23, low: 20, terrible: 18 },\n        { level: 14, extreme: 30, high: 28, moderate: 25, low: 22, terrible: 19 },\n        { level: 15, extreme: 32, high: 29, moderate: 26, low: 23, terrible: 20 },\n        { level: 16, extreme: 33, high: 30, moderate: 28, low: 25, terrible: 22 },\n        { level: 17, extreme: 35, high: 32, moderate: 29, low: 26, terrible: 23 },\n        { level: 18, extreme: 36, high: 33, moderate: 30, low: 27, terrible: 24 },\n        { level: 19, extreme: 38, high: 35, moderate: 32, low: 29, terrible: 26 },\n        { level: 20, extreme: 39, high: 36, moderate: 33, low: 30, terrible: 27 },\n        { level: 21, extreme: 41, high: 38, moderate: 35, low: 32, terrible: 28 },\n        { level: 22, extreme: 43, high: 39, moderate: 36, low: 33, terrible: 30 },\n        { level: 23, extreme: 44, high: 40, moderate: 37, low: 34, terrible: 31 },\n        { level: 24, extreme: 46, high: 42, moderate: 38, low: 36, terrible: 32 },\n    ],\n    armorClass: [\n        { level: -1, extreme: 18, high: 15, moderate: 14, low: 12 },\n        { level: 0, extreme: 19, high: 16, moderate: 15, low: 13 },\n        { level: 1, extreme: 19, high: 16, moderate: 15, low: 13 },\n        { level: 2, extreme: 21, high: 18, moderate: 17, low: 15 },\n        { level: 3, extreme: 22, high: 19, moderate: 18, low: 16 },\n        { level: 4, extreme: 24, high: 21, moderate: 20, low: 18 },\n        { level: 5, extreme: 25, high: 22, moderate: 21, low: 19 },\n        { level: 6, extreme: 27, high: 24, moderate: 23, low: 21 },\n        { level: 7, extreme: 28, high: 25, moderate: 24, low: 22 },\n        { level: 8, extreme: 30, high: 27, moderate: 26, low: 24 },\n        { level: 9, extreme: 31, high: 28, moderate: 27, low: 25 },\n        { level: 10, extreme: 33, high: 30, moderate: 29, low: 27 },\n        { level: 11, extreme: 34, high: 31, moderate: 30, low: 28 },\n        { level: 12, extreme: 36, high: 33, moderate: 32, low: 30 },\n        { level: 13, extreme: 37, high: 34, moderate: 33, low: 31 },\n        { level: 14, extreme: 39, high: 36, moderate: 35, low: 33 },\n        { level: 15, extreme: 40, high: 37, moderate: 36, low: 34 },\n        { level: 16, extreme: 42, high: 39, moderate: 38, low: 36 },\n        { level: 17, extreme: 43, high: 40, moderate: 39, low: 37 },\n        { level: 18, extreme: 45, high: 42, moderate: 41, low: 39 },\n        { level: 19, extreme: 46, high: 43, moderate: 42, low: 40 },\n        { level: 20, extreme: 48, high: 45, moderate: 44, low: 42 },\n        { level: 21, extreme: 49, high: 46, moderate: 45, low: 43 },\n        { level: 22, extreme: 51, high: 48, moderate: 47, low: 45 },\n        { level: 23, extreme: 52, high: 49, moderate: 48, low: 46 },\n        { level: 24, extreme: 54, high: 51, moderate: 50, low: 48 },\n    ],\n    perception: [\n        { level: -1, extreme: 9, high: 8, moderate: 5, low: 2, terrible: 0 },\n        { level: 0, extreme: 10, high: 9, moderate: 6, low: 3, terrible: 1 },\n        { level: 1, extreme: 11, high: 10, moderate: 7, low: 4, terrible: 2 },\n        { level: 2, extreme: 12, high: 11, moderate: 8, low: 5, terrible: 3 },\n        { level: 3, extreme: 14, high: 12, moderate: 9, low: 6, terrible: 4 },\n        { level: 4, extreme: 15, high: 14, moderate: 11, low: 8, terrible: 6 },\n        { level: 5, extreme: 17, high: 15, moderate: 12, low: 9, terrible: 7 },\n        { level: 6, extreme: 18, high: 17, moderate: 14, low: 11, terrible: 8 },\n        { level: 7, extreme: 20, high: 18, moderate: 15, low: 12, terrible: 10 },\n        { level: 8, extreme: 21, high: 19, moderate: 16, low: 13, terrible: 11 },\n        { level: 9, extreme: 23, high: 21, moderate: 18, low: 15, terrible: 12 },\n        { level: 10, extreme: 24, high: 22, moderate: 19, low: 16, terrible: 14 },\n        { level: 11, extreme: 26, high: 24, moderate: 21, low: 18, terrible: 15 },\n        { level: 12, extreme: 27, high: 25, moderate: 22, low: 19, terrible: 16 },\n        { level: 13, extreme: 29, high: 26, moderate: 23, low: 20, terrible: 18 },\n        { level: 14, extreme: 30, high: 28, moderate: 25, low: 22, terrible: 19 },\n        { level: 15, extreme: 32, high: 29, moderate: 26, low: 23, terrible: 20 },\n        { level: 16, extreme: 33, high: 30, moderate: 28, low: 25, terrible: 22 },\n        { level: 17, extreme: 35, high: 32, moderate: 29, low: 26, terrible: 23 },\n        { level: 18, extreme: 36, high: 33, moderate: 30, low: 27, terrible: 24 },\n        { level: 19, extreme: 38, high: 35, moderate: 32, low: 29, terrible: 26 },\n        { level: 20, extreme: 39, high: 36, moderate: 33, low: 30, terrible: 27 },\n        { level: 21, extreme: 41, high: 38, moderate: 35, low: 32, terrible: 28 },\n        { level: 22, extreme: 43, high: 39, moderate: 36, low: 33, terrible: 30 },\n        { level: 23, extreme: 44, high: 40, moderate: 37, low: 34, terrible: 31 },\n        { level: 24, extreme: 46, high: 42, moderate: 38, low: 36, terrible: 32 },\n    ],\n    skill: [\n        { level: -1, extreme: 8, high: 5, moderate: 4, low: 2, terrible: 1 },\n        { level: 0, extreme: 9, high: 6, moderate: 5, low: 3, terrible: 2 },\n        { level: 1, extreme: 10, high: 7, moderate: 6, low: 4, terrible: 3 },\n        { level: 2, extreme: 11, high: 8, moderate: 7, low: 5, terrible: 4 },\n        { level: 3, extreme: 13, high: 10, moderate: 9, low: 7, terrible: 5 },\n        { level: 4, extreme: 15, high: 12, moderate: 10, low: 8, terrible: 7 },\n        { level: 5, extreme: 16, high: 13, moderate: 12, low: 10, terrible: 8 },\n        { level: 6, extreme: 18, high: 15, moderate: 13, low: 11, terrible: 9 },\n        { level: 7, extreme: 20, high: 17, moderate: 15, low: 13, terrible: 11 },\n        { level: 8, extreme: 21, high: 18, moderate: 16, low: 14, terrible: 12 },\n        { level: 9, extreme: 23, high: 20, moderate: 18, low: 16, terrible: 13 },\n        { level: 10, extreme: 25, high: 22, moderate: 19, low: 17, terrible: 15 },\n        { level: 11, extreme: 26, high: 23, moderate: 21, low: 19, terrible: 16 },\n        { level: 12, extreme: 28, high: 25, moderate: 22, low: 20, terrible: 17 },\n        { level: 13, extreme: 30, high: 27, moderate: 24, low: 22, terrible: 19 },\n        { level: 14, extreme: 31, high: 28, moderate: 25, low: 23, terrible: 20 },\n        { level: 15, extreme: 33, high: 30, moderate: 27, low: 25, terrible: 21 },\n        { level: 16, extreme: 35, high: 32, moderate: 28, low: 26, terrible: 23 },\n        { level: 17, extreme: 36, high: 33, moderate: 30, low: 28, terrible: 24 },\n        { level: 18, extreme: 38, high: 35, moderate: 31, low: 29, terrible: 25 },\n        { level: 19, extreme: 40, high: 37, moderate: 33, low: 31, terrible: 27 },\n        { level: 20, extreme: 41, high: 38, moderate: 34, low: 32, terrible: 28 },\n        { level: 21, extreme: 43, high: 40, moderate: 36, low: 34, terrible: 29 },\n        { level: 22, extreme: 45, high: 42, moderate: 37, low: 35, terrible: 31 },\n        { level: 23, extreme: 46, high: 43, moderate: 38, low: 36, terrible: 32 },\n        { level: 24, extreme: 48, high: 45, moderate: 40, low: 38, terrible: 33 },\n    ],\n    strikeAttack: [\n        { level: -1, extreme: 10, high: 8, moderate: 6, low: 4 },\n        { level: 0, extreme: 10, high: 8, moderate: 6, low: 4 },\n        { level: 1, extreme: 11, high: 9, moderate: 7, low: 5 },\n        { level: 2, extreme: 13, high: 11, moderate: 9, low: 7 },\n        { level: 3, extreme: 14, high: 12, moderate: 10, low: 8 },\n        { level: 4, extreme: 16, high: 14, moderate: 12, low: 9 },\n        { level: 5, extreme: 17, high: 15, moderate: 13, low: 11 },\n        { level: 6, extreme: 19, high: 17, moderate: 15, low: 12 },\n        { level: 7, extreme: 20, high: 18, moderate: 16, low: 13 },\n        { level: 8, extreme: 22, high: 20, moderate: 18, low: 15 },\n        { level: 9, extreme: 23, high: 21, moderate: 19, low: 16 },\n        { level: 10, extreme: 25, high: 23, moderate: 21, low: 17 },\n        { level: 11, extreme: 27, high: 24, moderate: 22, low: 19 },\n        { level: 12, extreme: 28, high: 26, moderate: 24, low: 20 },\n        { level: 13, extreme: 29, high: 27, moderate: 25, low: 21 },\n        { level: 14, extreme: 31, high: 29, moderate: 27, low: 23 },\n        { level: 15, extreme: 32, high: 30, moderate: 28, low: 24 },\n        { level: 16, extreme: 34, high: 32, moderate: 30, low: 25 },\n        { level: 17, extreme: 35, high: 33, moderate: 31, low: 27 },\n        { level: 18, extreme: 37, high: 35, moderate: 33, low: 28 },\n        { level: 19, extreme: 38, high: 36, moderate: 34, low: 29 },\n        { level: 20, extreme: 40, high: 38, moderate: 36, low: 31 },\n        { level: 21, extreme: 41, high: 39, moderate: 37, low: 32 },\n        { level: 22, extreme: 43, high: 41, moderate: 39, low: 33 },\n        { level: 23, extreme: 44, high: 42, moderate: 40, low: 35 },\n        { level: 24, extreme: 46, high: 44, moderate: 42, low: 36 },\n    ],\n    strikeDamage: [\n        {\n            level: -1,\n            extreme: { diceCount: 1, diceSize: 6, original: \"1d6+1\", average: 4.5, bonus: 1 },\n            high: { diceCount: 1, diceSize: 4, original: \"1d4+1\", average: 3.5, bonus: 1 },\n            moderate: { diceCount: 1, diceSize: 4, original: \"1d4\", average: 2.5, bonus: 0 },\n            low: { diceCount: 1, diceSize: 4, original: \"1d4\", average: 2.5, bonus: 0 },\n        },\n        {\n            level: 0,\n            extreme: { diceCount: 1, diceSize: 6, original: \"1d6+3\", average: 6.5, bonus: 3 },\n            high: { diceCount: 1, diceSize: 6, original: \"1d6+2\", average: 5.5, bonus: 2 },\n            moderate: { diceCount: 1, diceSize: 4, original: \"1d4+2\", average: 4.5, bonus: 2 },\n            low: { diceCount: 1, diceSize: 4, original: \"1d4+1\", average: 3.5, bonus: 1 },\n        },\n        {\n            level: 1,\n            extreme: { diceCount: 1, diceSize: 8, original: \"1d8+4\", average: 8.5, bonus: 4 },\n            high: { diceCount: 1, diceSize: 6, original: \"1d6+3\", average: 6.5, bonus: 3 },\n            moderate: { diceCount: 1, diceSize: 6, original: \"1d6+2\", average: 5.5, bonus: 2 },\n            low: { diceCount: 1, diceSize: 4, original: \"1d4+2\", average: 4.5, bonus: 2 },\n        },\n        {\n            level: 2,\n            extreme: { diceCount: 1, diceSize: 12, original: \"1d12+4\", average: 10.5, bonus: 4 },\n            high: { diceCount: 1, diceSize: 10, original: \"1d10+4\", average: 9.5, bonus: 4 },\n            moderate: { diceCount: 1, diceSize: 8, original: \"1d8+4\", average: 8.5, bonus: 4 },\n            low: { diceCount: 1, diceSize: 6, original: \"1d6+3\", average: 6.5, bonus: 3 },\n        },\n        {\n            level: 3,\n            extreme: { diceCount: 1, diceSize: 12, original: \"1d12+8\", average: 14.5, bonus: 8 },\n            high: { diceCount: 1, diceSize: 10, original: \"1d10+6\", average: 11.5, bonus: 6 },\n            moderate: { diceCount: 1, diceSize: 8, original: \"1d8+6\", average: 10.5, bonus: 6 },\n            low: { diceCount: 1, diceSize: 6, original: \"1d6+5\", average: 8.5, bonus: 5 },\n        },\n        {\n            level: 4,\n            extreme: { diceCount: 2, diceSize: 10, original: \"2d10+7\", average: 18, bonus: 7 },\n            high: { diceCount: 2, diceSize: 8, original: \"2d8+5\", average: 14, bonus: 5 },\n            moderate: { diceCount: 2, diceSize: 6, original: \"2d6+5\", average: 12, bonus: 5 },\n            low: { diceCount: 2, diceSize: 4, original: \"2d4+4\", average: 9, bonus: 4 },\n        },\n        {\n            level: 5,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+7\", average: 20, bonus: 7 },\n            high: { diceCount: 2, diceSize: 8, original: \"2d8+7\", average: 16, bonus: 7 },\n            moderate: { diceCount: 2, diceSize: 6, original: \"2d6+6\", average: 13, bonus: 6 },\n            low: { diceCount: 2, diceSize: 4, original: \"2d4+6\", average: 11, bonus: 6 },\n        },\n        {\n            level: 6,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+10\", average: 23, bonus: 10 },\n            high: { diceCount: 2, diceSize: 8, original: \"2d8+9\", average: 18, bonus: 9 },\n            moderate: { diceCount: 2, diceSize: 6, original: \"2d6+8\", average: 15, bonus: 8 },\n            low: { diceCount: 2, diceSize: 4, original: \"2d4+7\", average: 12, bonus: 7 },\n        },\n        {\n            level: 7,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+12\", average: 25, bonus: 12 },\n            high: { diceCount: 2, diceSize: 10, original: \"2d10+9\", average: 20, bonus: 9 },\n            moderate: { diceCount: 2, diceSize: 8, original: \"2d8+8\", average: 17, bonus: 8 },\n            low: { diceCount: 2, diceSize: 6, original: \"2d6+6\", average: 13, bonus: 6 },\n        },\n        {\n            level: 8,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+15\", average: 28, bonus: 15 },\n            high: { diceCount: 2, diceSize: 10, original: \"2d10+11\", average: 22, bonus: 11 },\n            moderate: { diceCount: 2, diceSize: 8, original: \"2d8+9\", average: 18, bonus: 9 },\n            low: { diceCount: 2, diceSize: 6, original: \"2d6+8\", average: 15, bonus: 8 },\n        },\n        {\n            level: 9,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+17\", average: 30, bonus: 17 },\n            high: { diceCount: 2, diceSize: 10, original: \"2d10+13\", average: 24, bonus: 13 },\n            moderate: { diceCount: 2, diceSize: 8, original: \"2d8+11\", average: 20, bonus: 11 },\n            low: { diceCount: 2, diceSize: 6, original: \"2d6+9\", average: 16, bonus: 9 },\n        },\n        {\n            level: 10,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+20\", average: 33, bonus: 20 },\n            high: { diceCount: 2, diceSize: 12, original: \"2d12+13\", average: 26, bonus: 13 },\n            moderate: { diceCount: 2, diceSize: 10, original: \"2d10+11\", average: 22, bonus: 11 },\n            low: { diceCount: 2, diceSize: 6, original: \"2d6+10\", average: 17, bonus: 10 },\n        },\n        {\n            level: 11,\n            extreme: { diceCount: 2, diceSize: 12, original: \"2d12+22\", average: 35, bonus: 22 },\n            high: { diceCount: 2, diceSize: 12, original: \"2d12+15\", average: 28, bonus: 15 },\n            moderate: { diceCount: 2, diceSize: 10, original: \"2d10+12\", average: 23, bonus: 12 },\n            low: { diceCount: 2, diceSize: 8, original: \"2d8+10\", average: 19, bonus: 10 },\n        },\n        {\n            level: 12,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+19\", average: 38.5, bonus: 19 },\n            high: { diceCount: 3, diceSize: 10, original: \"3d10+14\", average: 30.5, bonus: 14 },\n            moderate: { diceCount: 3, diceSize: 8, original: \"3d8+12\", average: 25.5, bonus: 12 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+10\", average: 20.5, bonus: 10 },\n        },\n        {\n            level: 13,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+21\", average: 40.5, bonus: 21 },\n            high: { diceCount: 3, diceSize: 10, original: \"3d10+16\", average: 32.5, bonus: 16 },\n            moderate: { diceCount: 3, diceSize: 8, original: \"3d8+14\", average: 27.5, bonus: 14 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+11\", average: 21.5, bonus: 11 },\n        },\n        {\n            level: 14,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+24\", average: 43.5, bonus: 24 },\n            high: { diceCount: 3, diceSize: 10, original: \"3d10+18\", average: 34.5, bonus: 18 },\n            moderate: { diceCount: 3, diceSize: 8, original: \"3d8+15\", average: 28.5, bonus: 15 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+13\", average: 23.5, bonus: 13 },\n        },\n        {\n            level: 15,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+26\", average: 45.5, bonus: 26 },\n            high: { diceCount: 3, diceSize: 12, original: \"3d12+17\", average: 36.5, bonus: 17 },\n            moderate: { diceCount: 3, diceSize: 10, original: \"3d10+14\", average: 30.5, bonus: 14 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+14\", average: 24.5, bonus: 14 },\n        },\n        {\n            level: 16,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+29\", average: 48.5, bonus: 29 },\n            high: { diceCount: 3, diceSize: 12, original: \"3d12+18\", average: 37.5, bonus: 18 },\n            moderate: { diceCount: 3, diceSize: 10, original: \"3d10+15\", average: 31.5, bonus: 15 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+15\", average: 25.5, bonus: 15 },\n        },\n        {\n            level: 17,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+31\", average: 50.5, bonus: 31 },\n            high: { diceCount: 3, diceSize: 12, original: \"3d12+19\", average: 38.5, bonus: 19 },\n            moderate: { diceCount: 3, diceSize: 10, original: \"3d10+16\", average: 32.5, bonus: 16 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+16\", average: 26.5, bonus: 16 },\n        },\n        {\n            level: 18,\n            extreme: { diceCount: 3, diceSize: 12, original: \"3d12+34\", average: 53.5, bonus: 34 },\n            high: { diceCount: 3, diceSize: 12, original: \"3d12+20\", average: 39.5, bonus: 20 },\n            moderate: { diceCount: 3, diceSize: 10, original: \"3d10+17\", average: 33.5, bonus: 17 },\n            low: { diceCount: 3, diceSize: 6, original: \"3d6+17\", average: 27.5, bonus: 17 },\n        },\n        {\n            level: 19,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+29\", average: 55, bonus: 29 },\n            high: { diceCount: 4, diceSize: 10, original: \"4d10+20\", average: 42, bonus: 20 },\n            moderate: { diceCount: 4, diceSize: 8, original: \"4d8+17\", average: 35, bonus: 17 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+14\", average: 28, bonus: 14 },\n        },\n        {\n            level: 20,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+32\", average: 58, bonus: 32 },\n            high: { diceCount: 4, diceSize: 10, original: \"4d10+22\", average: 44, bonus: 22 },\n            moderate: { diceCount: 4, diceSize: 8, original: \"4d8+19\", average: 37, bonus: 19 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+15\", average: 29, bonus: 15 },\n        },\n        {\n            level: 21,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+34\", average: 60, bonus: 34 },\n            high: { diceCount: 4, diceSize: 10, original: \"4d10+24\", average: 46, bonus: 24 },\n            moderate: { diceCount: 4, diceSize: 8, original: \"4d8+20\", average: 38, bonus: 20 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+17\", average: 31, bonus: 17 },\n        },\n        {\n            level: 22,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+37\", average: 63, bonus: 37 },\n            high: { diceCount: 4, diceSize: 10, original: \"4d10+26\", average: 48, bonus: 26 },\n            moderate: { diceCount: 4, diceSize: 8, original: \"4d8+22\", average: 40, bonus: 22 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+18\", average: 32, bonus: 18 },\n        },\n        {\n            level: 23,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+39\", average: 65, bonus: 39 },\n            high: { diceCount: 4, diceSize: 12, original: \"4d12+24\", average: 50, bonus: 24 },\n            moderate: { diceCount: 4, diceSize: 10, original: \"4d10+20\", average: 42, bonus: 20 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+19\", average: 33, bonus: 19 },\n        },\n        {\n            level: 24,\n            extreme: { diceCount: 4, diceSize: 12, original: \"4d12+42\", average: 68, bonus: 42 },\n            high: { diceCount: 4, diceSize: 12, original: \"4d12+26\", average: 52, bonus: 26 },\n            moderate: { diceCount: 4, diceSize: 10, original: \"4d10+22\", average: 44, bonus: 22 },\n            low: { diceCount: 4, diceSize: 6, original: \"4d6+21\", average: 35, bonus: 21 },\n        },\n    ],\n    areaDamage: [\n        {\n            limited: { diceCount: 1, diceSize: 6, original: \"1d6\", average: 3.5, bonus: 0 },\n            unlimited: { diceCount: 1, diceSize: 4, original: \"1d4\", average: 2.5, bonus: 0 },\n            level: -1,\n        },\n        {\n            limited: { diceCount: 1, diceSize: 10, original: \"1d10\", average: 5.5, bonus: 0 },\n            unlimited: { diceCount: 1, diceSize: 6, original: \"1d6\", average: 3.5, bonus: 0 },\n            level: 0,\n        },\n        {\n            limited: { diceCount: 2, diceSize: 6, original: \"2d6\", average: 7, bonus: 0 },\n            unlimited: { diceCount: 2, diceSize: 4, original: \"2d4\", average: 5, bonus: 0 },\n            level: 1,\n        },\n        {\n            limited: { diceCount: 3, diceSize: 6, original: \"3d6\", average: 10.5, bonus: 0 },\n            unlimited: { diceCount: 2, diceSize: 6, original: \"2d6\", average: 7, bonus: 0 },\n            level: 2,\n        },\n        {\n            limited: { diceCount: 4, diceSize: 6, original: \"4d6\", average: 14, bonus: 0 },\n            unlimited: { diceCount: 2, diceSize: 8, original: \"2d8\", average: 9, bonus: 0 },\n            level: 3,\n        },\n        {\n            limited: { diceCount: 5, diceSize: 6, original: \"5d6\", average: 17.5, bonus: 0 },\n            unlimited: { diceCount: 3, diceSize: 6, original: \"3d6\", average: 10.5, bonus: 0 },\n            level: 4,\n        },\n        {\n            limited: { diceCount: 6, diceSize: 6, original: \"6d6\", average: 21, bonus: 0 },\n            unlimited: { diceCount: 2, diceSize: 10, original: \"2d10\", average: 11, bonus: 0 },\n            level: 5,\n        },\n        {\n            limited: { diceCount: 7, diceSize: 6, original: \"7d6\", average: 24.5, bonus: 0 },\n            unlimited: { diceCount: 4, diceSize: 6, original: \"4d6\", average: 14, bonus: 0 },\n            level: 6,\n        },\n        {\n            limited: { diceCount: 8, diceSize: 6, original: \"8d6\", average: 28, bonus: 0 },\n            unlimited: { diceCount: 4, diceSize: 6, original: \"4d6\", average: 14, bonus: 0 },\n            level: 7,\n        },\n        {\n            limited: { diceCount: 9, diceSize: 6, original: \"9d6\", average: 31.5, bonus: 0 },\n            unlimited: { diceCount: 5, diceSize: 6, original: \"5d6\", average: 17.5, bonus: 0 },\n            level: 8,\n        },\n        {\n            limited: { diceCount: 10, diceSize: 6, original: \"10d6\", average: 35, bonus: 0 },\n            unlimited: { diceCount: 5, diceSize: 6, original: \"5d6\", average: 17.5, bonus: 0 },\n            level: 9,\n        },\n        {\n            limited: { diceCount: 11, diceSize: 6, original: \"11d6\", average: 38.5, bonus: 0 },\n            unlimited: { diceCount: 6, diceSize: 6, original: \"6d6\", average: 21, bonus: 0 },\n            level: 10,\n        },\n        {\n            limited: { diceCount: 12, diceSize: 6, original: \"12d6\", average: 42, bonus: 0 },\n            unlimited: { diceCount: 6, diceSize: 6, original: \"6d6\", average: 21, bonus: 0 },\n            level: 11,\n        },\n        {\n            limited: { diceCount: 13, diceSize: 6, original: \"13d6\", average: 45.5, bonus: 0 },\n            unlimited: { diceCount: 5, diceSize: 8, original: \"5d8\", average: 22.5, bonus: 0 },\n            level: 12,\n        },\n        {\n            limited: { diceCount: 14, diceSize: 6, original: \"14d6\", average: 49, bonus: 0 },\n            unlimited: { diceCount: 7, diceSize: 6, original: \"7d6\", average: 24.5, bonus: 0 },\n            level: 13,\n        },\n        {\n            limited: { diceCount: 15, diceSize: 6, original: \"15d6\", average: 52.5, bonus: 0 },\n            unlimited: { diceCount: 4, diceSize: 12, original: \"4d12\", average: 26, bonus: 0 },\n            level: 14,\n        },\n        {\n            limited: { diceCount: 16, diceSize: 6, original: \"16d6\", average: 56, bonus: 0 },\n            unlimited: { diceCount: 8, diceSize: 6, original: \"8d6\", average: 28, bonus: 0 },\n            level: 15,\n        },\n        {\n            limited: { diceCount: 17, diceSize: 6, original: \"17d6\", average: 59.5, bonus: 0 },\n            unlimited: { diceCount: 8, diceSize: 6, original: \"8d6\", average: 28, bonus: 0 },\n            level: 16,\n        },\n        {\n            limited: { diceCount: 18, diceSize: 6, original: \"18d6\", average: 63, bonus: 0 },\n            unlimited: { diceCount: 8, diceSize: 6, original: \"8d6\", average: 28, bonus: 0 },\n            level: 17,\n        },\n        {\n            limited: { diceCount: 19, diceSize: 6, original: \"19d6\", average: 66.5, bonus: 0 },\n            unlimited: { diceCount: 9, diceSize: 6, original: \"9d6\", average: 31.5, bonus: 0 },\n            level: 18,\n        },\n        {\n            limited: { diceCount: 20, diceSize: 6, original: \"20d6\", average: 70, bonus: 0 },\n            unlimited: { diceCount: 9, diceSize: 6, original: \"9d6\", average: 31.5, bonus: 0 },\n            level: 19,\n        },\n        {\n            limited: { diceCount: 21, diceSize: 6, original: \"21d6\", average: 73.5, bonus: 0 },\n            unlimited: { diceCount: 6, diceSize: 10, original: \"6d10\", average: 33, bonus: 0 },\n            level: 20,\n        },\n        {\n            limited: { diceCount: 22, diceSize: 6, original: \"22d6\", average: 77, bonus: 0 },\n            unlimited: { diceCount: 10, diceSize: 6, original: \"10d6\", average: 35, bonus: 0 },\n            level: 21,\n        },\n        {\n            limited: { diceCount: 23, diceSize: 6, original: \"23d6\", average: 80.5, bonus: 0 },\n            unlimited: { diceCount: 8, diceSize: 8, original: \"8d8\", average: 36, bonus: 0 },\n            level: 22,\n        },\n        {\n            limited: { diceCount: 24, diceSize: 6, original: \"24d6\", average: 84, bonus: 0 },\n            unlimited: { diceCount: 11, diceSize: 6, original: \"11d6\", average: 38.5, bonus: 0 },\n            level: 23,\n        },\n        {\n            limited: { diceCount: 25, diceSize: 6, original: \"25d6\", average: 87.5, bonus: 0 },\n            unlimited: { diceCount: 11, diceSize: 6, original: \"11d6\", average: 38.5, bonus: 0 },\n            level: 24,\n        },\n    ],\n    difficultyClass: [\n        { level: -1, extreme: 19, high: 16, moderate: 13 },\n        { level: 0, extreme: 19, high: 16, moderate: 13 },\n        { level: 1, extreme: 20, high: 17, moderate: 14 },\n        { level: 2, extreme: 22, high: 18, moderate: 15 },\n        { level: 3, extreme: 23, high: 20, moderate: 17 },\n        { level: 4, extreme: 25, high: 21, moderate: 18 },\n        { level: 5, extreme: 26, high: 22, moderate: 19 },\n        { level: 6, extreme: 27, high: 24, moderate: 21 },\n        { level: 7, extreme: 29, high: 25, moderate: 22 },\n        { level: 8, extreme: 30, high: 26, moderate: 23 },\n        { level: 9, extreme: 32, high: 28, moderate: 25 },\n        { level: 10, extreme: 33, high: 29, moderate: 26 },\n        { level: 11, extreme: 34, high: 30, moderate: 27 },\n        { level: 12, extreme: 36, high: 32, moderate: 29 },\n        { level: 13, extreme: 37, high: 33, moderate: 30 },\n        { level: 14, extreme: 39, high: 34, moderate: 31 },\n        { level: 15, extreme: 40, high: 36, moderate: 33 },\n        { level: 16, extreme: 41, high: 37, moderate: 34 },\n        { level: 17, extreme: 43, high: 38, moderate: 35 },\n        { level: 18, extreme: 44, high: 40, moderate: 37 },\n        { level: 19, extreme: 46, high: 41, moderate: 38 },\n        { level: 20, extreme: 47, high: 42, moderate: 39 },\n        { level: 21, extreme: 48, high: 44, moderate: 41 },\n        { level: 22, extreme: 50, high: 45, moderate: 42 },\n        { level: 23, extreme: 51, high: 46, moderate: 43 },\n        { level: 24, extreme: 52, high: 48, moderate: 45 },\n    ],\n    spell: [\n        { level: -1, extreme: 11, high: 8, moderate: 5 },\n        { level: 0, extreme: 11, high: 8, moderate: 5 },\n        { level: 1, extreme: 12, high: 9, moderate: 6 },\n        { level: 2, extreme: 14, high: 10, moderate: 7 },\n        { level: 3, extreme: 15, high: 12, moderate: 9 },\n        { level: 4, extreme: 17, high: 13, moderate: 10 },\n        { level: 5, extreme: 18, high: 14, moderate: 11 },\n        { level: 6, extreme: 19, high: 16, moderate: 13 },\n        { level: 7, extreme: 21, high: 17, moderate: 14 },\n        { level: 8, extreme: 22, high: 18, moderate: 15 },\n        { level: 9, extreme: 24, high: 20, moderate: 17 },\n        { level: 10, extreme: 25, high: 21, moderate: 18 },\n        { level: 11, extreme: 26, high: 22, moderate: 19 },\n        { level: 12, extreme: 28, high: 24, moderate: 21 },\n        { level: 13, extreme: 29, high: 25, moderate: 22 },\n        { level: 14, extreme: 31, high: 26, moderate: 23 },\n        { level: 15, extreme: 32, high: 28, moderate: 25 },\n        { level: 16, extreme: 33, high: 29, moderate: 26 },\n        { level: 17, extreme: 35, high: 30, moderate: 27 },\n        { level: 18, extreme: 36, high: 32, moderate: 29 },\n        { level: 19, extreme: 38, high: 33, moderate: 30 },\n        { level: 20, extreme: 39, high: 34, moderate: 31 },\n        { level: 21, extreme: 40, high: 36, moderate: 33 },\n        { level: 22, extreme: 42, high: 37, moderate: 34 },\n        { level: 23, extreme: 43, high: 38, moderate: 35 },\n        { level: 24, extreme: 44, high: 40, moderate: 37 },\n    ],\n    resistance: [\n        { level: -1, maximum: 1, minimum: 1 },\n        { level: 0, maximum: 3, minimum: 1 },\n        { level: 1, maximum: 3, minimum: 2 },\n        { level: 2, maximum: 5, minimum: 2 },\n        { level: 3, maximum: 6, minimum: 3 },\n        { level: 4, maximum: 7, minimum: 4 },\n        { level: 5, maximum: 8, minimum: 4 },\n        { level: 6, maximum: 9, minimum: 5 },\n        { level: 7, maximum: 10, minimum: 5 },\n        { level: 8, maximum: 11, minimum: 6 },\n        { level: 9, maximum: 12, minimum: 6 },\n        { level: 10, maximum: 13, minimum: 7 },\n        { level: 11, maximum: 14, minimum: 7 },\n        { level: 12, maximum: 15, minimum: 8 },\n        { level: 13, maximum: 16, minimum: 8 },\n        { level: 14, maximum: 17, minimum: 9 },\n        { level: 15, maximum: 18, minimum: 9 },\n        { level: 16, maximum: 19, minimum: 9 },\n        { level: 17, maximum: 19, minimum: 10 },\n        { level: 18, maximum: 20, minimum: 10 },\n        { level: 19, maximum: 21, minimum: 11 },\n        { level: 20, maximum: 22, minimum: 11 },\n        { level: 21, maximum: 23, minimum: 12 },\n        { level: 22, maximum: 24, minimum: 12 },\n        { level: 23, maximum: 25, minimum: 13 },\n        { level: 24, maximum: 26, minimum: 13 },\n    ],\n    weakness: [\n        { level: -1, maximum: 1, minimum: 1 },\n        { level: 0, maximum: 3, minimum: 1 },\n        { level: 1, maximum: 3, minimum: 2 },\n        { level: 2, maximum: 5, minimum: 2 },\n        { level: 3, maximum: 6, minimum: 3 },\n        { level: 4, maximum: 7, minimum: 4 },\n        { level: 5, maximum: 8, minimum: 4 },\n        { level: 6, maximum: 9, minimum: 5 },\n        { level: 7, maximum: 10, minimum: 5 },\n        { level: 8, maximum: 11, minimum: 6 },\n        { level: 9, maximum: 12, minimum: 6 },\n        { level: 10, maximum: 13, minimum: 7 },\n        { level: 11, maximum: 14, minimum: 7 },\n        { level: 12, maximum: 15, minimum: 8 },\n        { level: 13, maximum: 16, minimum: 8 },\n        { level: 14, maximum: 17, minimum: 9 },\n        { level: 15, maximum: 18, minimum: 9 },\n        { level: 16, maximum: 19, minimum: 9 },\n        { level: 17, maximum: 19, minimum: 10 },\n        { level: 18, maximum: 20, minimum: 10 },\n        { level: 19, maximum: 21, minimum: 11 },\n        { level: 20, maximum: 22, minimum: 11 },\n        { level: 21, maximum: 23, minimum: 12 },\n        { level: 22, maximum: 24, minimum: 12 },\n        { level: 23, maximum: 25, minimum: 13 },\n        { level: 24, maximum: 26, minimum: 13 },\n    ],\n    hazarddefense: [\n        { level: -1, eac: 18, hac: 15, lac: 12, esave: 9, hsave: 8, lsave: 2, hardness: \"2-4\", hpmin: 11 },\n        { level: 0, eac: 19, hac: 16, lac: 13, esave: 10, hsave: 9, lsave: 3, hardness: \"3-5\", hitPoints: \"15-17\" },\n        { level: 1, eac: 19, hac: 16, lac: 13, esave: 11, hsave: 10, lsave: 4, hardness: \"5-7\", hitPoints: \"23-25\" },\n        { level: 2, eac: 21, hac: 18, lac: 15, esave: 12, hsave: 11, lsave: 5, hardness: \"7-9\", hitPoints: \"30-34\" },\n        { level: 3, eac: 22, hac: 19, lac: 16, esave: 14, hsave: 12, lsave: 6, hardness: \"10-12\", hitPoints: \"42-46\" },\n        { level: 4, eac: 24, hac: 21, lac: 18, esave: 15, hsave: 14, lsave: 8, hardness: \"11-13\", hitPoints: \"46-50\" },\n        { level: 5, eac: 25, hac: 22, lac: 19, esave: 17, hsave: 15, lsave: 9, hardness: \"12-14\", hitPoints: \"50-54\" },\n        { level: 6, eac: 27, hac: 24, lac: 21, esave: 18, hsave: 17, lsave: 11, hardness: \"13-15\", hitPoints: \"54-58\" },\n        { level: 7, eac: 28, hac: 25, lac: 22, esave: 20, hsave: 18, lsave: 12, hardness: \"14-16\", hitPoints: \"58-62\" },\n        { level: 8, eac: 30, hac: 27, lac: 24, esave: 21, hsave: 19, lsave: 13, hardness: \"15-17\", hitPoints: \"62-66\" },\n        { level: 9, eac: 31, hac: 28, lac: 25, esave: 23, hsave: 21, lsave: 15, hardness: \"16-18\", hitPoints: \"66-70\" },\n        {\n            level: 10,\n            eac: 33,\n            hac: 30,\n            lac: 27,\n            esave: 24,\n            hsave: 22,\n            lsave: 16,\n            hardness: \"17-19\",\n            hitPoints: \"70-74\",\n        },\n        {\n            level: 11,\n            eac: 34,\n            hac: 31,\n            lac: 28,\n            esave: 26,\n            hsave: 24,\n            lsave: 18,\n            hardness: \"19-21\",\n            hitPoints: \"78-82\",\n        },\n        {\n            level: 12,\n            eac: 36,\n            hac: 33,\n            lac: 30,\n            esave: 27,\n            hsave: 25,\n            lsave: 19,\n            hardness: \"20-22\",\n            hitPoints: \"82-86\",\n        },\n        {\n            level: 13,\n            eac: 37,\n            hac: 34,\n            lac: 31,\n            esave: 29,\n            hsave: 26,\n            lsave: 20,\n            hardness: \"21-23\",\n            hitPoints: \"86-90\",\n        },\n        {\n            level: 14,\n            eac: 39,\n            hac: 36,\n            lac: 33,\n            esave: 30,\n            hsave: 28,\n            lsave: 22,\n            hardness: \"22-24\",\n            hitPoints: \"90-94\",\n        },\n        {\n            level: 15,\n            eac: 40,\n            hac: 37,\n            lac: 34,\n            esave: 32,\n            hsave: 29,\n            lsave: 23,\n            hardness: \"23-25\",\n            hitPoints: \"94-98\",\n        },\n        {\n            level: 16,\n            eac: 42,\n            hac: 39,\n            lac: 36,\n            esave: 33,\n            hsave: 30,\n            lsave: 25,\n            hardness: \"25-27\",\n            hitPoints: \"101-107\",\n        },\n        {\n            level: 17,\n            eac: 43,\n            hac: 40,\n            lac: 37,\n            esave: 35,\n            hsave: 32,\n            lsave: 26,\n            hardness: \"27-29\",\n            hitPoints: \"109-115\",\n        },\n        {\n            level: 18,\n            eac: 45,\n            hac: 42,\n            lac: 39,\n            esave: 36,\n            hsave: 33,\n            lsave: 27,\n            hardness: \"29-31\",\n            hitPoints: \"117-123\",\n        },\n        {\n            level: 19,\n            eac: 46,\n            hac: 43,\n            lac: 40,\n            esave: 38,\n            hsave: 35,\n            lsave: 29,\n            hardness: \"31-33\",\n            hitPoints: \"125-131\",\n        },\n        {\n            level: 20,\n            eac: 48,\n            hac: 45,\n            lac: 42,\n            esave: 39,\n            hsave: 36,\n            lsave: 30,\n            hardness: \"33-35\",\n            hitPoints: \"133-139\",\n        },\n        {\n            level: 21,\n            eac: 49,\n            hac: 46,\n            lac: 43,\n            esave: 41,\n            hsave: 38,\n            lsave: 32,\n            hardness: \"36-38\",\n            hitPoints: \"144-152\",\n        },\n        {\n            level: 22,\n            eac: 51,\n            hac: 48,\n            lac: 45,\n            esave: 43,\n            hsave: 39,\n            lsave: 33,\n            hardness: \"39-41\",\n            hitPoints: \"156-164\",\n        },\n        {\n            level: 23,\n            eac: 52,\n            hac: 49,\n            lac: 46,\n            esave: 44,\n            hsave: 40,\n            lsave: 34,\n            hardness: \"44-46\",\n            hitPoints: \"168-176\",\n        },\n        {\n            level: 24,\n            eac: 54,\n            hac: 51,\n            lac: 48,\n            esave: 46,\n            hsave: 42,\n            lsave: 36,\n            hardness: \"46-50\",\n            hitPoints: \"180-188\",\n        },\n    ],\n    hazardoffense: [\n        { level: -1, satk: 10, catk: 8, simpledmg: \"2d4+1\", complexdmg: \"1d4+1\", edc: 19, hdc: 16 },\n        { level: 0, satk: 11, catk: 8, simpledmg: \"2d6+3\", complexdmg: \"1d6+2\", edc: 19, hdc: 16 },\n        { level: 1, satk: 13, catk: 9, simpledmg: \"2d6+5\", complexdmg: \"1d6+3\", edc: 20, hdc: 17 },\n        { level: 2, satk: 14, catk: 11, simpledmg: \"2d10+7\", complexdmg: \"1d10+4\", edc: 22, hdc: 18 },\n        { level: 3, satk: 16, catk: 12, simpledmg: \"2d10+13\", complexdmg: \"1d10+6\", edc: 23, hdc: 20 },\n        { level: 4, satk: 17, catk: 14, simpledmg: \"4d8+10\", complexdmg: \"2d8+5\", edc: 25, hdc: 21 },\n        { level: 5, satk: 19, catk: 15, simpledmg: \"4d8+14\", complexdmg: \"2d8+7\", edc: 26, hdc: 22 },\n        { level: 6, satk: 20, catk: 17, simpledmg: \"4d8+18\", complexdmg: \"2d8+9\", edc: 27, hdc: 24 },\n        { level: 7, satk: 22, catk: 18, simpledmg: \"4d10+18\", complexdmg: \"2d10+9\", edc: 29, hdc: 25 },\n        { level: 8, satk: 23, catk: 20, simpledmg: \"4d10+22\", complexdmg: \"2d10+11\", edc: 30, hdc: 26 },\n        { level: 9, satk: 25, catk: 21, simpledmg: \"4d10+26\", complexdmg: \"2d10+13\", edc: 32, hdc: 28 },\n        { level: 10, satk: 26, catk: 23, simpledmg: \"4d12+26\", complexdmg: \"2d12+13\", edc: 33, hdc: 29 },\n        { level: 11, satk: 28, catk: 24, simpledmg: \"4d12+30\", complexdmg: \"2d12+15\", edc: 34, hdc: 30 },\n        { level: 12, satk: 29, catk: 26, simpledmg: \"6d10+27\", complexdmg: \"3d10+14\", edc: 36, hdc: 32 },\n        { level: 13, satk: 31, catk: 27, simpledmg: \"6d10+31\", complexdmg: \"3d10+16\", edc: 37, hdc: 33 },\n        { level: 14, satk: 32, catk: 29, simpledmg: \"6d10+35\", complexdmg: \"3d10+18\", edc: 39, hdc: 34 },\n        { level: 15, satk: 34, catk: 30, simpledmg: \"6d12+33\", complexdmg: \"3d12+17\", edc: 40, hdc: 36 },\n        { level: 16, satk: 35, catk: 32, simpledmg: \"6d12+35\", complexdmg: \"3d12+18\", edc: 41, hdc: 37 },\n        { level: 17, satk: 37, catk: 33, simpledmg: \"6d12+37\", complexdmg: \"3d12+19\", edc: 43, hdc: 38 },\n        { level: 18, satk: 38, catk: 35, simpledmg: \"6d12+41\", complexdmg: \"3d12+20\", edc: 44, hdc: 40 },\n        { level: 19, satk: 40, catk: 36, simpledmg: \"8d10+40\", complexdmg: \"4d10+20\", edc: 46, hdc: 41 },\n        { level: 20, satk: 41, catk: 38, simpledmg: \"8d10+44\", complexdmg: \"4d10+22\", edc: 47, hdc: 42 },\n        { level: 21, satk: 43, catk: 39, simpledmg: \"8d10+48\", complexdmg: \"4d10+24\", edc: 48, hdc: 44 },\n        { level: 22, satk: 44, catk: 41, simpledmg: \"8d10+52\", complexdmg: \"4d10+26\", edc: 50, hdc: 45 },\n        { level: 23, satk: 46, catk: 42, simpledmg: \"8d12+48\", complexdmg: \"4d12+24\", edc: 51, hdc: 46 },\n        { level: 24, satk: 47, catk: 44, simpledmg: \"8d12+52\", complexdmg: \"4d12+26\", edc: 52, hdc: 48 },\n    ],\n    level: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],\n};\n","import { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { SCALE_APP_DATA } from \"../NPCScaleData.js\";\nimport { TokenPF2e } from \"@module/canvas/token/object.js\";\n\nexport async function registerNpcRollerHandlebarsTemplates() {\n    await loadTemplates([\n        `modules/${MODULENAME}/templates/feature/npc-roller/index.hbs`,\n        `modules/${MODULENAME}/templates/feature/npc-roller/table.hbs`,\n        `modules/${MODULENAME}/templates/feature/npc-roller/cell.hbs`,\n    ]);\n\n    Handlebars.registerPartial(\"rollAppTable\", `{{> \"modules/${MODULENAME}/templates/feature/npc-roller/table.hbs\"}}`);\n    Handlebars.registerPartial(\"rollAppCell\", `{{> \"modules/${MODULENAME}/templates/feature/npc-roller/cell.hbs\"}}`);\n}\n\nexport async function setupNpcRoller() {\n    Hooks.on(\"renderJournalDirectory\", enableNpcRollerButton);\n\n    await registerNpcRollerHandlebarsTemplates();\n}\n\nexport function enableNpcRollerButton(_app, html: JQuery) {\n    const button = $(\n        `<button><i class=\"fa fa-dice\"></i> ${game.i18n.localize(`${MODULENAME}.npcRoller.button-label`)}</button>`,\n    );\n    button.on(\"click\", () => {\n        new NpcRoller().render(true);\n    });\n\n    const footer = html.find(\".directory-footer.action-buttons\");\n    if (footer.length > 0) {\n        footer.append(button);\n    }\n}\n\nclass NpcRoller extends Application {\n    public constructor(options?: ApplicationOptions) {\n        super(options);\n\n        Hooks.on(\"controlToken\", this.#onControlToken.bind(this));\n    }\n\n    static override get defaultOptions(): ApplicationOptions {\n        const options = super.defaultOptions;\n        return {\n            ...options,\n            title: game.i18n.localize(`${MODULENAME}.npcRoller.title`),\n            template: `modules/${MODULENAME}/templates/feature/npc-roller/index.hbs`,\n            tabs: [\n                {\n                    navSelector: `.roll-app-nav`,\n                    contentSelector: `.roll-app-body`,\n                    initial: `.roll-app-attacks`,\n                },\n            ],\n            width: 800,\n            height: \"auto\",\n            resizable: true,\n        };\n    }\n\n    override getData(options?: any): any {\n        const data = super.getData(options);\n\n        data[\"data\"] = {\n            levels: fu.deepClone(SCALE_APP_DATA),\n        };\n\n        data[\"data\"][\"selected\"] = canvas.tokens?.controlled.map(\n            (token: TokenPF2e) => token.actor?.system[\"details\"].level.value,\n        );\n\n        return data;\n    }\n\n    override activateListeners(html: JQuery<HTMLElement>): void {\n        super.activateListeners(html);\n\n        html.find(\"button.rollable\").on(\"click\", this.#handleRollButtonClick);\n    }\n\n    #onControlToken() {\n        setTimeout(this.render.bind(this), 0);\n    }\n\n    async #handleRollButtonClick(event): Promise<void> {\n        const target = $(event.target);\n        const rollName = target.data(\"rollname\") as string;\n        const token = canvas.tokens?.controlled[0];\n        const formula = target.data(\"formula\") as string | number | undefined;\n        const secret = <boolean>game?.keyboard?.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL);\n\n        if (formula) {\n            const formulaString = formula.toString();\n\n            await new Roll(formulaString).toMessage(\n                {\n                    speaker: ChatMessage.getSpeaker({ token: <any>token?.document }),\n                    flavor: rollName,\n                    whisper: ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id),\n                },\n                {\n                    rollMode: secret ? CONST.DICE_ROLL_MODES.PRIVATE : game.settings.get(\"core\", \"rollMode\"),\n                    create: true,\n                },\n            );\n        }\n    }\n\n    override close(): Promise<void> {\n        Hooks.off(\"controlToken\", this.#onControlToken.bind(this));\n\n        return super.close();\n    }\n}\n","/*\n * Copyright 2021 Andrew Cuccinello, 2022 Jonas Karlsson\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActorPF2e } from \"@actor\";\n\nexport function getFolder(name: string) {\n    return game.folders?.getName(name);\n}\n\nexport function getFolderInFolder(name: string, parentName?: string) {\n    let parent: any;\n    if (parentName) {\n        parent = game.folders?.getName(parentName);\n        return parent.getSubfolders().find((f) => f.name === name);\n    } else {\n        return getFolder(name);\n    }\n}\n\nexport function getActor(name: string, folder: string): ActorPF2e | undefined {\n    return game.actors?.find((a) => a.name === name && a.folder?.name === folder) as any;\n}\n","/* Copyright 2020 Andrew Cuccinello, 2022 Jonas Karlsson\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IDicePool } from \"./NPCScalerTypes.js\";\nimport { SCALE_APP_DATA } from \"../NPCScaleData.js\";\n\nexport function parseDamage(value: string): IDicePool {\n    const [diceString, bonusString] = value.split(\"+\");\n    let bonus = 0;\n    if (bonusString !== undefined) {\n        bonus = parseInt(bonusString);\n    }\n\n    const [diceCountString, diceSizeString] = diceString.split(\"d\");\n    const result = {\n        diceCount: parseInt(diceCountString),\n        diceSize: parseInt(diceSizeString),\n        original: value,\n        average: 0,\n        bonus,\n    };\n\n    result.average = ((result.diceSize + 1) / 2) * result.diceCount + result.bonus;\n\n    return result;\n}\n\nexport function constructFormula({\n    diceCount,\n    diceSize,\n    bonus,\n}: {\n    diceCount: number;\n    diceSize: number;\n    bonus: number;\n}) {\n    let formula = `${diceCount}d${diceSize}`;\n    if (bonus > 0) {\n        formula = `${formula}+${bonus}`;\n    }\n    return formula;\n}\n\nexport function getLeveledData(key: keyof typeof SCALE_APP_DATA, oldValue: number, oldLevel: number, newLevel: number) {\n    const data = SCALE_APP_DATA[key];\n    const oldLevelData = data[oldLevel + 1];\n    const newLevelData = data[newLevel + 1];\n\n    let bestMatch: { key: string; delta: number } = { key: \"undefined\", delta: Number.MAX_SAFE_INTEGER };\n    for (const entry of Object.entries(oldLevelData)) {\n        const key = entry[0];\n        if (key === \"level\") {\n            continue;\n        }\n\n        const value = parseInt(entry[1] as any);\n        const delta = Math.abs(value - oldValue);\n\n        if (delta < bestMatch.delta) {\n            bestMatch = {\n                key,\n                delta,\n            };\n        }\n    }\n\n    const result = {\n        value: newLevelData[bestMatch.key],\n        delta: oldValue - oldLevelData[bestMatch.key],\n        total: 0,\n    };\n    result.total = result.value + result.delta;\n\n    return result;\n}\n\nexport function getHPData(oldValue: number, oldLevel: number, newLevel: number) {\n    const data = SCALE_APP_DATA[\"hitPoints\"];\n    const oldLevelData = data[oldLevel + 1];\n    const newLevelData = data[newLevel + 1];\n\n    // try to find an exact match\n    let bestMatch: { key: string; percentile: number; delta: number } = {\n        key: \"undefined\",\n        percentile: 0,\n        delta: Number.MAX_SAFE_INTEGER,\n    };\n    for (const entry of Object.entries(oldLevelData)) {\n        const key = entry[0];\n        if (key === \"level\") {\n            continue;\n        }\n\n        const entryValue = entry[1] as { die: number; maximum: number; minimum: number };\n        const { minimum, maximum } = entryValue;\n        const range = maximum - minimum;\n        const percentile = (oldValue - minimum) / range;\n        const dMin = Math.abs(oldValue - minimum);\n        const dMax = Math.abs(oldValue - maximum);\n        const delta = Math.min(dMin, dMax);\n\n        if (oldValue > minimum && oldValue < maximum) {\n            bestMatch = {\n                key,\n                percentile,\n                delta,\n            };\n            break;\n        } else {\n            if (delta < bestMatch.delta) {\n                bestMatch = {\n                    key,\n                    percentile,\n                    delta,\n                };\n            }\n        }\n    }\n\n    const newValue = newLevelData[bestMatch.key];\n    return Math.round(newValue.minimum + (newValue.maximum - newValue.minimum) * bestMatch.percentile);\n}\n\nexport function getMinMaxData(key: \"resistance\" | \"weakness\", oldValue: number, oldLevel: number, newLevel: number) {\n    const data = SCALE_APP_DATA[key];\n    const oldLevelData = data[oldLevel + 1];\n    const newLevelData = data[newLevel + 1];\n\n    const oldRange = Math.abs(oldLevelData.maximum - oldLevelData.minimum);\n    const oldPercentile = (oldValue - oldLevelData.minimum) / oldRange;\n\n    const newRange = Math.abs(newLevelData.maximum - newLevelData.minimum);\n    return Math.round(newLevelData.minimum + newRange * oldPercentile);\n}\n\nexport function constructRelativeDamage(oldDmg: IDicePool, stdDmg: IDicePool, newDmg: IDicePool): IDicePool {\n    const count = newDmg.diceCount;\n    const size = newDmg.diceSize;\n    const bonus = newDmg.bonus + oldDmg.bonus - stdDmg.bonus;\n\n    return parseDamage(\n        constructFormula({\n            diceCount: count,\n            diceSize: size,\n            bonus,\n        }),\n    );\n}\n\nexport function getDamageData(oldValue: string, oldLevel: number, newLevel: number) {\n    const data = SCALE_APP_DATA[\"strikeDamage\"];\n    const oldLevelData = data[oldLevel + 1];\n    const newLevelData = data[newLevel + 1];\n    const parsedOldValue = parseDamage(oldValue);\n\n    let bestMatch: { key: string; delta: number } = { key: \"undefined\", delta: Number.MAX_SAFE_INTEGER };\n    for (const entry of Object.entries(oldLevelData)) {\n        const key = entry[0];\n        if (key === \"level\") {\n            continue;\n        }\n\n        const value = entry[1] as IDicePool;\n        const delta = Math.abs(value.average - parsedOldValue.average);\n\n        if (delta < bestMatch.delta) {\n            bestMatch = {\n                key,\n                delta,\n            };\n        }\n    }\n\n    if (bestMatch.delta < parsedOldValue.average * 0.5) {\n        return constructRelativeDamage(parsedOldValue, oldLevelData[bestMatch.key], newLevelData[bestMatch.key])\n            .original;\n    } else {\n        return oldValue;\n    }\n}\n\nexport function getAreaDamageData(oldValue: string, oldLevel: number, newLevel: number) {\n    const data = SCALE_APP_DATA[\"areaDamage\"];\n    const oldLevelData = data[oldLevel + 1];\n    const newLevelData = data[newLevel + 1];\n    const parsedOldValue = parseDamage(oldValue);\n\n    let bestMatch: { key: string; delta: number } = { key: \"undefined\", delta: Number.MAX_SAFE_INTEGER };\n    for (const entry of Object.entries(oldLevelData)) {\n        const key = entry[0];\n        if (key === \"level\") {\n            continue;\n        }\n\n        const value = entry[1] as IDicePool;\n        const delta = Math.abs(value.average - parsedOldValue.average);\n\n        if (delta < bestMatch.delta) {\n            bestMatch = {\n                key,\n                delta,\n            };\n        }\n    }\n\n    if (bestMatch.delta < parsedOldValue.average * 0.5) {\n        return constructRelativeDamage(parsedOldValue, oldLevelData[bestMatch.key], newLevelData[bestMatch.key])\n            .original;\n    } else {\n        return oldValue;\n    }\n}\n","/*\n * Copyright 2021 Andrew Cuccinello, 2022 Jonas Karlsson\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IDataUpdates, IHandledItemType } from \"./NPCScalerTypes.js\";\nimport { getActor, getFolder, getFolderInFolder } from \"./Utilities.js\";\nimport { getAreaDamageData, getDamageData, getHPData, getLeveledData, getMinMaxData } from \"./NPCScalerUtil.js\";\nimport { ActorPF2e, NPCPF2e } from \"@actor\";\nimport { NPCSystemData } from \"@actor/npc/data.js\";\nimport { logDebug } from \"../../utils.js\";\n\n/**\n * Scales an NPC to a specified level based on an actor ID.\n *\n * @param {string} actorId - The ID of the actor.\n * @param {number} newLevel - The new level to scale the NPC to.\n * @return {Promise<void>} A promise that resolves when the scaling is complete.\n */\nexport async function scaleNPCToLevelFromActor(actorId: string, newLevel: number) {\n    const actor = <NPCPF2e>(<unknown>game.actors.get(actorId));\n    if (actor) {\n        await scaleNPCToLevel(actor, newLevel);\n    }\n}\n\nexport async function scaleNPCToLevel(actor: NPCPF2e, newLevel: number) {\n    const rootFolder = getFolder(\"cr-scaler\");\n\n    const folderName = `Level ${newLevel}`;\n    const folder =\n        getFolderInFolder(folderName, rootFolder?.name as string) ??\n        // @ts-ignore\n        (await Folder.create({\n            name: folderName,\n            type: \"Actor\",\n            parent: rootFolder ? rootFolder.id : \"\",\n        }));\n\n    const system: NPCSystemData = <NPCSystemData>actor.system;\n    const oldLevel = system.details.level.value;\n    const updateData = {\n        folder: folder.id,\n        [\"system.details.level.value\"]: newLevel,\n    };\n\n    // parse attribute modifiers\n    for (const [key, attr] of Object.entries(system.abilities)) {\n        const mod = getLeveledData(\"abilityScore\", parseInt((attr as any).mod), oldLevel, newLevel).total;\n        const value = 10 + mod * 2;\n        const min = 3;\n\n        updateData[`system.abilities.${key}`] = { value, min, mod };\n    }\n\n    // parse resistances\n    const drData: any[] = [];\n    // @ts-ignore\n    const resistances = system.attributes.resistances;\n    for (let i = 0; i < resistances.length; i++) {\n        const resistance = resistances[i];\n\n        drData.push({\n            label: resistance.label,\n            type: resistance.type,\n            exceptions: resistance.exceptions ?? \"\",\n            value: getMinMaxData(\"resistance\", resistance.value, oldLevel, newLevel).toString(),\n            doubleVs: resistance.doubleVs ?? \"\",\n        });\n    }\n    updateData[\"system.attributes.resistances\"] = drData;\n\n    // parse weaknesses\n    const dvData: any[] = [];\n    // @ts-ignore\n    const weaknesses = system.attributes.weaknesses;\n    for (let i = 0; i < weaknesses.length; i++) {\n        const weakness = weaknesses[i];\n\n        dvData.push({\n            label: weakness.label,\n            type: weakness.type,\n            exceptions: weakness.exceptions ?? \"\",\n            value: getMinMaxData(\"weakness\", weakness.value, oldLevel, newLevel).toString(),\n        });\n    }\n    updateData[\"system.attributes.vulnerabilities\"] = dvData;\n\n    // parse simple modifiers\n    updateData[\"system.attributes.ac.value\"] = getLeveledData(\n        \"armorClass\",\n        system.attributes.ac?.value ?? 0,\n        oldLevel,\n        newLevel,\n    ).total;\n    updateData[\"system.perception.mod\"] = getLeveledData(\n        \"perception\",\n        system.perception.mod ?? 0,\n        oldLevel,\n        newLevel,\n    ).total;\n    updateData[\"system.saves.fortitude.value\"] = getLeveledData(\n        \"savingThrow\",\n        system.saves.fortitude.value ?? 0,\n        oldLevel,\n        newLevel,\n    ).total;\n    updateData[\"system.saves.reflex.value\"] = getLeveledData(\n        \"savingThrow\",\n        system.saves.reflex.value ?? 0,\n        oldLevel,\n        newLevel,\n    ).total;\n    updateData[\"system.saves.will.value\"] = getLeveledData(\n        \"savingThrow\",\n        system.saves.will.value ?? 0,\n        oldLevel,\n        newLevel,\n    ).total;\n\n    const hp = getHPData(system.attributes.hp?.value ?? 0, oldLevel, newLevel);\n    updateData[\"system.attributes.hp.max\"] = hp;\n    updateData[\"system.attributes.hp.value\"] = hp;\n\n    let itemUpdates: IDataUpdates[] = [];\n    const items: any = actor.items;\n    for (const itemId of items.keys()) {\n        const item: any = items.get(itemId);\n\n        if ((item.type as IHandledItemType) === \"lore\") {\n            const oldValue = parseInt(item.system.mod.value);\n            const newValue = getLeveledData(\"skill\", oldValue, oldLevel, newLevel).total;\n            itemUpdates.push({\n                _id: item.id,\n                [\"system.mod.value\"]: newValue,\n            });\n        } else if ((item.type as IHandledItemType) === \"spellcastingEntry\") {\n            const oldAttack = parseInt(item.system.spelldc.value);\n            const newAttack = getLeveledData(\"spell\", oldAttack, oldLevel, newLevel).total;\n\n            const oldDC = parseInt(item.system.spelldc.dc);\n            const newDC = getLeveledData(\"difficultyClass\", oldDC, oldLevel, newLevel).total;\n\n            itemUpdates.push({\n                _id: item.id,\n                [\"system.spelldc.value\"]: newAttack,\n                [\"system.spelldc.dc\"]: newDC,\n            });\n        } else if ((item.type as IHandledItemType) === \"melee\") {\n            const oldAttack = parseInt(item.system.bonus.value);\n            const newAttack = getLeveledData(\"spell\", oldAttack, oldLevel, newLevel).total;\n\n            const attackUpdate: IDataUpdates = {\n                _id: item.id,\n                [\"system.bonus.value\"]: newAttack,\n                [\"system.bonus.total\"]: newAttack,\n            };\n\n            const damage = item.system.damageRolls as any[] | object;\n\n            if (Array.isArray(damage)) {\n                for (let i = 0; i < damage.length; i++) {\n                    attackUpdate[`system.damageRolls.${i}.damage`] = getDamageData(\n                        damage[i].damage,\n                        oldLevel,\n                        newLevel,\n                    );\n                    attackUpdate[`system.damageRolls.${i}.damageType`] = damage[i].damageType;\n                }\n            } else {\n                // Fix for #2 - some actors contain key/value pairs instead of array elements\n                for (const key in damage) {\n                    attackUpdate[`system.damageRolls.${key}.damage`] = getDamageData(\n                        damage[key].damage,\n                        oldLevel,\n                        newLevel,\n                    );\n                    attackUpdate[`system.damageRolls.${key}.damageType`] = damage[key].damageType;\n                }\n            }\n\n            itemUpdates.push(attackUpdate);\n        }\n    }\n    logDebug(itemUpdates);\n\n    let newActor = <any>getActor(actor.name as string, folder.name);\n    if (newActor !== undefined) {\n        await newActor.update(updateData);\n    } else {\n        newActor = actor.clone(updateData);\n        // @ts-ignore\n        newActor = (await Actor.create(newActor?._source as any)) as ActorPF2e;\n    }\n\n    await newActor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n\n    itemUpdates = [];\n    const DC_REGEXES = [/(data-pf2-dc=\")(\\d+)(\")/g, /(@Check\\[.*?type:.*?|dc:)(\\d+)(.*?])/g];\n    for (let regexNo = 0; regexNo < DC_REGEXES.length; regexNo++) {\n        const regex = DC_REGEXES[regexNo];\n        for (const item of items\n            .filter(\n                (item) => item.system.description.value.includes(\"DC\") || item.system.description.value.includes(\"dc:\"),\n            )\n            .filter(\n                (item) =>\n                    !(<string[]>(\n                        Array.of(\"consumable\", \"armor\", \"backpack\", \"book\", \"equipment\", \"treasure\", \"weapon\")\n                    )).includes(item.type),\n            ) //\n            .filter((item) => !item.system.description.value.includes(\"type:flat\"))) {\n            const description = item.system.description.value;\n            let newDescription = description;\n            let match: RegExpExecArray | null = regex.exec(description);\n\n            let indexOffset = 0;\n            while (match !== null) {\n                const fullMatch = match[0];\n                let value: string;\n                if (regexNo === 0) {\n                    value = match[1];\n                } else {\n                    value = match[2];\n                }\n                const index = match.index + indexOffset;\n                const newDCValue = getLeveledData(\"difficultyClass\", parseInt(value), oldLevel, newLevel).total;\n                const newDCString = `${match[1]}${newDCValue}${match[3]}`;\n\n                newDescription =\n                    newDescription.substring(0, index) +\n                    newDCString +\n                    newDescription.substring(index + fullMatch.length);\n\n                indexOffset += newDescription.length - description.length - indexOffset;\n\n                match = regex.exec(description);\n            }\n\n            itemUpdates.push({\n                _id: item.id,\n                [\"system.description.value\"]: newDescription,\n            });\n        }\n    }\n\n    await newActor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n\n    itemUpdates = [];\n    // Ignore spell damage, that will have to be handled manually\n    for (const item of newActor.items.filter((item) => !item.isOfType(\"spell\")).values()) {\n        const DMG_REGEX = /\\d+d\\d+(\\+\\d*)?/g;\n        const description = item.system[\"description\"].value as string;\n        let newDescription = description;\n        let match: RegExpExecArray | null = DMG_REGEX.exec(description);\n        let indexOffset = 0;\n        while (match !== null) {\n            const [fullMatch] = match;\n            const index = match.index + indexOffset;\n            const newDamageFormula = getAreaDamageData(fullMatch, oldLevel, newLevel);\n\n            newDescription =\n                newDescription.substring(0, index) +\n                newDamageFormula +\n                newDescription.substring(index + fullMatch.length);\n\n            indexOffset += newDescription.length - description.length - indexOffset;\n\n            match = DMG_REGEX.exec(description);\n        }\n\n        itemUpdates.push({\n            _id: item.id as string,\n            [\"system.description.value\"]: newDescription,\n        });\n    }\n\n    await newActor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n}\n","import type { Action, ActionVariant, ActionUseOptions, ActionMessageOptions } from \"@actor/actions/types.d.ts\";\nimport type { ActorPF2e } from \"@actor\";\nimport type { ChatMessagePF2e } from \"@module/chat-message/document.d.ts\";\nimport type { ActionTrait } from \"@item/ability/index.d.ts\";\nimport type { EffectPF2e } from \"@item\";\nimport type { EffectSource } from \"@item/effect/data.d.ts\";\nimport type { RuleElementSource } from \"@module/rules/rule-element/data.d.ts\";\nimport type { ChoiceSetSource } from \"@module/rules/rule-element/choice-set/data.d.ts\";\nimport type { PickableThing } from \"@module/apps/pick-a-thing-prompt.d.ts\";\nimport type { RawPredicate } from \"@system/predication.d.ts\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\n\n// IDK why choices isn't in ChoiceSetSource\ninterface ChoiceSetSourceWithChoices extends ChoiceSetSource {\n    // Maybe this should have been UninflatedChoiceSet as the type, but that has issues,\n    // see below.\n    choices: PickableThingSource[];\n}\n\n// UninflatedChoiceSet can be PickableThing[], but PickableThing contains a Predicate.\n// We don't have a Predciate in the rule source, we have a RawPredicate.  There doesn't\n// seem to be an existing type for the source of a choice.\ntype PickableThingSource = Omit<PickableThing, \"predicate\"> & { predicate?: RawPredicate; sort?: number };\n\ninterface FTEFlags {\n    minimum?: number;\n    bonus?: {\n        untrained?: number;\n        trained?: number;\n        expert?: number;\n        master?: number;\n        legendary?: number;\n    };\n}\n\nclass FollowTheExpertAction implements Action {\n    readonly img: string;\n    readonly name: string;\n    readonly slug: string;\n    readonly traits: ActionTrait[];\n    // variants is required for the interface, but this action has no variants.\n    // Since nothing in this module uses them, an empty collection satifies the\n    // requirements with the least code.\n    readonly variants: Collection<ActionVariant>;\n\n    readonly effect: ItemUUID;\n\n    public constructor() {\n        this.img = \"systems/pf2e/icons/spells/favorable-review.webp\";\n        this.name = `${MODULENAME}.macros.basicActionMacros.actions.FollowTheExpertToggle`;\n        this.slug = \"follow-the-expert\";\n        this.traits = [\"exploration\"];\n        this.variants = new Collection();\n        this.effect = \"Compendium.pf2e.other-effects.VCSpuc3Tf3XWMkd3\" as ItemUUID; // Effect: Follow The Expert\n    }\n\n    private fixupRules(effect: EffectSource, expert: ActorPF2e) {\n        const expertSkills = expert.skills;\n        // Skilless expert? Don't follow them! Typescript complains.\n        if (!expertSkills) return;\n\n        const flags = expert.flags.pf2e?.followTheExpert as FTEFlags | undefined;\n        // List of Lores that meet FTE minimum proficiency\n        const minLevel = flags?.minimum ?? 2;\n        const lores = Object.values(expertSkills)\n            .filter((s) => s.lore && (s.rank ?? 0) >= minLevel)\n            .map((s) => ({ label: s.label, value: s.slug }));\n\n        const skillRule = effect.system.rules.find(\n            (e: ChoiceSetSource) => e.key === \"ChoiceSet\" && e.flag === \"followTheExpertSkill\",\n        ) as ChoiceSetSourceWithChoices | null;\n        const profRule = effect.system.rules.find(\n            (e: ChoiceSetSource) => e.key === \"ChoiceSet\" && e.flag === \"followTheExpertProficiency\",\n        ) as ChoiceSetSourceWithChoices | null;\n        if (!skillRule || !profRule) throw new Error(\"Effect: FTE did not have expected rules\");\n\n        // Add choice for trained if necessary\n        if (minLevel <= 1) profRule.choices.push({ label: \"PF2E.ProficiencyLevel1\", sort: 0, value: 1 });\n\n        // Filter skill choices that don't meet FTE minimum proficiency, default 2 (expert), and add lores\n        skillRule.choices = skillRule.choices\n            .filter((c) => (expertSkills[c.value as string]?.rank ?? 0) >= minLevel)\n            .concat(lores);\n\n        // Make proficiency choices predicate on having chosen a skill with that proficiency.\n        // This should result in only one choice being allowed, thus skipping the dialog.\n        const skills = skillRule.choices.map((c) => c.value) as string[];\n        for (const choice of profRule.choices) {\n            const skillsAtLevel = skills.filter((s) => expertSkills[s].rank === choice.value);\n            if (skillsAtLevel.length > 0) {\n                choice.predicate = [\n                    {\n                        or: skillsAtLevel.map((s) => ({\n                            eq: [\"{item|flags.pf2e.rulesSelections.followTheExpertSkill}\", s],\n                        })),\n                    },\n                ];\n            } else {\n                choice.predicate = [\"disabled\"];\n            }\n        }\n\n        // Adjust the modifier if the target has something that changes it\n        if (flags?.bonus) {\n            const rankSlugs = Object.keys(CONFIG.PF2E.proficiencyRanks);\n            effect.system.rules.push({\n                key: \"AdjustModifier\",\n                mode: \"upgrade\",\n                slug: \"follow-the-expert-circumstance\",\n                selector: \"{item|flags.pf2e.rulesSelections.followTheExpertSkill}\",\n                value: {\n                    brackets: rankSlugs\n                        .map((r, i) => ({ start: i, end: i, value: flags.bonus?.[r] }))\n                        .filter((b) => b.value !== undefined),\n                    field: \"item|flags.pf2e.rulesSelections.followTheExpertProficiency\",\n                },\n            } as RuleElementSource);\n        }\n    }\n\n    async use(_options?: Partial<ActionUseOptions>): Promise<unknown> {\n        const source = (await fromUuid(this.effect)) as EffectPF2e | null;\n        if (!source) throw new Error(`Effect ${this.effect} not found!`);\n        const effect = source.toObject();\n        (effect.flags.core ??= {}).sourceId = this.effect;\n\n        const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n        if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n        if (actors.length === 0) {\n            return ui.notifications.error(\"PF2E.ErrorMessage.NoTokenSelected\", { localize: true });\n        }\n\n        const target = game.user.targets.first();\n        if (target?.actor) {\n            this.fixupRules(effect, target.actor);\n        }\n\n        for (const actor of actors) {\n            const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === this.effect);\n            if (existing) {\n                await existing.delete();\n            } else {\n                await actor.createEmbeddedDocuments(\"Item\", [effect]);\n            }\n        }\n\n        // SimpleAction would return a list of [actor, effect, message] tuples,\n        // but nothing will use it, so it's not done here.\n        return true;\n    }\n\n    async toMessage(_options?: Partial<ActionMessageOptions>): Promise<ChatMessagePF2e | undefined> {\n        // There isn't a message for toggling an effect.  Could be added.\n        return undefined;\n    }\n}\n\nlet followTheExpert: FollowTheExpertAction;\n// Break module initialization order issue w.r.t. MODULENAME from xdy-pf2e-workbench.js\nHooks.once(\"setup\", () => {\n    followTheExpert = new FollowTheExpertAction();\n});\n\nexport { followTheExpert };\n","// Originally from ApoApostolov#4622, modified by me. Included with permission.\n// noinspection CssUnresolvedCustomProperty,CssUnknownTarget\n\n/* eslint-disable no-undef */\n\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { ActorPF2e } from \"@actor\";\nimport { Action, ActionUseOptions, ActionVariant } from \"@actor/actions/types.js\";\nimport { CharacterSkill } from \"@actor/character/types.js\";\nimport { ModifierPF2e } from \"@actor/modifiers.js\";\nimport { Statistic } from \"@system/statistic/statistic.js\";\nimport { followTheExpert } from \"./follow-the-expert.ts\";\n\ndeclare global {\n    interface Window {\n        actionDialog: Dialog;\n    }\n}\n\nexport async function registerBasicActionMacrosHandlebarsTemplates() {\n    await loadTemplates([\n        `modules/${MODULENAME}/templates/macros/bam/index.hbs`,\n        `modules/${MODULENAME}/templates/macros/bam/actionButton.hbs`,\n    ]);\n\n    Handlebars.registerPartial(\"actionButton\", `{{> \"modules/${MODULENAME}/templates/macros/bam/actionButton.hbs\"}}`);\n}\n\nfunction getBestBonuses(\n    actorSkills: Map<string, Partial<Record<string, Statistic>>>,\n    party: string[],\n    actionList: MacroAction[],\n) {\n    for (const actorId of party) {\n        const skills = actorSkills.get(actorId);\n        for (const action of actionList) {\n            const skill = skills?.[action.skill?.toLowerCase()];\n            if (!skill) continue;\n            const bonus = skill.check?.mod ?? skill.mod;\n            if (bonus > (action.best ?? -1)) {\n                action.best = bonus;\n                action.whoIsBest = actorId;\n            }\n        }\n    }\n}\n\nfunction createMapOfSkillsPerActor(actors: ActorPF2e[]): Map<string, Partial<Record<string, Statistic>>> {\n    const map = new Map<string, Partial<Record<string, Statistic>>>();\n    for (const actor of actors) {\n        const skills = fetchSkills(actor);\n        if (skills) {\n            map.set(actor.id, skills);\n        }\n    }\n    return map;\n}\n\nfunction fetchSkills(actor: ActorPF2e): Partial<Record<string, Statistic>> {\n    return { perception: actor.perception, ...actor.skills };\n}\n\nfunction createButtonData(\n    action: MacroAction,\n    idx: number,\n    actor: ActorPF2e,\n    party: string[],\n    actorSkills: Partial<Record<string, Statistic>>,\n): { bonus: number; skill: Statistic | null | undefined; action: MacroAction; best: boolean; idx: number } {\n    const skillName = action.skill?.toLowerCase();\n    const skill = skillName ? actorSkills[skillName] : null;\n    const bonus = skill ? skill.check?.mod ?? skill.mod : -1;\n    const best = game.settings.get(MODULENAME, \"basicActionMacroShowBestBonus\")\n        ? party.length && party.includes(actor.id)\n            ? bonus >= (action.best ?? 0)\n            : false\n        : false;\n    return { best, idx, action, skill, bonus };\n}\n\ntype MacroAction = {\n    skill: string;\n    // The altSkillAndFeat stuff should really be more flexible. Maybe look at what SkillActions did for prereqs?\n    altSkillAndFeat?: { skill: string; feat: string }[];\n    name: string;\n    icon: string;\n    action: Function | string[] | Action | ActionVariant | undefined;\n    module?: string;\n    best?: number;\n    whoIsBest?: string;\n    showMAP?: boolean;\n    showExploration?: boolean;\n    showDowntime?: boolean;\n    // Optional parameters for an Action.use() call\n    options?: Partial<ActionUseOptions>;\n    actionType?: \"basic\" | \"skill_untrained\" | \"skill_trained\" | \"other\";\n    actionTitle?: string;\n};\n\n/**\n * Generates the filtered list of actions to use based on the given bamActions.\n *\n * @param {ActorPF2e} selectedActor The selected actor.\n * @param {MacroAction[]} bamActions - The list of MacroActions to filter.\n * @return {MacroAction[]} The filtered list of actions to use.\n */\nfunction prepareActions(selectedActor: ActorPF2e, bamActions: MacroAction[]): MacroAction[] {\n    const showUnusable = game.settings.get(MODULENAME, \"bamShowUnusable\");\n\n    const actionsToUse = bamActions\n        .filter((x) => {\n            const hasSkill = selectedActor.skills?.[x.skill.toLocaleLowerCase()]?.rank ?? 0 > 0;\n            const hasAltSkillAndFeat =\n                x.altSkillAndFeat?.find((y) => selectedActor.skills?.[y.skill.toLocaleLowerCase()]?.rank) &&\n                x.altSkillAndFeat?.find((y) => selectedActor.itemTypes.feat.find((feat) => feat.slug === y.feat));\n\n            return (\n                showUnusable ||\n                x.actionType !== \"skill_trained\" ||\n                (x.actionType === \"skill_trained\" && [\"npc\", \"familiar\"].includes(selectedActor.type)) ||\n                selectedActor.itemTypes.feat.find((feat) => feat.slug === \"clever-improviser\") ||\n                hasSkill ||\n                hasAltSkillAndFeat\n            );\n        })\n        .filter((m) => (m.module ? game.modules.get(m.module)?.active : true))\n        .sort((a, b) => a.name.localeCompare(b.name, game.i18n.lang));\n\n    actionsToUse.forEach((x) => {\n        const traits = (x as any)?.action?.traits ?? [];\n        x.showMAP = traits.includes(\"attack\");\n        x.showDowntime = traits.includes(\"downtime\");\n        x.showExploration = traits.includes(\"exploration\");\n    });\n\n    return actionsToUse;\n}\n\n/**\n * This macro opens a dialog containing a list of actions to be used by the selected Actor\n * If no actor is selected, it selects the user's standard character.\n * If there is no user character, it shows up a warning notification.\n */\nexport async function basicActionMacros() {\n    const bamActions: MacroAction[] = [\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AdministerFirstAidStabilize`),\n            skill: \"Medicine\",\n            action: game.pf2e.actions.get(\"administer-first-aid\")?.variants.get(\"stabilize\"),\n            icon: \"systems/pf2e/icons/features/feats/treat-wounds.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AdministerFirstAidStopBleeding`),\n            skill: \"Medicine\",\n            action: game.pf2e.actions.get(\"administer-first-aid\")?.variants.get(\"stop-bleeding\"),\n            icon: \"systems/pf2e/icons/conditions/persistent-damage.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AidToggle`),\n            skill: \"\",\n            action: [\"macroEffectAid\", \"xdy-pf2e-workbench.xdy-internal-utility-macros\"],\n            icon: \"systems/pf2e/icons/spells/efficient-apport.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AidASE`),\n            skill: \"\",\n            action: [\"Aid\", \"pf2e-action-support-engine-macros.action-support-engine-macros\"],\n            module: \"pf2e-action-support-engine\",\n            icon: \"systems/pf2e/icons/spells/efficient-apport.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AidPF2eMacros`),\n            skill: \"\",\n            action: (options) => game[\"activemacros\"].aid(options.actors?.[0]),\n            module: \"pf2e-macros\",\n            icon: \"systems/pf2e/icons/spells/efficient-apport.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.AvoidNotice`),\n            skill: \"Stealth\",\n            action: game.pf2e.actions.get(\"avoid-notice\"),\n            icon: \"systems/pf2e/icons/features/classes/surprice-attack.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Balance`),\n            skill: \"Acrobatics\",\n            action: game.pf2e.actions.get(\"balance\"),\n            icon: \"icons/skills/movement/feet-winged-boots-brown.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Climb`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"climb\"),\n            icon: \"icons/sundries/misc/ladder.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Coerce`),\n            skill: \"Intimidation\",\n            action: game.pf2e.actions.get(\"coerce\"),\n            icon: \"icons/skills/social/intimidation-impressing.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.CommandAnAnimal`),\n            skill: \"Nature\",\n            action: game.pf2e.actions.get(\"command-an-animal\"),\n            icon: \"icons/environment/creatures/horse-white.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.ConcealAnObject`),\n            skill: \"Stealth\",\n            action: game.pf2e.actions.get(\"conceal-an-object\"),\n            icon: \"systems/pf2e/icons/equipment/adventuring-gear/wax-key-blank.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Craft`),\n            skill: \"Crafting\",\n            action: game.pf2e.actions.craft,\n            icon: \"icons/skills/trades/smithing-anvil-silver-red.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.CreateForgery`),\n            skill: \"Society\",\n            action: game.pf2e.actions.get(\"create-forgery\"),\n            icon: \"systems/pf2e/icons/spells/transcribe-moment.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.CreateADiversionDistractingWords`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"create-a-diversion\")?.variants.get(\"distracting-words\"),\n            icon: \"icons/skills/social/wave-halt-stop.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.CreateADiversionGesture`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"create-a-diversion\")?.variants.get(\"gesture\"),\n            icon: \"icons/skills/social/wave-halt-stop.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.CreateADiversionTrick`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"create-a-diversion\")?.variants.get(\"trick\"),\n            icon: \"systems/pf2e/icons/spells/charming-words.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.DecipherWritingArcana`),\n            skill: \"Arcana\",\n            action: game.pf2e.actions.get(\"decipher-writing\"),\n            options: { statistic: \"arcana\" },\n            icon: \"icons/skills/trades/academics-book-study-runes.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.DecipherWritingOccultism`),\n            skill: \"Occultism\",\n            action: game.pf2e.actions.get(\"decipher-writing\"),\n            options: { statistic: \"occultism\" },\n            icon: \"icons/skills/trades/academics-book-study-purple.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.DecipherWritingReligion`),\n            skill: \"Religion\",\n            action: game.pf2e.actions.get(\"decipher-writing\"),\n            options: { statistic: \"religion\" },\n            icon: \"systems/pf2e/icons/equipment/other/spellbooks/thresholds-of-truth.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.DecipherWritingSociety`),\n            skill: \"Society\",\n            action: game.pf2e.actions.get(\"decipher-writing\"),\n            options: { statistic: \"society\" },\n            icon: \"icons/skills/trades/academics-study-reading-book.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Demoralize`),\n            skill: \"Intimidation\",\n            action: [\"XDY DO_NOT_IMPORT Demoralize\", \"xdy-pf2e-workbench.asymonous-benefactor-macros-internal\"],\n            icon: \"icons/skills/social/intimidation-impressing.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Disarm`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"disarm\"),\n            icon: \"icons/skills/melee/sword-damaged-broken-glow-red.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.DisableDevice`),\n            skill: \"Thievery\",\n            action: game.pf2e.actions.get(\"disable-device\"),\n            icon: \"systems/pf2e/icons/equipment/adventuring-gear/thieves-tools.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Escape`),\n            skill: \"\",\n            action: game.pf2e.actions.get(\"escape\"),\n            icon: \"icons/skills/movement/feet-winged-boots-glowing-yellow.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Feint`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"feint\"),\n            icon: \"icons/skills/melee/maneuver-sword-katana-yellow.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.FollowTheExpertToggle`),\n            skill: \"\",\n            action: followTheExpert,\n            icon: \"systems/pf2e/icons/spells/favorable-review.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.ForceOpen`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"force-open\"),\n            icon: \"icons/equipment/feet/boots-armored-steel.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.GatherInformation`),\n            skill: \"Diplomacy\",\n            action: game.pf2e.actions.get(\"gather-information\"),\n            icon: \"icons/skills/social/diplomacy-handshake.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Grapple`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"grapple\"),\n            icon: \"icons/skills/melee/unarmed-punch-fist.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Hide`),\n            skill: \"Stealth\",\n            action: game.pf2e.actions.get(\"hide\"),\n            icon: \"systems/pf2e/icons/features/classes/wild.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Impersonate`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"impersonate\"),\n            icon: \"icons/equipment/head/mask-carved-scream-tan.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.JumpHigh`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"high-jump\"),\n            icon: \"icons/skills/movement/arrows-up-trio-red.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.JumpLong`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"long-jump\"),\n            icon: \"icons/skills/movement/figure-running-gray.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Lie`),\n            skill: \"Deception\",\n            action: game.pf2e.actions.get(\"lie\"),\n            icon: \"icons/magic/control/mouth-smile-deception-purple.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.MakeAnImpression`),\n            skill: \"Diplomacy\",\n            action: game.pf2e.actions.get(\"make-an-impression\"),\n            icon: \"icons/environment/people/commoner.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.ManeuverInFlight`),\n            skill: \"Acrobatics\",\n            action: game.pf2e.actions.get(\"maneuver-in-flight\"),\n            icon: \"icons/commodities/biological/wing-bird-white.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.PalmAnObject`),\n            skill: \"Thievery\",\n            action: game.pf2e.actions.get(\"palm-an-object\"),\n            icon: \"icons/sundries/gaming/playing-cards.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Perform`),\n            skill: \"Performance\",\n            action: game.pf2e.actions.get(\"perform\")?.variants.get(\"singing\"),\n            icon: \"icons/skills/trades/music-singing-voice-blue.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.PickALock`),\n            skill: \"Thievery\",\n            action: game.pf2e.actions.get(\"pick-a-lock\"),\n            icon: \"icons/skills/social/theft-pickpocket-bribery-brown.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.RaiseAShieldToggle`),\n            skill: \"\",\n            action: game.pf2e.actions.raiseAShield,\n            icon: \"systems/pf2e/icons/actions/raise-a-shield.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.RecallKnowledge`),\n            skill: \"\",\n            action: [\"XDY DO_NOT_IMPORT Recall_Knowledge\", \"xdy-pf2e-workbench.asymonous-benefactor-macros-internal\"],\n            icon: \"icons/skills/trades/academics-study-reading-book.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Repair`),\n            skill: \"Crafting\",\n            action: game.pf2e.actions.repair,\n            icon: \"icons/tools/smithing/anvil.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Reposition`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"reposition\"),\n            icon: \"icons/sundries/gaming/chess-pawn-white-pink.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Request`),\n            skill: \"Diplomacy\",\n            action: game.pf2e.actions.get(\"request\"),\n            icon: \"icons/skills/social/thumbsup-approval-like.webp\",\n        },\n        {\n            actionType: \"basic\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Seek`),\n            skill: \"Perception\",\n            action: game.pf2e.actions.get(\"seek\"),\n            icon: \"icons/tools/scribal/magnifying-glass.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.SenseDirection`),\n            skill: \"Survival\",\n            action: game.pf2e.actions.get(\"sense-direction\"),\n            icon: \"icons/tools/navigation/compass-brass-blue-red.webp\",\n        },\n        {\n            actionType: \"basic\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.SenseMotive`),\n            skill: \"Perception\",\n            action: game.pf2e.actions.get(\"sense-motive\"),\n            icon: \"icons/environment/people/commoner.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Shove`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"shove\"),\n            icon: \"systems/pf2e/icons/spells/hydraulic-push.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Sneak`),\n            skill: \"Stealth\",\n            action: game.pf2e.actions.get(\"sneak\"),\n            icon: \"systems/pf2e/icons/conditions/unnoticed.webp\",\n        },\n        {\n            actionType: \"skill_trained\", // Technically not, but... See https://discord.com/channels/613968515677814784/738122137943932958/1175650650575605870\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Squeeze`),\n            skill: \"Acrobatics\",\n            action: game.pf2e.actions.get(\"squeeze\"),\n            icon: \"icons/commodities/tech/claw-mechanical.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Steal`),\n            skill: \"Thievery\",\n            action: game.pf2e.actions.get(\"steal\"),\n            icon: \"icons/containers/bags/coinpouch-gold-red.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.SubsistSociety`),\n            skill: \"Society\",\n            action: game.pf2e.actions.get(\"subsist\"),\n            options: { statistic: \"society\" },\n            icon: \"icons/environment/settlement/building-rubble.webp\",\n        },\n        {\n            actionType: \"basic\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.SubsistSurvival`),\n            skill: \"Survival\",\n            action: game.pf2e.actions.get(\"subsist\"),\n            options: { statistic: \"survival\" },\n            icon: \"icons/environment/wilderness/camp-improvised.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Swim`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"swim\"),\n            icon: \"icons/creatures/fish/fish-shark-swimming.webp\",\n        },\n        {\n            actionType: \"other\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.TakeCoverToggle`),\n            skill: \"\",\n            action: game.pf2e.actions.get(\"take-cover\"),\n            icon: \"systems/pf2e/icons/equipment/shields/tower-shield.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Track`),\n            skill: \"Survival\",\n            action: game.pf2e.actions.get(\"track\"),\n            icon: \"systems/pf2e/icons/conditions/observed.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.TreatDisease`),\n            skill: \"Medicine\",\n            action: game.pf2e.actions.get(\"treat-disease\"),\n            icon: \"icons/magic/nature/root-vine-caduceus-healing.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.TreatPoison`),\n            skill: \"Medicine\",\n            action: game.pf2e.actions.get(\"treat-poison\"),\n            icon: \"systems/pf2e/icons/effects/treat-poison.webp\",\n        },\n        {\n            actionType: \"skill_trained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.TreatWounds`),\n            skill: \"Medicine\",\n            altSkillAndFeat: [\n                { skill: \"Nature\", feat: \"natural-medicine\" },\n                { skill: \"Crafting\", feat: \"chirurgeon\" },\n            ],\n            action: [\n                \"XDY DO_NOT_IMPORT Treat Wounds and Battle Medicine\",\n                \"xdy-pf2e-workbench.asymonous-benefactor-macros-internal\",\n            ],\n            icon: \"icons/skills/wounds/injury-stapled-flesh-tan.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.Trip`),\n            skill: \"Athletics\",\n            action: game.pf2e.actions.get(\"trip\"),\n            icon: \"icons/skills/wounds/bone-broken-marrow-yellow.webp\",\n        },\n        {\n            actionType: \"skill_untrained\",\n            name: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.actions.TumbleThrough`),\n            skill: \"Acrobatics\",\n            action: game.pf2e.actions.get(\"tumble-through\"),\n            icon: \"icons/skills/movement/feet-winged-sandals-tan.webp\",\n        },\n    ];\n\n    const actionDialog = window.actionDialog;\n    if (actionDialog?.rendered) {\n        return actionDialog.close();\n    }\n\n    const controlled = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (controlled.length === 0 && game.user.character) controlled.push(game.user.character);\n    const selectedActor = controlled[0];\n\n    const supportedActorTypes = [\"character\", \"npc\", \"familiar\"];\n    if (!selectedActor || !supportedActorTypes.includes(selectedActor.type)) {\n        return ui.notifications.warn(game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.noActorSelected`));\n    }\n\n    const actionsToUse = prepareActions(selectedActor, bamActions);\n\n    const actors: ActorPF2e[] = <ActorPF2e[]>game?.scenes?.current?.tokens\n            .map((actor) => actor.actor)\n            .filter((actor) => {\n                return supportedActorTypes.includes(actor?.type ?? \"unknown\");\n            }) || [];\n\n    const party = game.actors?.party?.members || [];\n    const partyIds = party.map((actor) => actor.id) || [];\n\n    const allActorsSkills = createMapOfSkillsPerActor(actors);\n\n    if (partyIds.includes(selectedActor.id)) {\n        const partySkills = createMapOfSkillsPerActor(party);\n        getBestBonuses(partySkills, partyIds, actionsToUse);\n    }\n\n    const columns = 1 + ~~((actionsToUse.length - 1) / 14);\n    const width = 26 + columns * 250;\n    // const height =\n    //     30 + ~~(((30 * actionsToUse.filter((x) => !x.showMAP).length + 1) +\n    //             (64 * actionsToUse.filter((x) => x.showMAP).length + 1)) / columns\n    //     );\n\n    const tabView = game.settings.get(MODULENAME, \"bamTabview\");\n\n    const selectedActorSkills = allActorsSkills.get(selectedActor.id) ?? {};\n    const data = actionsToUse.map((action, idx) =>\n        createButtonData(action, idx, selectedActor, partyIds, selectedActorSkills),\n    );\n\n    const filteredData = {\n        encounter: data.filter((value) => !(value.action.showDowntime || value.action.showExploration)),\n        downtime: data.filter((value) => value.action.showDowntime),\n        exploration: data.filter((value) => value.action.showExploration),\n        tabView,\n    };\n    const content = await renderTemplate(\"modules/xdy-pf2e-workbench/templates/macros/bam/index.hbs\", filteredData);\n\n    window.actionDialog = new Dialog(\n        {\n            title: game.i18n.format(`${MODULENAME}.macros.basicActionMacros.title`, {\n                name: selectedActor.name,\n            }),\n            content: content,\n            buttons: {\n                close: {\n                    icon: `<i class=\"fas fa-times\"></i>`,\n                    label: game.i18n.localize(`${MODULENAME}.macros.basicActionMacros.cancel`),\n                },\n            },\n            default: \"close\",\n            render: (html) => {\n                const action = (button, event) => {\n                    const action = actionsToUse[button.dataset.action];\n                    const current = action.action;\n                    if (Array.isArray(current)) {\n                        const macroName = current[0];\n                        const compendiumName = current[1];\n                        const pack = game.packs.get(compendiumName);\n                        if (pack) {\n                            pack.getDocuments().then((documents) => {\n                                const macro_data = documents.find((i) => i._source.name === macroName)?.toObject();\n                                if (macro_data) {\n                                    const temp_macro = new Macro(macro_data);\n                                    temp_macro.execute(event);\n                                } else {\n                                    ui.notifications.error(\n                                        game.i18n.format(`${MODULENAME}.macros.basicActionMacros.macroNotFound`, {\n                                            macroName,\n                                        }),\n                                    );\n                                }\n                            });\n                        } else {\n                            ui.notifications.error(\n                                game.i18n.format(`${MODULENAME}.macros.basicActionMacros.compendiumNotFound`, {\n                                    compendiumName,\n                                }),\n                            );\n                        }\n                    } else if (typeof current === \"object\") {\n                        // TODO Handle other variants than map\n                        const mapValue =\n                            button.dataset.map && button.dataset.map !== \"0\"\n                                ? -(Number.parseInt(button.dataset.map) / 5)\n                                : 0;\n                        current\n                            .use({\n                                event,\n                                multipleAttackPenalty: mapValue,\n                                skipDialog: event.skipDialog,\n                                ...action.options,\n                            })\n                            .then();\n                    } else {\n                        const skills = getSkills(selectedActor, action.skill);\n                        const variant =\n                            button.dataset.map && button.dataset.map !== \"0\"\n                                ? getMapVariant(skills[0], {}, Number.parseInt(button.dataset.map))\n                                : null;\n                        if (variant) {\n                            (<Function>action.action)({\n                                event,\n                                actors: [selectedActor],\n                                modifiers: variant?.modifiers,\n                                ...variant?.extra,\n                            });\n                        } else {\n                            (<Function>action.action)({\n                                event,\n                                actors: [selectedActor],\n                                skill: action.skill.toLocaleLowerCase(),\n                            });\n                        }\n                    }\n                };\n                if (\"querySelectorAll\" in html) {\n                    for (const button of html.querySelectorAll(\".action-list button\")) {\n                        button.addEventListener(\"click\", (event) => action(button, event));\n                    }\n                    for (const tabButton of html.querySelectorAll(\"a.item\")) {\n                        tabButton.addEventListener(\"click\", () => {\n                            if (!tabView) {\n                                for (const tab of html.querySelectorAll(\".bam-body .tab\")) {\n                                    // @ts-expect-error\n                                    if (tab.dataset.tab === tabButton.dataset.tab) tab.classList.toggle(\"active\");\n                                }\n                            } else {\n                                for (const active of html.querySelectorAll(\".active\")) {\n                                    active.classList.remove(\"active\");\n                                }\n                                // @ts-expect-error\n                                for (const active of html.querySelectorAll(`[data-tab=${tabButton.dataset.tab}]`)) {\n                                    active.classList.add(\"active\");\n                                }\n                            }\n                        });\n                    }\n                }\n            },\n        },\n        { jQuery: false, classes: [\"pf2e-bg\", \"bam-dialog\"], width, popOut: true, resizable: true },\n    ).render(true) as Dialog;\n}\n\nfunction getSkills(selectedActor: ActorPF2e, proficiencyKey: string): CharacterSkill<any>[] {\n    const skills = selectedActor.skills;\n    if (!skills) return [];\n    if (proficiencyKey === \"lore\") {\n        return Object.values(skills).filter((skill) => skill !== undefined && skill.lore) as CharacterSkill<any>[];\n    } else {\n        return [skills[proficiencyKey]].filter((s): s is CharacterSkill<any> => !!s);\n    }\n}\n\nfunction getMapVariant(skill: CharacterSkill<any>, extra: Record<string, unknown> | undefined, map: number): Variant {\n    const modifier = new game.pf2e.Modifier({\n        label: game.i18n.localize(\"PF2E.MultipleAttackPenalty\"),\n        modifier: map,\n        type: \"untyped\",\n    });\n    const label = game.i18n.format(\"PF2E.MAPAbbreviationLabel\", { penalty: map });\n    return new Variant(label, skill, extra, [modifier]);\n}\n\nexport class Variant {\n    label: string;\n    skill: CharacterSkill<any>;\n    extra?: Record<string, unknown>;\n    modifiers: ModifierPF2e[];\n    assuranceTotal: number;\n\n    constructor(\n        label: string,\n        skill: CharacterSkill<any>,\n        extra: Record<string, unknown> | undefined,\n        modifiers: ModifierPF2e[] = [],\n        assuranceTotal = 0,\n    ) {\n        this.label = label;\n        this.skill = skill;\n        this.extra = extra;\n        this.modifiers = modifiers;\n        this.assuranceTotal = assuranceTotal;\n    }\n}\n\n// basicActionsMacros();\n","// Originally from Avery (Velara) Avery#9136, modified by me. Included with permission.\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\n\n/**\n * Builds the NPC Spellbook Journal.\n *\n * @return {Promise<void>} Returns a promise that resolves when the journal is created.\n */\nexport async function buildNpcSpellbookJournal() {\n    // @ts-ignore\n    const activeWindow = ui.activeWindow;\n    let actor;\n    if (activeWindow?.constructor.name === \"NPCSheetPF2e\") {\n        actor = activeWindow.token?.actor || activeWindow.actor;\n    } else {\n        const actors = canvas.tokens.controlled.map((a) => a.actor).filter((a) => a?.isOfType(\"npc\"));\n        if (actors?.length === 1) {\n            actor = actors[0];\n        }\n    }\n\n    const spellcastingEntries = actor?.spellcasting?.contents?.filter((item) => item.spells);\n    const length = spellcastingEntries?.length;\n\n    if (!actor || length === 0) {\n        ui.notifications.warn(game.i18n.localize(`${MODULENAME}.macros.buildNpcSpellbookJournal.noSpellcastingEntry`));\n        return;\n    }\n\n    const spellList: any[] = [];\n    for (let i = 0; i < length; i++) {\n        spellList[i] = { entry: spellcastingEntries[i].name, spells: [] };\n        for (let ii = 0; ii < spellcastingEntries[i]?.spells?.contents?.length; ii++) {\n            spellList[i].spells.push(\"@UUID[\" + spellcastingEntries[i].spells.contents[ii].sourceId + \"]\");\n        }\n    }\n\n    const updates = {\n        name: game.i18n.format(`${MODULENAME}.macros.buildNpcSpellbookJournal.generatedSpellbookFor`, {\n            name: actor.name,\n        }),\n        content: `<table class=\"pf2-table\">\n    <tr>\n       <th>Entry</th>\n       <th>Spells</th>\n    </tr>`,\n    };\n\n    for (let ff = 0; ff < spellList.length; ff++) {\n        updates.content += `\n    <tr>\n        <td>${spellList[ff].entry}</td>\n        <td><div style=\"display: flex; gap:3px; flex-wrap: wrap; align-items: center;justify-content: center;\">${spellList[ff].spells}</div></td>\n</tr>\n`;\n    }\n    updates.content += `</table>`;\n\n    const journal = game.journal.getName(updates.name);\n    if (journal) {\n        await journal.delete();\n    }\n    await JournalEntry.create(updates);\n}\n\n// await buildSpellbookJournal();\n","import { minionsInCurrentScene, shouldIHandleThis } from \"../../utils.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { CombatantPF2e } from \"@module/encounter/index.js\";\nimport { ActorPF2e } from \"@actor/base.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\n\nexport function actionsReminder(combatant: CombatantPF2e, reduction = 0) {\n    const actor = combatant.actor;\n    if (actor && shouldIHandleThis(actor)) {\n        if (shouldShowActionReminder(actor, reduction)) {\n            const actionsMessage = `${combatant.token?.name} has ${Math.max(\n                calculateMaxActions(actor) -\n                    Math.max(\n                        actor.getCondition(\"stunned\")?.value ?? 0,\n                        actor.getCondition(\"slowed\")?.value ?? 0,\n                        reduction,\n                    ),\n                0,\n            )} actions remaining.`;\n\n            ChatMessage.create(\n                {\n                    flavor: actionsMessage,\n                    whisper: !actor?.hasPlayerOwner ? ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id) : [],\n                },\n                {},\n            ).then();\n            ui.notifications.info(actionsMessage);\n        }\n    }\n}\n\nexport function shouldShowActionReminder(actor, reduction: number) {\n    const reminderAllowSetting = String(game.settings.get(MODULENAME, \"actionsReminderAllow\"));\n    const showForPC = [\"all\", \"players\"].includes(reminderAllowSetting) && actor?.hasPlayerOwner;\n    const showForNPC = [\"all\", \"gm\"].includes(reminderAllowSetting) && !actor?.hasPlayerOwner;\n    return (showForPC || showForNPC) && hasConditionOrReduction(actor, reduction);\n}\n\nexport function hasConditionOrReduction(actor, reduction: number) {\n    return actor.hasCondition(\"stunned\", \"slowed\", \"quickened\") || reduction > 0;\n}\n\nfunction calculateMaxActions(actor: ActorPF2e) {\n    return actor.traits?.has(\"minion\") ? 2 : 3 + (actor.hasCondition(\"quickened\") ? 1 : 0);\n}\n\nexport async function autoReduceStunned(combatant, userId: string): Promise<number> {\n    if (!combatant?.actor || (userId !== game.user.id && !shouldIHandleThis(combatant?.actor))) {\n        return 0;\n    }\n\n    let stunReduction = 0;\n    const actors: ActorPF2e[] = [combatant?.actor, ...minionsInCurrentScene(combatant?.actor)];\n\n    for (const actor of actors) {\n        const stunned = actor.getCondition(\"stunned\")?.value ?? 0;\n        if (stunned) {\n            stunReduction = Math.min(stunned, calculateMaxActions(actor));\n            for (let i = 0; i < stunReduction; i++) {\n                await actor?.decreaseCondition(\"stunned\");\n            }\n        }\n    }\n    return stunReduction;\n}\n\nexport function reminderTargeting(message: ChatMessagePF2e, setting: string): boolean {\n    const context = message?.flags?.pf2e?.context ?? {};\n\n    if (\n        message.actor &&\n        shouldIHandleThis(message.actor) &&\n        message.flags &&\n        message.user &&\n        [\"spell-attack-roll\", \"attack-roll\"].includes(<string>context.type)\n    ) {\n        const targets = message.user.targets;\n        if (!targets || targets.size === 0) {\n            const title = context.title;\n\n            if (setting === \"reminder\") {\n                const info = game.i18n.format(`${MODULENAME}.SETTINGS.reminderTargeting.info`, { title });\n                ui.notifications.info(info);\n            } else if (setting === \"mustTarget\") {\n                const error = game.i18n.format(`${MODULENAME}.SETTINGS.reminderTargeting.error`, { title });\n                ui.notifications.error(error);\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { isActuallyDamageRoll } from \"../../utils.js\";\nimport { PhysicalItemPF2e } from \"@item\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\n\nexport function chatCardDescriptionCollapse(html: HTMLElement) {\n    const hasCardContent = html.querySelectorAll(\".card-content\");\n    if (hasCardContent.length > 0) {\n        const effectItem = game.i18n.localize(`${MODULENAME}.effectItem`);\n        if (String(game.settings.get(MODULENAME, \"autoCollapseItemChatCardContent\")) === \"collapsedDefault\") {\n            hasCardContent.forEach((content) => (content[\"style\"].display = \"none\"));\n            const cardContentSiblings = (hasCardContent[0] as HTMLElement).parentElement?.children;\n            if (cardContentSiblings?.[0]) {\n                cardContentSiblings[0].insertAdjacentHTML(\"beforeend\", eye);\n            }\n            if (game.settings.get(MODULENAME, \"autoCollapseItemChatCardMoveEffectLinks\")) {\n                const linksToMove: any[] = [];\n                const pTags = Array.from(html.getElementsByTagName(\"p\"));\n                for (const pTag of pTags) {\n                    const contentLink = pTag.querySelector(\"a.content-link\");\n                    if (contentLink && contentLink?.getAttribute(\"data-tooltip\")?.includes(effectItem)) {\n                        linksToMove.push(pTag);\n                    }\n                }\n\n                const chatMessageContainer = html.closest(\".chat-message\");\n                if (chatMessageContainer && linksToMove.length > 0) {\n                    linksToMove[0].classList.add(\"item-block-line\");\n                    // Append all linksToMove to the end of the chatMessageContainer\n                    chatMessageContainer.append(...linksToMove);\n                }\n            }\n        }\n    }\n    html.addEventListener(\"click\", (event) => {\n        const target = (event.target as HTMLElement).closest(\"h3\");\n        if (target) {\n            const content: HTMLElement | undefined | null = target\n                .closest(\".chat-message\")\n                ?.querySelector(\".card-content\");\n            if (content) {\n                event.preventDefault();\n                content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\n                if (content.style.display === \"none\") {\n                    hasCardContent.forEach((content: HTMLElement) => (content.style.display = \"none\"));\n                }\n                toggleEyes(html);\n            }\n        }\n    });\n}\n\nfunction toggleEyes(html: HTMLElement) {\n    const hasEye = html.querySelectorAll(\".fa-eye\");\n    const hasEyeSlash = html.querySelectorAll(\".fa-eye-slash\");\n    for (const eye of Array.from(hasEye)) {\n        eye.classList.toggle(\"fa-eye-slash\");\n        eye.classList.toggle(\"fa-eye\");\n    }\n    for (const eye of Array.from(hasEyeSlash)) {\n        eye.classList.toggle(\"fa-eye-slash\");\n        eye.classList.toggle(\"fa-eye\");\n    }\n}\n\nfunction handleRollNoteToggling(html: HTMLElement) {\n    let note;\n    const hasNote = html.querySelectorAll(\".roll-note\");\n    for (note of Array.from(hasNote)) {\n        note.style.display = note.style.display === \"none\" ? \"block\" : \"none\";\n    }\n    toggleEyes(html);\n}\n\nexport function chatActionCardDescriptionCollapse(html: HTMLElement) {\n    const hasAction = html.querySelectorAll(\".action\");\n    if (hasAction.length > 0) {\n        const rollNotes = html.querySelectorAll(\".roll-note\");\n        if (rollNotes.length > 0) {\n            if (String(game.settings.get(MODULENAME, \"autoCollapseItemActionChatCardContent\")) === \"collapsedDefault\") {\n                for (const note of Array.from(rollNotes)) {\n                    note[\"style\"].display = \"none\";\n                }\n\n                const actionSiblings = (hasAction[0] as HTMLElement).parentElement?.children;\n                if (actionSiblings?.[1]) {\n                    actionSiblings[1].insertAdjacentHTML(\"beforeend\", eye);\n                }\n            }\n            html.addEventListener(\"click\", (event) => {\n                const target = event.target as HTMLElement;\n                if (target?.matches(\"h4.action, .fa-eye, .fa-eye-slash, strong\")) {\n                    event.preventDefault();\n                    handleRollNoteToggling(html);\n                }\n            });\n        }\n    }\n}\n\nconst eye = ' <i style=\"font-size: small; max-width: min-content\" class=\"fa-solid fa-eye-slash\">';\n\nexport function chatAttackCardDescriptionCollapse(html: HTMLElement) {\n    const hasRollNote = html.querySelectorAll(\".roll-note\");\n    if (hasRollNote.length > 0) {\n        if (String(game.settings.get(MODULENAME, \"autoCollapseItemAttackChatCardContent\")) === \"collapsedDefault\") {\n            for (const note of hasRollNote) {\n                note[\"style\"].display = \"none\";\n            }\n\n            hasRollNote[0].parentNode?.parentNode?.children[0].insertAdjacentHTML(\"beforeend\", eye);\n        }\n        html.addEventListener(\"click\", (event) => {\n            const target = event.target as HTMLElement;\n            if (target.matches(\"h4.action, .fa-eye, .fa-eye-slash, strong\")) {\n                event.preventDefault();\n                handleRollNoteToggling(html);\n            }\n        });\n    }\n}\n\nexport function damageCardExpand(message: ChatMessagePF2e, html: HTMLElement, expandDmg: string) {\n    const diceTooltips = html.querySelectorAll(\".dice-tooltip\");\n    if (expandDmg === \"expandedAll\") {\n        diceTooltips.forEach((diceTooltip: HTMLElement) => (diceTooltip.style.display = \"block\"));\n    } else if (\n        expandDmg.startsWith(\"expandedNew\") &&\n        game.messages.contents\n            .filter(isActuallyDamageRoll)\n            .slice(-Math.min(expandDmg.endsWith(\"est\") ? 1 : 3, game.messages.size))\n            .filter((m) => m.id === message.id).length > 0\n    ) {\n        diceTooltips.forEach((diceTooltip: HTMLElement) => (diceTooltip.style.display = \"block\"));\n    }\n}\n\n/**\n * Mystify NPC items.\n *\n * @param actor\n * @param {string} minimumRarity - The minimum rarity of items to mystify. Default is obtained from a game setting.\n * @param {any} usingPartyLevel - Whether to use the party level to determine the minimum level of items to mystify. Default is obtained from a game setting.\n * @param {number} minimumLevel - The minimum level of items to mystify. Default is obtained from a game setting.\n * @param {number} multiplier - The multiplier to apply to the minimum level. Default is obtained from a game setting.\n */\nexport async function mystifyNpcItems(\n    actor,\n    minimumRarity: string = String(\n        game.settings.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItemsOfThisRarityOrGreater\"),\n    ),\n    usingPartyLevel: any = game.settings.get(\n        MODULENAME,\n        \"npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterUsingPartyLevel\",\n    ),\n    minimumLevel: number = Number.parseInt(\n        String(game.settings.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreater\")),\n    ) ?? -1,\n    multiplier: number = Number.parseFloat(\n        String(game.settings.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreaterMultiplier\")),\n    ),\n) {\n    // Kind of ugly, but, feeling lazy...\n    if (usingPartyLevel) {\n        game.settings.set(\n            MODULENAME,\n            \"npcMystifyAllPhysicalMagicalItemsOfThisLevelOrGreater\",\n            game?.actors?.party?.level ?? minimumLevel,\n        );\n    }\n    if (multiplier !== 1 && minimumLevel !== -1) {\n        minimumLevel = minimumLevel * multiplier;\n    }\n    const itemUpdates: any[] = [];\n    const rarityKeys = Object.keys(CONFIG.PF2E.rarityTraits);\n    if (!actor || !actor.items) {\n        return;\n    }\n    const relevantItems: PhysicalItemPF2e[] = <PhysicalItemPF2e[]>Array.from(\n        actor.items\n            ?.filter((item) =>\n                // Rollup couldn't resolve PHYSICAL_ITEM_TYPES so I copied the values\n                [\"armor\", \"shield\", \"consumable\", \"backpack\", \"book\", \"equipment\", \"treasure\", \"weapon\"].includes(\n                    item.type,\n                ),\n            )\n            .map((item) => <PhysicalItemPF2e>(<unknown>item))\n            .filter((item) => item.isIdentified)\n            .filter((item) => !item.isTemporary)\n            .filter((item) => item.level >= minimumLevel)\n            .filter((item) => rarityKeys.indexOf(item.rarity) >= rarityKeys.indexOf(minimumRarity))\n            .filter((item) => item.isMagical || item.isAlchemical),\n    );\n\n    for (const item of relevantItems ?? []) {\n        itemUpdates.push({\n            _id: item.id,\n            \"system.identification.status\": \"unidentified\",\n            \"system.identification.unidentified\": item.getMystifiedData(\"unidentified\"),\n        });\n    }\n    await actor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n}\n","import { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport {\n    degreeOfSuccessWithRerollHandling,\n    isActuallyDamageRoll,\n    objectHasKey,\n    shouldIHandleThisMessage,\n} from \"../../utils.ts\";\nimport { ActorFlagsPF2e, RollOptionFlags } from \"@actor/data/base.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { SpellPF2e } from \"@item/spell/document.js\";\n\nexport async function autoRollDamage(message: ChatMessagePF2e) {\n    const numberOfMessagesToCheck = 10;\n    const settings = {\n        autoRollDamageAllow: String(game.settings.get(MODULENAME, \"autoRollDamageAllow\")),\n        autoRollDamageForStrike: game.settings.get(MODULENAME, \"autoRollDamageForStrike\"),\n        autoRollDamageForSpellAttack: game.settings.get(MODULENAME, \"autoRollDamageForSpellAttack\"),\n        autoRollDamageForSpellWhenNotAnAttack: game.settings.get(MODULENAME, \"autoRollDamageForSpellWhenNotAnAttack\"),\n    };\n\n    if (\n        shouldIHandleThisMessage(\n            message,\n            [\"all\", \"players\"].includes(settings.autoRollDamageAllow),\n            [\"all\", \"gm\"].includes(settings.autoRollDamageAllow),\n        )\n    ) {\n        const pf2eFlags = <ActorFlagsPF2e>message.flags.pf2e;\n        const originUuid = <string>pf2eFlags?.origin?.uuid;\n\n        if (originUuid) {\n            const messageToken = canvas?.scene?.tokens.get(<string>message.speaker.token);\n            const actor = messageToken?.actor ? messageToken?.actor : game.actors?.get(<string>message.speaker.actor);\n            const rollType = pf2eFlags.context?.type;\n\n            const origin: any = originUuid ? await fromUuid(originUuid) : null;\n            const isAttackSpell = origin?.traits?.has(\"attack\") ?? false;\n            const isSaveSpell = origin?.system?.defense?.save ?? false;\n            const hasFixedTime = Number.isInteger(parseInt(origin?.system?.time?.value)) ?? false;\n\n            const rollForNonSpellAttack = rollType === \"attack-roll\" && settings.autoRollDamageForStrike;\n            const rollForNonAttackSpell =\n                origin !== null &&\n                !isAttackSpell &&\n                pf2eFlags.casting !== null &&\n                hasFixedTime &&\n                origin?.system?.damage;\n\n            const rollForNonAttackSaveSpell =\n                isSaveSpell &&\n                rollForNonAttackSpell &&\n                (settings.autoRollDamageForSpellWhenNotAnAttack === \"saveSpell\" ||\n                    settings.autoRollDamageForSpellWhenNotAnAttack === \"anySpell\");\n\n            const rollForNonAttackNonSaveSpell =\n                !isSaveSpell &&\n                rollForNonAttackSpell &&\n                (settings.autoRollDamageForSpellWhenNotAnAttack === \"nonSaveSpell\" ||\n                    settings.autoRollDamageForSpellWhenNotAnAttack === \"anySpell\");\n\n            const rollForAttackSpell = isAttackSpell && settings.autoRollDamageForSpellAttack && hasFixedTime;\n\n            const degreeOfSuccess = degreeOfSuccessWithRerollHandling(message);\n            const isFailure = [\"criticalFailure\", \"failure\"].includes(degreeOfSuccess);\n            const isSuccess = [\"criticalSuccess\", \"success\"].includes(degreeOfSuccess);\n            const context: any = pf2eFlags.context;\n            const isBasicSave = context?.options?.includes(\"item:defense:basic\");\n\n            const originMessage = await getLatestChatMessageWithOrigin(5, originUuid);\n            const flags = originMessage?.flags;\n\n            const targetHelperActive = game.modules.get(\"pf2e-target-helper\")?.active;\n            const targetHelperWillAutoroll =\n                targetHelperActive && game.settings.get(\"pf2e-target-helper\", \"multipleTargetRollDamage\") !== \"no\";\n            const letTargetHelperAutorollDamage =\n                (flags[\"pf2e-target-helper\"]?.targets ?? 0) > 1 && targetHelperWillAutoroll;\n\n            if (\n                actor &&\n                (rollForNonAttackNonSaveSpell ||\n                    (rollForNonAttackSaveSpell && (isFailure || (isBasicSave && degreeOfSuccess === \"success\"))) ||\n                    (rollForAttackSpell && isSuccess)) &&\n                !letTargetHelperAutorollDamage\n            ) {\n                await handleSpell(pf2eFlags, numberOfMessagesToCheck, originUuid, origin, message, degreeOfSuccess);\n            } else if (actor && rollForNonSpellAttack && isSuccess) {\n                await handleNonSpell(actor, message, degreeOfSuccess);\n            }\n        }\n    }\n}\n\n/**\n * Checks if the given message satisfies the conditions to perform a flat check,\n * and returns whether the damage should be rolled or not.\n *\n * @param {ChatMessagePF2e} message - The chat message to check.\n * @return {Promise<boolean>} - A boolean indicating whether to roll the damage.\n */\nexport async function noOrSuccessfulFlatcheck(message: ChatMessagePF2e): Promise<boolean> {\n    let rollDamage = true;\n    if (game.modules.get(\"pf2-flat-check\")?.active) {\n        const actorFlat =\n            message.actor?.itemTypes.condition.filter((x) => [\"blinded\", \"dazzled\"].includes(x.slug)) ?? [];\n        const targetFlat =\n            message.target?.actor.itemTypes.condition.filter((x) =>\n                [\"concealed\", \"hidden\", \"invisible\", \"undetected\"].includes(x.slug),\n            ) ?? [];\n        if (actorFlat?.length > 0 || targetFlat?.length > 0) {\n            const { token, actor } = message;\n            let { item } = message;\n            const match = message.flags.pf2e?.origin?.uuid?.match(/Item.(\\w+)/);\n            if (!item && match && match[1] === \"xxPF2ExUNARMEDxx\") {\n                item = { type: \"weapon\", data: {} } as any;\n            }\n            if (token && item && actor) {\n                if (\n                    // Reverse of the check in the pf2-flat-check module\n                    !isActuallyDamageRoll(message)\n                ) {\n                    await new Promise((resolve) => setTimeout(resolve, 150)); // Sleep to wait for flat check message\n                    const array = Array.from(game.messages);\n                    const messageIndex = array.findIndex((msg) => msg.id === message.id);\n                    if (messageIndex > -1) {\n                        rollDamage = !array\n                            .slice(messageIndex)\n                            .reverse()\n                            .find((msg) => {\n                                return msg.content.includes(\"dice-result flat-check-failure\");\n                            });\n                    }\n                }\n            }\n        } else {\n            return rollDamage;\n        }\n    }\n    return rollDamage;\n}\n\nexport function persistentDamage(message) {\n    const flavor = message.flavor;\n    const persistentFlavor = flavor?.includes(\"<strong>\" + game.i18n.localize(\"PF2E.ConditionTypePersistent\"));\n    if (\n        shouldIHandleThisMessage(\n            message,\n            [\"all\", \"players\"].includes(String(game.settings.get(MODULENAME, \"applyPersistentAllow\"))),\n            [\"all\", \"gm\"].includes(String(game.settings.get(MODULENAME, \"applyPersistentAllow\"))),\n        ) &&\n        flavor &&\n        persistentFlavor &&\n        message.speaker.token &&\n        message.rolls &&\n        message.rolls.length > 0 &&\n        message.id === game.messages.contents.pop()?.id &&\n        game.actors &&\n        (message.getFlag(MODULENAME, \"persistentHandled\") ?? true)\n    ) {\n        const token = canvas.tokens?.get(message.speaker.token);\n        if (token && token.isOwner) {\n            // Should only be one roll, either way, only use the first.\n            token?.actor\n                ?.applyDamage({\n                    damage: message.rolls[0],\n                    token: token.document,\n                })\n                .then(() => message.setFlag(MODULENAME, \"persistentHandled\", true).then());\n        }\n        const actor = token?.actor;\n        if (actor && game.settings.get(MODULENAME, \"applyPersistentDamageRecoveryRoll\")) {\n            const condition = actor.conditions\n                .filter((condition) => condition.slug === \"persistent-damage\")\n                .find((condition) => flavor.includes(condition.name));\n            if (condition) {\n                // TODO Update the message to remove the recovery roll button, instead include the result in the message (and remove the message the following line creates.)\n                condition.rollRecovery().then();\n            }\n        }\n    }\n}\n\nexport function persistentHealing(message, enabled: boolean) {\n    if (\n        enabled &&\n        shouldIHandleThisMessage(\n            message,\n            [\"all\", \"players\"].includes(String(game.settings.get(MODULENAME, \"applyPersistentAllow\"))),\n            [\"all\", \"gm\"].includes(String(game.settings.get(MODULENAME, \"applyPersistentAllow\"))),\n        ) &&\n        message.flavor &&\n        message.rolls &&\n        game.combats &&\n        game.combats.active &&\n        game.combats.active.combatant &&\n        game.combats.active.combatant.actor &&\n        message.id === game.messages.contents.pop()?.id &&\n        (message.getFlag(MODULENAME, \"persistentHandled\") ?? true)\n    ) {\n        const token = game.combats.active.combatant.token;\n        if (token && token.isOwner) {\n            const fastHealingLabel = game.i18n.localize(\n                `${MODULENAME}.SETTINGS.applyPersistentHealing.FastHealingLabel`,\n            );\n            const regenerationLabel = game.i18n.localize(\n                `${MODULENAME}.SETTINGS.applyPersistentHealing.RegenerationLabel`,\n            );\n            if ([fastHealingLabel, regenerationLabel].some((text) => message.flavor?.includes(text))) {\n                const healing = message.rolls.reduce((sum, current) => sum + (current.total || 1), 0) * -1;\n                token.actor\n                    ?.applyDamage({\n                        damage: healing,\n                        token: token.actor?.getActiveTokens()[0].document,\n                    })\n                    .then(() => message.setFlag(MODULENAME, \"persistentHandled\", true).then());\n            }\n        }\n    }\n}\n\nfunction getActionFromMessage(actions, message: ChatMessagePF2e) {\n    const attackAbilities = actions\n        .filter((atk) => {\n            return atk?.system?.traits.value.includes(\"attack\");\n        })\n        .filter((atk) => {\n            return atk.id === message.item?.id;\n        });\n\n    const strikes = message.actor?.system?.actions\n        ?.filter((atk: { type: string }) => {\n            return atk?.type === \"strike\";\n        })\n        .filter((atk) => {\n            return atk?.item?.id === message.item?.id;\n        });\n\n    const allAttacks = attackAbilities.concat(strikes);\n\n    if (allAttacks.length === 1) {\n        // Normal case\n        return allAttacks[0];\n    } else if (allAttacks.length > 1 && strikes && strikes?.length > 1) {\n        // The strike is most likely based on an RE which means that all actions get the same item id (e.g. animal form), try to regex it out of the message instead\n        const strike = game.i18n.localize(`${MODULENAME}.SETTINGS.autoRollDamageForStrike.strike`);\n        const s = `<h4 class=\"action\">(.*?)${strike}: (.*?)<`;\n        const strikeName = message.flavor?.match(s);\n        if (strikeName && strikeName[2]) {\n            return actions.find((a: { label: string }) => a.label === strikeName[2]);\n        } else {\n            // If we can't find the strike label, give up.\n            return null;\n        }\n    } else {\n        // If we can't find the strike, give up.\n        return null;\n    }\n}\n\nasync function getLatestChatMessageWithOrigin(numberOfMessagesToCheck: number, originUuid: string) {\n    const chatLength = game.messages?.contents.length ?? 0;\n    for (let i = 1; i <= Math.min(numberOfMessagesToCheck + 1, chatLength); i++) {\n        const spellMessage = game.messages?.contents[chatLength - i];\n        if (spellMessage && (<ActorFlagsPF2e>spellMessage.flags.pf2e).origin?.uuid === originUuid) {\n            return spellMessage;\n        }\n    }\n    return undefined;\n}\n\nasync function getCastRankFromChat(numberOfMessagesToCheck: number, originUuid: string): Promise<number> {\n    const spellMessage = await getLatestChatMessageWithOrigin(numberOfMessagesToCheck, originUuid);\n    const level = spellMessage?.content.match(/data-cast-level=\"(\\d+)\"/);\n    if (level && level[1]) {\n        return parseInt(level[1]);\n    }\n    return 0;\n}\n\nasync function handleSpell(\n    flags: foundry.documents.ActorFlags & {\n        pf2e: { rollOptions: RollOptionFlags; trackedItems: Record<string, string>; [p: string]: unknown };\n    },\n    numberOfMessagesToCheck: number,\n    originUuid: string,\n    origin: SpellPF2e,\n    message: any,\n    degreeOfSuccess: string,\n) {\n    const castRank = await determineCastRank(origin.name, flags, numberOfMessagesToCheck, originUuid, origin.system);\n    let blind = determineBlindStatus(message);\n    const rollDamage = await noOrSuccessfulFlatcheck(message);\n\n    if (rollDamage) {\n        // Fakes the event.closest function that pf2e uses to parse spell level for heightening damage rolls.\n        const target = constructTargetElement(castRank);\n\n        // Make automatic damageRoll be private if the spell is private, unless hideNameOfPrivateSpell is set.\n        const shouldHideName = blind && game.settings.get(MODULENAME, \"castPrivateSpellHideName\");\n        if (shouldHideName) {\n            blind = false;\n        }\n        if (message.flags?.pf2e?.origin?.variant?.overlays?.length > 0) {\n            const variant = origin.loadVariant({\n                castRank,\n                // target,\n                overlayIds: [message.flags.pf2e.origin.variant.overlays[0]],\n            });\n            // @ts-ignore\n            await variant.rollDamage({\n                outcome: degreeOfSuccess,\n                target,\n                ctrlKey: blind,\n            });\n        } else {\n            // @ts-ignore\n            await origin?.rollDamage({\n                outcome: degreeOfSuccess,\n                target,\n                ctrlKey: blind,\n            });\n        }\n    }\n}\n\nasync function determineCastRank(\n    spellName: string,\n    flags: any,\n    numberOfMessagesToCheck: number,\n    originUuid: string,\n    system,\n): Promise<number> {\n    let castRank: number = flags.origin?.castRank ? Number(flags.origin?.castRank) : 0;\n    if (castRank === 0) {\n        castRank = await getCastRankFromChat(numberOfMessagesToCheck, originUuid);\n    }\n    if (castRank === 0) {\n        if (game.settings.get(MODULENAME, \"autoRollDamageNotifyOnSpellCardNotFound\")) {\n            ui.notifications.info(game.i18n.format(`${MODULENAME}.spellCardNotFound`, { spell: spellName }));\n        }\n        // Give up and use spell level\n        castRank = system.level.value ?? 0;\n    }\n    return castRank;\n}\n\nfunction determineBlindStatus(message: any): boolean {\n    const originalRollMode = game.settings.get(\"core\", \"rollMode\");\n    return (\n        ((message?.type === CONST.CHAT_MESSAGE_TYPES.WHISPER ||\n            message?.blind ||\n            (message?.whisper && message?.whisper.length > 0)) &&\n            originalRollMode !== CONST.DICE_ROLL_MODES.PRIVATE) ??\n        false\n    );\n}\n\nfunction constructTargetElement(castRank: number): HTMLDivElement {\n    const target = document.createElement(\"div\");\n    target.dataset.castRank = castRank.toString();\n    target.closest = () => {\n        return { dataset: { castRank: castRank } };\n    };\n    return target;\n}\n\nasync function handleNonSpell(actor, message, degreeOfSuccess: string) {\n    const options = actor?.getRollOptions([\"all\", \"damage-roll\"]);\n    const attackOption = options?.find((option) => option.match(/(.*)-attack/));\n    const damageOption = attackOption?.replace(\"-attack\", \"-damage\");\n\n    options?.push(damageOption);\n\n    const checkContext = message.flags.pf2e.context ?? null;\n\n    const mapIncreases =\n        checkContext && \"mapIncreases\" in checkContext && [0, 1, 2].includes(<number>checkContext.mapIncreases)\n            ? checkContext.mapIncreases\n            : null;\n    const altUsage = checkContext && \"altUsage\" in checkContext ? checkContext.altUsage : null;\n    const target = message.target?.token?.object ?? null;\n    const actions = actor?.system?.actions;\n\n    if (!actions || actions.length === 0) return;\n\n    const rollDamage = await noOrSuccessfulFlatcheck(message); // Can't be inlined\n    if (!rollDamage) return;\n\n    const toRoll = getActionFromMessage(actions, message);\n\n    if (toRoll && toRoll.type === \"strike\") {\n        const method = degreeOfSuccess === \"success\" ? \"damage\" : \"critical\";\n        return toRoll[method]?.({ event, altUsage, mapIncreases, checkContext, target, options });\n    }\n\n    await handleElementalBlastAttack(actor, message, degreeOfSuccess, checkContext);\n}\n\nasync function handleElementalBlastAttack(actor, message, degreeOfSuccess, checkContext) {\n    const roll = message.rolls.find((r) => r.options?.action === \"elemental-blast\");\n    if (roll && actor.isOfType(\"character\")) {\n        const identifier = <string>roll?.options.identifier;\n        const [element, damageType, meleeOrRanged, actionCost]: (string | undefined)[] = identifier?.split(\".\") ?? [];\n\n        if (objectHasKey(CONFIG.PF2E.elementTraits, element) && objectHasKey(CONFIG.PF2E.damageTypes, damageType)) {\n            const params: any = {\n                element,\n                damageType,\n                melee: meleeOrRanged === \"melee\",\n                actionCost: Number(actionCost) || 1,\n                checkContext,\n                outcome: degreeOfSuccess,\n                event,\n            };\n            await new game.pf2e.ElementalBlast(actor).damage(params);\n        }\n    }\n    return;\n}\n","import { ActorPF2e } from \"@actor\";\nimport { minionsInCurrentScene, shouldIHandleThis } from \"../../utils.js\";\nimport { CombatantPF2e } from \"@module/encounter/index.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\n\nexport async function reduceFrightened(combatant: CombatantPF2e, userId: string) {\n    if (!combatant || !combatant.actor || (userId !== game.user.id && !shouldIHandleThis(combatant.actor))) {\n        return;\n    }\n\n    const actors: ActorPF2e[] = [combatant.actor, ...minionsInCurrentScene(combatant.actor)];\n\n    for (const actor of actors) {\n        const minimumFrightened = <number>(actor?.getFlag(MODULENAME, \"condition.frightened.min\") ?? 0);\n        const frightened = actor.getCondition(\"frightened\");\n        const currentFrightened = frightened?.value ?? 0;\n\n        if (frightened && currentFrightened > 0 && !frightened.isLocked) {\n            const reduceBy = actor.itemTypes.feat.some((feat) => feat.slug === \"dwarven-doughtiness\") ? 2 : 1;\n\n            for (let i = 0; i < reduceBy && currentFrightened - i > minimumFrightened; i++) {\n                await actor.decreaseCondition(\"frightened\");\n            }\n        }\n    }\n}\n","import { isFirstGM, logDebug, shouldIHandleThis, shouldIHandleThisMessage } from \"../../utils.js\";\nimport { CHARACTER_TYPE, MODULENAME, NPC_TYPE } from \"../../xdy-pf2e-workbench.js\";\nimport { ItemPF2e } from \"@item/base/document.js\";\nimport { ActorPF2e } from \"@actor/index.js\";\nimport { ActorSystemData } from \"@actor/data/base.js\";\nimport { moveOnZeroHP } from \"../initiativeHandler/index.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\n\nexport function dyingHandlingPreUpdateActorHook(\n    actor,\n    update: Record<string, string>,\n    currentActorHp: number,\n    updateHp: number,\n    autoGainDying: string,\n) {\n    const automaticMove = String(game.settings.get(MODULENAME, \"enableAutomaticMove\"));\n    const automoveIfZeroHP =\n        game.combat &&\n        ((automaticMove === \"reaching0HPCharactersOnly\" && actor.type === CHARACTER_TYPE) ||\n            (automaticMove === \"reaching0HP\" && [CHARACTER_TYPE, NPC_TYPE].includes(actor.type)));\n    const autoRemoveDying = String(game.settings.get(MODULENAME, \"autoRemoveDyingAtGreaterThanZeroHP\"));\n    const autoRemoveUnconscious = String(game.settings.get(MODULENAME, \"autoRemoveUnconsciousAtGreaterThanZeroHP\"));\n\n    if (autoGainDying && !autoGainDying.startsWith(\"no\")) {\n        handleDyingOnZeroHP(actor, fu.deepClone(update), currentActorHp, updateHp, autoGainDying).then(\n            (hpRaisedAbove0) => {\n                logDebug(\"Workbench increaseDyingOnZeroHP complete\");\n                if (hpRaisedAbove0) {\n                    if (autoRemoveDying && !autoRemoveDying.startsWith(\"no\")) {\n                        // Ugh.\n                        new Promise((resolve) => setTimeout(resolve, 250)).then(() => {\n                            autoRemoveDyingAtGreaterThanZeroHp(\n                                actor,\n                                currentActorHp <= 0 && hpRaisedAbove0,\n                                autoRemoveDying,\n                            ).then(() => {\n                                logDebug(\"Workbench autoRemoveDyingAtGreaterThanZeroHP complete\");\n                                if (autoRemoveUnconscious) {\n                                    autoRemoveUnconsciousAtGreaterThanZeroHP(\n                                        actor,\n                                        currentActorHp <= 0 && hpRaisedAbove0,\n                                    ).then();\n                                }\n                            });\n                        });\n                    } else {\n                        if (autoRemoveUnconscious) {\n                            autoRemoveUnconsciousAtGreaterThanZeroHP(\n                                actor,\n                                currentActorHp <= 0 && hpRaisedAbove0,\n                            ).then();\n                        }\n                    }\n                } else {\n                    if (automoveIfZeroHP && currentActorHp > 0 && updateHp <= 0) {\n                        moveOnZeroHP(actor);\n                    }\n                }\n            },\n        );\n    } else {\n        if (currentActorHp <= 0 && updateHp > 0) {\n            if (autoRemoveDying && !autoRemoveDying.startsWith(\"no\")) {\n                autoRemoveDyingAtGreaterThanZeroHp(actor, currentActorHp <= 0, autoRemoveDying).then(() => {\n                    if (autoRemoveUnconscious) {\n                        autoRemoveUnconsciousAtGreaterThanZeroHP(actor, currentActorHp <= 0).then();\n                    }\n                });\n            } else {\n                if (autoRemoveUnconscious) {\n                    autoRemoveUnconsciousAtGreaterThanZeroHP(actor, currentActorHp <= 0).then();\n                }\n            }\n        } else if (automoveIfZeroHP && currentActorHp > 0 && updateHp <= 0) {\n            moveOnZeroHP(actor);\n        }\n    }\n}\n\nexport async function itemHandlingItemHook(item: ItemPF2e) {\n    if (isFirstGM() && item.slug === \"dying\" && item.parent) {\n        handleDying(0, 0, item.parent, false);\n    }\n\n    const giveWounded = game.settings.get(MODULENAME, \"giveWoundedWhenDyingRemoved\");\n    const giveUnconscious = game.settings.get(MODULENAME, \"giveUnconsciousIfDyingRemovedAt0HP\");\n    if (giveWounded || giveUnconscious) {\n        if (giveWounded) {\n            giveWoundedWhenDyingRemoved(item).then(() => {\n                logDebug(\"Workbench giveWoundedWhenDyingRemoved complete\");\n                if (giveUnconscious) {\n                    giveUnconsciousIfDyingRemovedAt0HP(item).then(() => {\n                        logDebug(\"Workbench giveUnconsciousIfDyingRemovedAt0HP complete\");\n                    });\n                }\n            });\n        } else if (giveUnconscious) {\n            await giveUnconsciousIfDyingRemovedAt0HP(item);\n        }\n    }\n}\n\nexport function handleDyingRecoveryRoll(message: ChatMessagePF2e, enabled: boolean) {\n    const flavor = message.flavor;\n    const token = message.token;\n    if (\n        enabled &&\n        shouldIHandleThisMessage(\n            message,\n            [\"all\", \"players\"].includes(String(game.settings.get(MODULENAME, \"handleDyingRecoveryRollAllow\"))),\n            [\"all\", \"gm\"].includes(String(game.settings.get(MODULENAME, \"handleDyingRecoveryRollAllow\"))),\n        ) &&\n        (flavor.includes(game.i18n.localize(\"PF2E.Recovery.critFailure\")) ||\n            flavor.includes(game.i18n.localize(\"PF2E.Recovery.critSuccess\")) ||\n            flavor.includes(game.i18n.localize(\"PF2E.Recovery.failure\")) ||\n            flavor.includes(game.i18n.localize(\"PF2E.Recovery.success\"))) &&\n        message.id === game.messages.contents.pop()?.id &&\n        token &&\n        token.actor &&\n        token.isOwner\n    ) {\n        const outcome = message.flags?.pf2e?.context?.outcome ?? \"\";\n\n        const messageToken = canvas?.scene?.tokens.get(<string>message.speaker.token);\n        const actor = messageToken?.actor ? messageToken?.actor : game.actors?.get(<string>message.speaker.actor);\n\n        const originalDyingCounter = token.actor?.getCondition(\"dying\")?.value ?? 0;\n        let dyingCounter = 0;\n        let outcomeString = \"\";\n        switch (outcome) {\n            case \"criticalFailure\":\n                dyingCounter = dyingCounter + 2;\n                outcomeString = game.i18n.localize(\"PF2E.CritFailure\");\n                break;\n            case \"criticalSuccess\":\n                dyingCounter = dyingCounter - 2;\n                outcomeString = game.i18n.localize(\"PF2E.CritSuccess\");\n                break;\n            case \"failure\":\n                dyingCounter = dyingCounter + 1;\n                outcomeString = game.i18n.localize(\"PF2E.Failure\");\n                break;\n            case \"success\":\n                outcomeString = game.i18n.localize(\"PF2E.Success\");\n                dyingCounter = dyingCounter - 1;\n                break;\n        }\n        if (originalDyingCounter > 0 || dyingCounter !== 0) {\n            handleDying(dyingCounter, originalDyingCounter, actor);\n\n            const total = message.rolls.reduce((total, roll) => total + roll.total, 0);\n            ChatMessage.create({\n                flavor: game.i18n.format(`${MODULENAME}.SETTINGS.handleDyingRecoveryRoll.handled`, {\n                    outcome: outcomeString,\n                    defeated: token.combatant?.defeated\n                        ? game.i18n.format(`${MODULENAME}.SETTINGS.handleDyingRecoveryRoll.defeated`, {\n                              name: token.actor?.name ?? \"???\",\n                          })\n                        : \"\",\n                    roll: total,\n                }),\n                speaker: message.speaker,\n            }).then();\n            message.delete({ render: false }).then();\n        }\n    }\n}\n\nexport function handleDying(\n    dyingCounter: number,\n    originalDyingCounter: number,\n    actor,\n    isDefeated: any = actor.combatant?.defeated,\n) {\n    // Can't await, so do the math.\n    const shouldDie = originalDyingCounter + dyingCounter >= actor.system.attributes.dying.max && !isDefeated;\n    const shouldBecomeDying = originalDyingCounter + dyingCounter > 0 && !isDefeated;\n    if (shouldDie) {\n        actor\n            .increaseCondition(\"dying\", {\n                max: actor.system.attributes.dying.max,\n                value: actor.system.attributes.dying.max,\n            })\n            .then(() => {\n                actor.combatant?.toggleDefeated().then(() => {\n                    // Dead, not dying, so clear the flag.\n                    actor\n                        .unsetFlag(MODULENAME, \"dyingLastApplied\")\n                        .then(() => console.log(\"dyingLastApplied cleared because dead\"));\n                });\n            });\n    } else if (shouldBecomeDying) {\n        actor\n            .increaseCondition(\"dying\", {\n                max: actor.system.attributes.dying.max,\n                value: Math.min(dyingCounter, actor.system.attributes.dying.max),\n            })\n            .then(() => {\n                const dying = actor.getCondition(\"dying\");\n                console.log(`dyingCounter was ${originalDyingCounter} is ${dying.value}`);\n                const now = Date.now();\n                return actor.setFlag(MODULENAME, \"dyingLastApplied\", now).then(() => {\n                    console.log(\n                        `dyingLastApplied set to ${now}, dyingCounter was ${originalDyingCounter} is ${dying.value}`,\n                    );\n                });\n            });\n    } else {\n        actor.decreaseCondition(\"dying\", { forceRemove: true }).then(() => {\n            return actor\n                .unsetFlag(MODULENAME, \"dyingLastApplied\")\n                .then(() => console.log(\"dyingLastApplied cleared because not dying\"));\n        });\n    }\n}\n\nexport async function autoRemoveDyingAtGreaterThanZeroHp(\n    actor: ActorPF2e,\n    hpAboveZero: boolean,\n    autoRemoveDying,\n): Promise<boolean> {\n    const dying = actor.getCondition(\"dying\");\n    if (shouldIHandleThis(actor) && dying && !dying.isLocked && hpAboveZero) {\n        const value = dying?.value || 0;\n        if (dying && value > 0 && !dying.isLocked) {\n            if (autoRemoveDying.endsWith(\"ForCharacters\") ? [\"character\", \"familiar\"].includes(actor.type) : true) {\n                handleDying(0, 0, actor);\n            }\n        }\n    }\n    return true;\n}\n\nexport async function autoRemoveUnconsciousAtGreaterThanZeroHP(\n    actor: ActorPF2e,\n    hpRaisedAboveZero: boolean,\n): Promise<void> {\n    const unconscious = actor.getCondition(\"unconscious\");\n    if (shouldIHandleThis(actor) && hpRaisedAboveZero && unconscious && !unconscious.isLocked) {\n        await actor.decreaseCondition(\"unconscious\", { forceRemove: true });\n    }\n}\n\nexport function getRelevantMessages(actor: ActorPF2e): ChatMessagePF2e[] {\n    const relevant = game.messages.contents.slice(-Math.min(10, game.messages.size));\n    return game.settings.get(MODULENAME, \"autoGainDyingIgnoresTargeting\")\n        ? relevant\n        : relevant.filter((message) => message.target?.actor.id === actor.id);\n}\n\nfunction filterMessagesByContextType(messages: ChatMessagePF2e[], contextType: string): ChatMessagePF2e[] {\n    return messages.filter((message) => message.flags.pf2e.context?.type === contextType);\n}\n\nfunction filterMessagesByStrikeDamaging(messages: ChatMessagePF2e[]): ChatMessagePF2e[] {\n    return messages.filter((message) => message.flags.pf2e.strike?.damaging);\n}\n\nfunction filterMessagesByActorEnemy(messages: ChatMessagePF2e[]): ChatMessagePF2e[] {\n    return messages.filter((message) => message.target?.actor && message.actor?.isEnemyOf(message.target?.actor));\n}\n\nfunction findLastMessageWithTotalGreaterOrEqual(\n    messages: ChatMessagePF2e[],\n    total: number,\n): ChatMessagePF2e | undefined {\n    return messages.findLast((message) => message.rolls?.[0]?.total >= total);\n}\n\nexport function checkIfLatestDamageMessageIsCriticalHitByEnemy(actor: ActorPF2e, option: string): boolean {\n    const hp = actor.attributes.hp;\n    if (\n        hp &&\n        hp.value &&\n        game.messages.contents.length > 0 &&\n        (!option.startsWith(\"no\") && option.endsWith(\"ForCharacters\")\n            ? [\"character\", \"familiar\"].includes(actor.type)\n            : true)\n    ) {\n        const relevant = getRelevantMessages(actor);\n        const isDamageRoll = filterMessagesByContextType(relevant, \"damage-roll\");\n        const isDamagingStrike = filterMessagesByStrikeDamaging(isDamageRoll);\n        const attackerIsEnemy = filterMessagesByActorEnemy(isDamagingStrike);\n        const criticalSuccess = filterMessagesByCriticalSuccess(attackerIsEnemy);\n        const bigEnough = findLastMessageWithTotalGreaterOrEqual(criticalSuccess, hp.value);\n        const chatMessagePF2e = bigEnough === isDamageRoll?.reverse()[0] ? bigEnough : null;\n        return chatMessagePF2e !== null && chatMessagePF2e !== undefined;\n    }\n    return false;\n}\n\nfunction filterMessagesByCriticalSuccess(messages: ChatMessagePF2e[]): ChatMessagePF2e[] {\n    return messages.filter((message) => message.flags.pf2e.context?.outcome === \"criticalSuccess\");\n}\n\nexport function handleOrcFerocity(\n    actor: ActorPF2e,\n    update: Record<string, string>,\n    effectsToCreate: any[],\n    name: string,\n    shouldIncreaseWounded = true,\n    hpNowAboveZero = false,\n) {\n    const orcFerocity = actor.itemTypes.feat.find((feat) => feat.slug === \"orc-ferocity\");\n    const orcFerocityUsed: any = actor.itemTypes.effect.find((effect) => effect.slug === \"orc-ferocity-used\");\n    const incredibleFerocity = actor.itemTypes.feat.find((feat) => feat.slug === \"incredible-ferocity\");\n    const undyingFerocity = actor.itemTypes.feat.find((feat) => feat.slug === \"undying-ferocity\");\n    const rampagingFerocity = actor.itemTypes.feat.find((feat) => feat.slug === \"rampaging-ferocity\");\n    if (orcFerocity && (!orcFerocityUsed || orcFerocityUsed.isExpired)) {\n        fu.setProperty(update, \"system.attributes.hp.value\", 1);\n        if (undyingFerocity) {\n            fu.setProperty(update, \"system.attributes.hp.temp\", Math.max(actor.level, actor.hitPoints?.temp ?? 0));\n        }\n\n        shouldIncreaseWounded = true;\n\n        const effect: any = {\n            type: \"effect\",\n            name: game.i18n.localize(`${MODULENAME}.effects.orcFerocityUsed`),\n            img: \"systems/pf2e/icons/default-icons/alternatives/ancestries/orc.svg\",\n            system: {\n                slug: \"orc-ferocity-used\",\n                tokenIcon: {\n                    show: false,\n                },\n                duration: {\n                    value: incredibleFerocity ? 1 : 24,\n                    unit: \"hours\",\n                    sustained: false,\n                    expiry: \"turn-start\",\n                },\n            },\n        };\n        effectsToCreate.push(effect);\n\n        if (rampagingFerocity) {\n            ChatMessage.create({\n                flavor: game.i18n.format(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.orcFerocityMessage`, {\n                    name: name,\n                }),\n                speaker: ChatMessage.getSpeaker({ actor: <any>actor }),\n                whisper:\n                    game.settings.get(\"pf2e\", \"metagame_secretDamage\") && !actor?.hasPlayerOwner\n                        ? ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id)\n                        : [],\n            }).then();\n        }\n\n        hpNowAboveZero = true;\n    }\n    return { shouldIncreaseWounded, hpNowAboveZero };\n}\n\nexport function handleDeliberateDeath(actor: ActorPF2e, effectsToCreate: any[], name: string) {\n    const deliberateDeath = actor.itemTypes.feat.find((feat) => feat.slug === \"deliberate-death\");\n    const deliberateDeathUsed: any = actor.itemTypes.effect.find((effect) => effect.slug === \"deliberate-death-used\");\n    if (deliberateDeath && (!deliberateDeathUsed || deliberateDeathUsed.isExpired)) {\n        const effect: any = {\n            type: \"effect\",\n            name: game.i18n.localize(`${MODULENAME}.effects.deliberateDeathUsed`),\n            img: \"icons/skills/melee/strike-dagger-skull-white.webp\",\n            system: {\n                slug: \"deliberate-death-used\",\n                tokenIcon: {\n                    show: false,\n                },\n                duration: {\n                    value: 24,\n                    unit: \"hours\",\n                    sustained: false,\n                    expiry: \"turn-start\",\n                },\n            },\n        };\n        effectsToCreate.push(effect);\n\n        ChatMessage.create({\n            flavor: game.i18n.format(`${MODULENAME}.SETTINGS.autoGainDyingAtZeroHP.deliberateDeathMessage`, {\n                name: name,\n            }),\n            speaker: ChatMessage.getSpeaker({ actor: <any>actor }),\n            whisper:\n                game.settings.get(\"pf2e\", \"metagame_secretDamage\") && !actor?.hasPlayerOwner\n                    ? ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id)\n                    : [],\n        }).then();\n    }\n}\n\nexport async function handleDyingOnZeroHP(\n    actor,\n    update: Record<string, string>,\n    hp: number,\n    updateHp: number,\n    autogainDying: string,\n): Promise<boolean> {\n    if (!shouldIHandleThis(actor) || hp <= 0 || updateHp > 0) {\n        return updateHp > 0;\n    }\n\n    const name = `${actor.token?.name ?? actor.name}`;\n    let shouldIncreaseWounded = false;\n    let dyingCounter = 0;\n    let hpNowAboveZero = false;\n    const effectsToCreate: any[] = [];\n    const nonlethalOption = String(game.settings.get(MODULENAME, \"nonLethalIsNotLethal\"));\n\n    const __ret = handleOrcFerocity(actor, update, effectsToCreate, name, shouldIncreaseWounded, hpNowAboveZero);\n    shouldIncreaseWounded = __ret.shouldIncreaseWounded;\n    hpNowAboveZero = __ret.hpNowAboveZero;\n\n    handleDeliberateDeath(actor, effectsToCreate, name);\n\n    if (\n        !hpNowAboveZero &&\n        (autogainDying.endsWith(\"ForCharacters\") ? [\"character\", \"familiar\"].includes(actor.type) : true)\n    ) {\n        if (autogainDying?.startsWith(\"addWoundedLevel\")) {\n            dyingCounter = (actor.getCondition(\"wounded\")?.value ?? 0) + 1;\n        } else {\n            dyingCounter = 1;\n        }\n    }\n\n    if (checkIfLatestDamageMessageIsCriticalHitByEnemy(actor, autogainDying)) {\n        dyingCounter += 1;\n    }\n\n    if (hpNowAboveZero) {\n        await actor.update(update);\n    }\n\n    if (shouldIncreaseWounded) {\n        await actor.increaseCondition(\"wounded\");\n    }\n\n    if (\n        String(game.settings.get(MODULENAME, \"nonLethalIsNotLethal\")).endsWith(\"ForCharacters\")\n            ? [\"character\", \"familiar\"].includes(actor.type)\n            : true\n    ) {\n        if (!hpNowAboveZero && checkIfLatestDamageMessageIsNonlethal(actor, nonlethalOption)) {\n            if (!actor.hasCondition(\"unconscious\")) {\n                await actor.toggleCondition(\"unconscious\");\n            }\n            dyingCounter = 0;\n        }\n    }\n\n    handleDying(dyingCounter, 0, actor);\n\n    if (effectsToCreate.length > 0) {\n        await actor.createEmbeddedDocuments(\"Item\", effectsToCreate);\n    }\n\n    return hpNowAboveZero;\n}\n\nexport async function giveWoundedWhenDyingRemoved(item: ItemPF2e) {\n    const actor = item.parent;\n    if (isFirstGM() && item.slug === \"dying\" && actor) {\n        const items: any = actor.items;\n        let bounceBack: any = false,\n            bounceBackUsed: any = false,\n            numbToDeath: any = false,\n            numbToDeathUsed: any = false;\n        if (items) {\n            bounceBack = items.find((feat) => feat.slug === \"bounce-back\"); // TODO https://2e.aonprd.com/Feats.aspx?ID=1441\n            bounceBackUsed = actor.itemTypes.effect.find((effect) => effect.slug === \"bounce-back-used\") ?? false;\n\n            numbToDeath = items.find((feat) => feat.slug === \"numb-to-death\"); // TODO https://2e.aonprd.com/Feats.aspx?ID=1182\n            numbToDeathUsed = actor.itemTypes.effect.find((effect) => effect.slug === \"numb-to-death-used\") ?? false;\n        }\n        const name = `${actor.token?.name ?? actor.name}`;\n\n        if (numbToDeath && (!numbToDeathUsed || bounceBackUsed.isExpired)) {\n            const effect: any = {\n                type: \"effect\",\n                name: game.i18n.localize(`${MODULENAME}.effects.numbToDeathUsed`),\n                img: \"icons/magic/death/hand-dirt-undead-zombie.webp\",\n                system: {\n                    slug: \"numb-to-death-used\",\n                    tokenIcon: {\n                        show: false,\n                    },\n                    duration: {\n                        value: 24,\n                        unit: \"hours\",\n                        sustained: false,\n                        expiry: \"turn-start\",\n                    },\n                },\n            };\n\n            ChatMessage.create({\n                flavor: game.i18n.format(`${MODULENAME}.SETTINGS.giveWoundedWhenDyingRemoved.numbToDeathMessage`, {\n                    name: name,\n                }),\n                speaker: ChatMessage.getSpeaker({ token: <any>actor.token }),\n                whisper:\n                    game.settings.get(\"pf2e\", \"metagame_secretDamage\") && !actor?.hasPlayerOwner\n                        ? ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id)\n                        : [],\n            }).then();\n\n            await actor.createEmbeddedDocuments(\"Item\", [effect]);\n        } else if (bounceBack && (!bounceBackUsed || bounceBackUsed.isExpired)) {\n            const effect: any = {\n                type: \"effect\",\n                name: game.i18n.localize(`${MODULENAME}.effects.bounceBackUsed`),\n                img: \"icons/magic/life/ankh-gold-blue.webp\",\n                system: {\n                    slug: \"bounce-back-used\",\n                    tokenIcon: {\n                        show: false,\n                    },\n                    duration: {\n                        value: 24,\n                        unit: \"hours\",\n                        sustained: false,\n                        expiry: \"turn-start\",\n                    },\n                },\n            };\n\n            await actor.createEmbeddedDocuments(\"Item\", [effect]);\n        } else {\n            await item.parent?.increaseCondition(\"wounded\");\n        }\n    }\n}\n\nexport async function giveUnconsciousIfDyingRemovedAt0HP(item: ItemPF2e) {\n    const actor = <ActorPF2e>item.parent;\n    if (\n        isFirstGM() &&\n        item.slug === \"dying\" &&\n        game.settings.get(MODULENAME, \"giveUnconsciousIfDyingRemovedAt0HP\") &&\n        (<ActorSystemData>actor.system).attributes?.hp?.value === 0 &&\n        !actor.hasCondition(\"unconscious\")\n    ) {\n        if (!actor.hasCondition(\"unconscious\")) {\n            await item.parent?.toggleCondition(\"unconscious\");\n        }\n    }\n}\n\nexport function dyingHandlingPreCreateChatMessageHook(message: ChatMessagePF2e) {\n    const autoGainDying = String(game.settings.get(MODULENAME, \"autoGainDyingIfTakingDamageWhenAlreadyDying\"));\n    if (autoGainDying && !autoGainDying.startsWith(\"no\")) {\n        const actor = message.actor;\n        if (actor && shouldIHandleThis(actor)) {\n            if (message.content?.includes(\"damage-taken\")) {\n                const now = Date.now();\n                const flag = <number>actor.getFlag(MODULENAME, \"dyingLastApplied\") || now;\n                console.log(`dyingLastApplied is ${flag}, now is ${now}`);\n                // Ignore this if it occurs within last few seconds of the last time we applied dying\n                // @ts-ignore\n                const notTooSoon = !flag?.between(now - 4000, now);\n                if (notTooSoon) {\n                    const originalDyingCounter = actor?.getCondition(\"dying\")?.value ?? 0;\n                    let dyingCounter = 0;\n                    if (!autoGainDying.startsWith(\"no\") && originalDyingCounter > 0) {\n                        const wasCritical = checkIfLatestDamageMessageIsCriticalHitByEnemy(actor, autoGainDying);\n\n                        if (\n                            autoGainDying.endsWith(\"ForCharacters\")\n                                ? [\"character\", \"familiar\"].includes(actor.type)\n                                : true\n                        ) {\n                            dyingCounter = dyingCounter + 1;\n\n                            if (wasCritical) {\n                                dyingCounter = dyingCounter + 1;\n                            }\n                        }\n                        console.log(\n                            `Before handleDying dyingLastApplied is ${flag}, now is ${now}, dyingCounter was ${originalDyingCounter} will increase by ${dyingCounter}`,\n                        );\n\n                        handleDying(dyingCounter, originalDyingCounter, actor);\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function checkIfLatestDamageMessageIsNonlethal(actor: ActorPF2e, option: string): boolean {\n    const hp = actor.attributes.hp;\n    if (\n        hp &&\n        hp.value &&\n        game.messages.contents.length > 0 &&\n        !option.startsWith(\"no\") &&\n        (option.endsWith(\"ForCharacters\") ? [\"character\", \"familiar\"].includes(actor.type) : true)\n    ) {\n        const relevant = getRelevantMessages(actor);\n        const lastDamageRoll = relevant.findLast((message) => message.flags.pf2e.context?.type === \"damage-roll\");\n        const totalDamage = lastDamageRoll?.rolls?.[0]?.total ?? 0;\n        const isNonlethal = (lastDamageRoll?.flags?.pf2e?.context?.options ?? []).includes(\"nonlethal\");\n        return (totalDamage >= hp.value && isNonlethal) ?? false;\n    }\n    return false;\n}\n","import { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { TokenDocumentPF2e } from \"@scene/index.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { shouldIHandleThis } from \"../../utils.js\";\nimport { ActorFlagsPF2e } from \"@actor/data/base.js\";\n\nfunction ignoreDeadEidolon(actor) {\n    return actor?.traits.has(\"eidolon\") && game.settings.get(MODULENAME, \"reminderCannotAttackIgnoreDeadEidolon\");\n}\n\nexport function checkAttackValidity(message: ChatMessagePF2e, cancelAttack: boolean): boolean {\n    if (!shouldBeChecked(message)) return true;\n\n    const token = getSpeakerToken(message);\n\n    const reason = getAttackReason(\n        token,\n        message?.flags?.pf2e?.context?.options.filter((o) => o.startsWith(\"action:\")),\n    );\n\n    if (reason) {\n        notifyUser(token, reason, message?.flags?.pf2e?.context?.title, cancelAttack);\n        return false;\n    }\n\n    return true;\n}\n\nfunction getSpeakerToken(message: ChatMessagePF2e): TokenDocumentPF2e {\n    return <TokenDocumentPF2e>canvas?.scene?.tokens.get(<string>message.speaker.token);\n}\n\nfunction shouldBeChecked(message: ChatMessagePF2e): boolean {\n    const context = message?.flags?.pf2e?.context ?? {};\n    const traits = context?.traits;\n\n    return (\n        message.actor &&\n        shouldIHandleThis(message.actor) &&\n        message.flags &&\n        game.combats.active &&\n        message.user &&\n        [\"spell-attack-roll\", \"attack-roll\", \"skill-check\"].includes(\n            <string>(<ActorFlagsPF2e>message.flags.pf2e).context?.type,\n        ) &&\n        traits?.some((t) => t === \"attack\")\n    );\n}\n\nfunction getAttackReason(token: TokenDocumentPF2e, actions: string[]): string {\n    const actor = token.actor;\n    const conditionReasons = {\n        dead: `${MODULENAME}.SETTINGS.reminderCannotAttack.dead`,\n        hasNoHp: `${MODULENAME}.SETTINGS.reminderCannotAttack.hasNoHp`,\n        defeated: `${MODULENAME}.SETTINGS.reminderCannotAttack.defeated`,\n        unconscious: `${MODULENAME}.SETTINGS.reminderCannotAttack.unconscious`,\n        petrified: `${MODULENAME}.SETTINGS.reminderCannotAttack.petrified`,\n        restrained: `${MODULENAME}.SETTINGS.reminderCannotAttack.restrained`,\n    };\n\n    if (actor?.isDead && !ignoreDeadEidolon(actor)) {\n        return conditionReasons.dead;\n    } else if ((actor?.hitPoints?.value ?? 0) <= 0 && !ignoreDeadEidolon(actor)) {\n        return conditionReasons.hasNoHp;\n    } else if (game.combats.active?.combatant?.token === token && game.combats.active.combatant.defeated) {\n        return conditionReasons.defeated;\n    } else if (actor?.hasCondition(\"unconscious\")) {\n        return conditionReasons.unconscious;\n    } else if (actor?.hasCondition(\"petrified\")) {\n        return conditionReasons.petrified;\n    } else if (\n        actor?.hasCondition(\"restrained\") &&\n        ![\"action:escape\", \"action:force-open\"].some((a) => actions.includes(a))\n    ) {\n        return conditionReasons.restrained;\n    }\n    return \"\";\n}\n\nfunction notifyUser(token: TokenDocumentPF2e, reason: string, title: string, cancelAttack: boolean) {\n    const reasonKey = cancelAttack ? \"reminderCannotAttack.error\" : \"reminderCannotAttack.info\";\n    const actorName = token.actor?.name || \"(unknown)\";\n\n    ui.notifications[cancelAttack ? \"error\" : \"info\"](generateNotificationMessage(title, actorName, reason, reasonKey));\n}\n\nfunction generateNotificationMessage(title: string, actorName: string, reason: string, reasonKey: string): string {\n    return game.i18n.format(`${MODULENAME}.SETTINGS.${reasonKey}`, {\n        title,\n        actorName,\n        reason: game.i18n.localize(reason),\n    });\n}\n","import { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { isFirstGM, myRandomId } from \"../../utils.js\";\nimport { TokenDocumentPF2e } from \"@scene/index.js\";\n\nexport async function reminderBreathWeapon(message: ChatMessagePF2e) {\n    const messageContent = message.content;\n    const activeCombatAvailable = isFirstGM() && messageContent && game.combats && game.combats.active;\n\n    if (activeCombatAvailable) {\n        const token: TokenDocumentPF2e = getSpeakerToken(message);\n        const activeActor = token?.actor;\n\n        if (activeActor) {\n            const diceFormulaMatch = retrieveDiceFormulaMatch(messageContent);\n            const diceValue = diceFormulaMatch ? `1d${diceFormulaMatch[1]}` : \"\";\n\n            if (diceValue) {\n                const effectDetails = getEffectDetails(activeActor, messageContent, diceValue);\n                await activeActor?.createEmbeddedDocuments(\"Item\", [effectDetails]);\n            }\n        }\n    }\n}\n\nfunction getSpeakerToken(message: ChatMessagePF2e): TokenDocumentPF2e {\n    return <TokenDocumentPF2e>canvas?.scene?.tokens.get(<string>message.speaker.token);\n}\n\nfunction retrieveDiceFormulaMatch(messageContent: string): RegExpMatchArray | null {\n    // The last one is to support the current format in some third party products.\n    return messageContent.match(/1d([46])( rounds| recharge|<\\/a> rounds)/i);\n}\n\nfunction getEffectDetails(activeActor, messageContent: string, diceValue: string) {\n    const titleRetrieved = messageContent.match(/>(.*?) <span class=\"action-glyph\"/);\n\n    return {\n        type: \"effect\",\n        name: getEffectName(titleRetrieved),\n        img: \"systems/pf2e/icons/spells/dragon-breath.webp\",\n        system: getSystemProperties(activeActor, diceValue),\n    };\n}\n\nfunction getEffectName(titleRetrieved: RegExpMatchArray | null): string {\n    if (titleRetrieved) {\n        return game.i18n.localize(`${MODULENAME}.SETTINGS.reminderBreathWeapon.used`) + titleRetrieved[1];\n    } else {\n        return (\n            game.i18n.localize(`${MODULENAME}.SETTINGS.reminderBreathWeapon.used`) +\n            game.i18n.localize(`${MODULENAME}.SETTINGS.reminderBreathWeapon.defaultName`)\n        );\n    }\n}\n\nfunction getSystemProperties(activeActor, diceValue: string) {\n    return {\n        tokenIcon: { show: true },\n        duration: getDurationProperties(diceValue),\n        description: {\n            value: `<h2>${game.i18n.localize(`${MODULENAME}.SETTINGS.reminderBreathWeapon.name`)}</h2>`,\n        },\n        source: {\n            value: game.i18n.localize(`${MODULENAME}.SETTINGS.reminderBreathWeapon.defaultName`),\n        },\n        rules: [],\n        slug: `xdy-breath-weapon-reminder-${myRandomId()}`,\n        unidentified: getUnidentifiedProperty(activeActor),\n        traits: {\n            value: [],\n        },\n        level: {\n            value: activeActor.level ?? 0,\n        },\n        badge: null,\n        context: null,\n    };\n}\n\nfunction getDurationProperties(diceValue: string) {\n    return {\n        value: new Roll(diceValue).roll({ async: false }).total + 1,\n        unit: \"rounds\",\n        sustained: false,\n        expiry: \"turn-start\",\n    };\n}\n\nfunction getUnidentifiedProperty(activeActor) {\n    return (\n        game.settings.get(MODULENAME, \"reminderBreathWeaponHidden\") &&\n        !game.actors?.party?.members.map((m) => m.id).includes(activeActor.id)\n    );\n}\n","import { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\nimport { SpellPF2e } from \"@item/spell/document.js\";\n\nexport async function handlePrivateSpellcasting(data: any, message: ChatMessagePF2e) {\n    const spellUUID = <string>message.flags?.pf2e.origin?.uuid;\n    const origin: any = fromUuidSync(spellUUID);\n\n    const partyMembersWithSpell = findPartyMembersWithSpell(origin);\n\n    if (isAutoRevealActive() && partyMembersWithSpell && partyMembersWithSpell.length > 0) {\n        if (game.settings.get(MODULENAME, \"castPrivateSpellAutoRevealPartyMembersThatKnowSpell\")) {\n            showPartymembersWithSpell(message, partyMembersWithSpell, data);\n        }\n        return;\n    }\n\n    updateDataAndSource(data, message);\n\n    if (isPublicMessageActive() && !isShiftModifierActive()) {\n        const { content, flags } = await generateMessageData(message, origin, spellUUID, data);\n\n        const showToGM = game.settings.get(MODULENAME, \"castPrivateSpellWithPublicMessageShowToGM\");\n\n        const whisper = showToGM\n            ? []\n            : game.users\n                  .filter((u) => u.active)\n                  .filter((u) => u.id !== ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id)[0])\n                  .map((u) => u.id);\n        const user = game.userId;\n        if (whisper.length > 0) {\n            await ChatMessage.create({\n                whisper,\n                user,\n                content,\n                flags,\n            });\n        } else {\n            await ChatMessage.create({\n                user,\n                content,\n                flags,\n            });\n        }\n    }\n}\n\nfunction showPartymembersWithSpell(message, membersWithSpell, data: any) {\n    const oldContent = message.content;\n    const $editedContent = $(`<div>${oldContent}</div>`);\n\n    $editedContent.find(\"hr.item-block-divider:first\").after(\n        game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.knownBy`, {\n            spellHavers: membersWithSpell?.join(\",\") ?? \"\",\n        }),\n    );\n\n    const newContent = $editedContent.html();\n\n    if (newContent !== oldContent) {\n        data.content = newContent;\n        message.updateSource({ content: newContent });\n    }\n}\n\nasync function generateMessageData(message: ChatMessagePF2e, origin, spellUUID: string, data: any) {\n    const anonymous = game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.they`);\n    const tokenName = game.settings.get(\"pf2e\", \"metagame_tokenSetsNameVisibility\")\n        ? anonymous\n        : message.alias ?? message.token?.name ?? message.actor?.name ?? anonymous;\n\n    const type = message.flags?.pf2e.origin?.type ?? \"spell\";\n    const traditionString = message.flags?.pf2e.casting?.tradition ?? \"\";\n    const context = message.flags.pf2e.context;\n    const isBasicSave = context?.options?.includes(\"item:defense:basic\");\n    const content = buildSpellMessage(origin, tokenName, type, traditionString, spellUUID, data, isBasicSave);\n\n    const flags = {\n        \"xdy-pf2e-workbench\": {\n            privateSpell: {\n                originUuid: message.flags?.pf2e.origin?.uuid,\n                originCastRank: message.flags.pf2e.origin.castRank,\n            },\n        },\n    };\n\n    return { content, flags };\n}\n\nfunction getDcRkForLevel(level: number): number {\n    const levelMapping = {\n        1: 15,\n        2: 18,\n        3: 20,\n        4: 23,\n        5: 26,\n        6: 28,\n        7: 31,\n        8: 34,\n        9: 36,\n        10: 39,\n    };\n    return levelMapping[level] ?? 0;\n}\n\nfunction getDcRkForRarity(rarity: string): number {\n    const rarityMapping = {\n        uncommon: 2,\n        rare: 5,\n        unique: 10,\n        common: 0,\n    };\n    return rarityMapping[rarity] ?? 0;\n}\n\nconst TRADITION_SKILLS = { arcane: \"arcana\", divine: \"religion\", occult: \"occultism\", primal: \"nature\" };\n\nfunction findPartyMembersWithSpell(origin: any) {\n    return game.actors?.party?.members\n        ?.filter((actor) => {\n            return actor.items\n                ?.filter((i) => i.slug === origin.slug)\n                ?.filter((i) => i.isOfType(\"spell\"))\n                ?.filter((i) => (<SpellPF2e>(<unknown>i)).spellcasting)\n                .some((item) => {\n                    const spell = <SpellPF2e>(<unknown>item);\n                    const entry = spell.spellcasting;\n                    return (\n                        !entry?.isPrepared ||\n                        (entry?.isPrepared &&\n                            entry?.system?.slots?.[`slot${spell.rank}`].prepared.some((s) => s.id === spell.id))\n                    );\n                });\n        })\n        .map((actor) => actor.name);\n}\n\nfunction updateDataAndSource(data: any, message: ChatMessagePF2e): void {\n    data.type = CONST.CHAT_MESSAGE_TYPES.WHISPER;\n    data.whisper = [...ChatMessage.getWhisperRecipients(\"GM\").map((u) => u.id)];\n    if (!game.user.isGM) {\n        data.whisper.push(game.user.id);\n    }\n\n    message.updateSource(data);\n}\n\nfunction isAutoRevealActive(): boolean {\n    return Boolean(game.settings.get(MODULENAME, \"castPrivateSpellAutoRevealIfKnown\"));\n}\n\nfunction isPublicMessageActive(): boolean {\n    return Boolean(game.settings.get(MODULENAME, \"castPrivateSpellWithPublicMessage\"));\n}\n\nfunction isShiftModifierActive(): boolean {\n    // TODO Doesn't work on mac?\n    return game?.keyboard?.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT);\n}\n\nfunction buildSpellMessage(origin, tokenName: string, type, traditionString: string, spellUUID: string, data, basic) {\n    let content = \"\";\n    if (origin) {\n        content = game.i18n.localize(\n            game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.firstPart`, {\n                tokenName,\n                type,\n                traditionString,\n                spellUUID,\n            }),\n        );\n\n        if (game.settings.get(MODULENAME, \"castPrivateSpellWithPublicMessageShowTraits\")) {\n            content += game.i18n.localize(\n                game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessageShowTraits.traitPart`, {\n                    traits: Object.values(origin.system.traits.value)\n                        .map((trait: any) => trait.valueOf())\n                        .sort()\n                        .join(\", \"),\n                }),\n            );\n        }\n\n        const level = origin.system.level.value;\n        const dcRK = getDcRkForLevel(level) + getDcRkForRarity(origin.system.traits?.rarity ?? \"common\");\n\n        const skill = TRADITION_SKILLS[traditionString];\n\n        content += game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.secondPartRK`, {\n            skill: skill,\n            dcRK: dcRK,\n            rk: `&#123;${game.i18n.localize(\"PF2E.RecallKnowledge.Label\")}\\t&#125;`, // Grr\n        });\n    } else {\n        content += game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.secondPartNoRK`);\n    }\n\n    const buttons = $(data.content).find(\"button\");\n    const saveButtons = buttons.filter((i) => buttons[i].getAttribute(\"data-action\") === \"spell-save\");\n    const targetHelperActive = game.modules.find((s) => s.id === \"pf2e-target-helper\")?.active;\n    if (saveButtons.length === 1) {\n        const dataSave = saveButtons.attr(\"data-save\") ?? \"\";\n        if (!targetHelperActive) {\n            const dataDC = saveButtons.attr(\"data-dc\") ?? \"\";\n\n            content += game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.savePart`, {\n                dataSave: dataSave,\n                dataDC: dataDC,\n                traits: Object.values(origin.system.traits.value)\n                    .map((trait: any) => game.pf2e.system.sluggify(trait.valueOf()))\n                    .sort()\n                    .join(\",\"),\n                basic,\n            });\n        } else {\n            content += game.i18n.format(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.noButtonSavePart`, {\n                dataSave: dataSave,\n                basic: basic\n                    ? game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpellWithPublicMessage.basic`)\n                    : \"\",\n            });\n        }\n    }\n    return content;\n}\n\nexport async function castPrivateSpellHideName(message: ChatMessagePF2e, html: HTMLElement) {\n    const msg = game.messages.contents\n        .reverse()\n        .filter((m) => m.type === 4) // Whisper, rollup can't resolve constant\n        .filter((m) => m.flags?.pf2e?.casting)\n        .filter((m) => m.flags?.pf2e?.origin?.uuid === message.flags?.pf2e?.origin?.uuid)\n        .pop();\n\n    if (msg) {\n        const flavor = html.querySelector(\".flavor-text\");\n        if (flavor && flavor.innerHTML) {\n            const origin = await fromUuid(<string>message.flags?.pf2e.origin?.uuid);\n            const searchValue = origin?.name ?? \"???\";\n            const replaceValue =\n                game.i18n.localize(`${MODULENAME}.SETTINGS.castPrivateSpell.aSpell`) +\n                `<p data-visibility=\"gm\">(${searchValue})</p>`;\n            flavor.innerHTML = flavor.innerHTML.replace(searchValue, replaceValue);\n        }\n    }\n}\n","import { housepatcher, isActuallyDamageRoll, logDebug, shouldIHandleThis } from \"./utils.js\";\nimport { ActorPF2e, CreaturePF2e } from \"@actor\";\nimport { TokenDocumentPF2e } from \"@scene\";\nimport { CHARACTER_TYPE, MODULENAME, NPC_TYPE } from \"./xdy-pf2e-workbench.js\";\nimport { UserPF2e } from \"@module/user/index.js\";\nimport { actionsReminder, autoReduceStunned, reminderTargeting } from \"./feature/reminders/index.js\";\nimport {\n    chatActionCardDescriptionCollapse,\n    chatAttackCardDescriptionCollapse,\n    chatCardDescriptionCollapse,\n    damageCardExpand,\n    mystifyNpcItems,\n} from \"./feature/qolHandler/index.js\";\nimport { autoRollDamage, persistentDamage, persistentHealing } from \"./feature/damageHandler/index.js\";\nimport { reduceFrightened } from \"./feature/conditionHandler/index.js\";\nimport {\n    mangleNamesInChatMessage,\n    renderNameHud,\n    tokenCreateMystification,\n} from \"./feature/tokenMystificationHandler/index.js\";\nimport { ItemPF2e } from \"@item/base/document.js\";\nimport { CombatantPF2e, EncounterPF2e } from \"@module/encounter/index.js\";\nimport { ChatMessagePF2e } from \"@module/chat-message/index.js\";\nimport { CheckRoll } from \"@module/system/check/roll.js\";\nimport { PhysicalItemPF2e } from \"@item/physical/document.js\";\nimport { ActorSystemData } from \"@actor/data/base.js\";\nimport { ActorSheetPF2e } from \"@actor/sheet/base.js\";\nimport {\n    dyingHandlingPreCreateChatMessageHook,\n    dyingHandlingPreUpdateActorHook,\n    handleDyingRecoveryRoll,\n    itemHandlingItemHook,\n} from \"./feature/damageHandler/dyingHandling.ts\";\nimport { checkAttackValidity } from \"./feature/reminders/checkAttackValidity.js\";\nimport { reminderBreathWeapon } from \"./feature/reminders/reminderBreathWeapon.js\";\nimport { castPrivateSpellHideName, handlePrivateSpellcasting } from \"./feature/qolHandler/handlePrivateSpellcasting.js\";\nimport { FeatPF2e } from \"@item/feat/document.js\";\n\nexport const preCreateChatMessageHook = (message: ChatMessagePF2e, data: any, _options, _user: UserPF2e) => {\n    let proceed = true;\n    const reminderTargetingEnabled = game.settings.get(MODULENAME, \"reminderTargeting\") === \"mustTarget\";\n    const reminderCannotAttack = String(game.settings.get(MODULENAME, \"reminderCannotAttack\"));\n    const castPrivateSpellEnabled = game.settings.get(MODULENAME, \"castPrivateSpell\");\n    const ctrlHeld = [\"ControlLeft\", \"ControlRight\", \"MetaLeft\", \"MetaRight\", \"Meta\", \"OsLeft\", \"OsRight\"].some((key) =>\n        game?.keyboard.downKeys.has(key),\n    );\n    const privateCast = castPrivately(\n        game.actors?.party?.members?.some((member) => member.id === message.actor?.id) ?? false,\n        message,\n    );\n\n    if (\n        castPrivateSpellEnabled &&\n        message.flags.pf2e?.casting?.id &&\n        ((ctrlHeld && !privateCast) || (!ctrlHeld && privateCast))\n    ) {\n        handlePrivateSpellcasting(data, message).then();\n    }\n\n    if (reminderTargetingEnabled) {\n        proceed = reminderTargeting(message, String(game.settings.get(MODULENAME, \"reminderTargeting\")));\n    }\n\n    if (proceed && reminderCannotAttack === \"cancelAttack\") {\n        proceed = checkAttackValidity(message, true);\n    }\n\n    return proceed;\n};\n\nfunction castPrivately(inParty: boolean, message: ChatMessagePF2e) {\n    const isNpc = message.actor?.type === NPC_TYPE;\n    const isAlly = message.actor?.alliance === \"party\";\n    const alwaysNpc = game.settings.get(MODULENAME, \"castPrivateSpellAlwaysFor\") === \"npcs\";\n    const alwaysNonAlly = game.settings.get(MODULENAME, \"castPrivateSpellAlwaysFor\") === \"nonAllies\";\n    const alwaysNonParty = game.settings.get(MODULENAME, \"castPrivateSpellAlwaysFor\") === \"nonPartymembers\";\n\n    return (isNpc && alwaysNpc) || (!isAlly && alwaysNonAlly) || (!inParty && alwaysNonParty);\n}\n\nexport function createChatMessageHook(message: ChatMessagePF2e) {\n    const reminderCancelAttack = String(game.settings.get(MODULENAME, \"reminderCannotAttack\"));\n    if (reminderCancelAttack === \"reminder\") {\n        checkAttackValidity(message, false);\n    }\n\n    const reminderTargetingSetting = String(game.settings.get(MODULENAME, \"reminderTargeting\"));\n    if ([\"no\", \"reminder\"].includes(reminderTargetingSetting)) {\n        reminderTargeting(message, reminderTargetingSetting);\n    }\n\n    if (!isActuallyDamageRoll(message)) {\n        if (\n            game.settings.get(MODULENAME, \"autoRollDamageAllow\") &&\n            (game.settings.get(MODULENAME, \"autoRollDamageForStrike\") ||\n                game.settings.get(MODULENAME, \"autoRollDamageForSpellAttack\") ||\n                game.settings.get(MODULENAME, \"autoRollDamageForSpellWhenNotAnAttack\") !== \"no\")\n        ) {\n            autoRollDamage(message).then();\n        }\n\n        if (game.settings.get(MODULENAME, \"reminderBreathWeapon\")) {\n            reminderBreathWeapon(message).then();\n        }\n    }\n    dyingHandlingPreCreateChatMessageHook(message);\n}\n\nfunction deprecatedDyingHandlingRenderChatMessageHook(message: ChatMessagePF2e) {\n    handleDyingRecoveryRoll(message, Boolean(game.settings.get(MODULENAME, \"handleDyingRecoveryRoll\")));\n}\n\nexport function renderChatMessageHook(message: ChatMessagePF2e, jq: JQuery) {\n    const html = <HTMLElement>jq.get(0);\n    // Only acts on latest message, but can't be in createChatMessageHook as that doesn't get triggered for some reason.\n    persistentHealing(message, Boolean(game.settings.get(MODULENAME, \"applyPersistentHealing\")));\n\n    if (game.settings.get(MODULENAME, \"applyPersistentDamage\")) {\n        persistentDamage(message);\n    }\n\n    deprecatedDyingHandlingRenderChatMessageHook(message);\n\n    // Affects all messages\n    const minimumUserRoleFlag: any = message.getFlag(MODULENAME, \"minimumUserRole\");\n    if (!isNaN(minimumUserRoleFlag) && minimumUserRoleFlag > game.user.role) {\n        html.classList.add(\"xdy-pf2e-workbench-hide\");\n    }\n\n    if (game.settings.get(MODULENAME, \"npcMystifierUseMystifiedNameInChat\")) {\n        mangleNamesInChatMessage(message, html);\n    }\n\n    if (isActuallyDamageRoll(message)) {\n        const expandDamageRolls = String(game.settings.get(MODULENAME, \"autoExpandDamageRolls\"));\n        if ([\"expandedAll\", \"expandedNew\", \"expandedNewest\"].includes(expandDamageRolls)) {\n            damageCardExpand(message, html, expandDamageRolls);\n        }\n    } else {\n        if (\n            String(game.settings.get(MODULENAME, \"autoCollapseItemChatCardContent\")) === \"collapsedDefault\" ||\n            String(game.settings.get(MODULENAME, \"autoCollapseItemChatCardContent\")) === \"nonCollapsedDefault\"\n        ) {\n            chatCardDescriptionCollapse(html);\n        }\n        if (\n            (String(game.settings.get(MODULENAME, \"autoCollapseItemAttackChatCardContent\")) === \"collapsedDefault\" ||\n                String(game.settings.get(MODULENAME, \"autoCollapseItemAttackChatCardContent\")) ===\n                    \"nonCollapsedDefault\") &&\n            [\"weapon\", \"melee\", \"spell\"].includes(message.item?.type ?? \"\")\n        ) {\n            chatAttackCardDescriptionCollapse(html);\n        }\n        if (\n            ((String(game.settings.get(MODULENAME, \"autoCollapseItemActionChatCardContent\")) === \"collapsedDefault\" ||\n                String(game.settings.get(MODULENAME, \"autoCollapseItemActionChatCardContent\")) ===\n                    \"nonCollapsedDefault\") &&\n                !message.item) ||\n            message.item?.type === \"action\"\n        ) {\n            chatActionCardDescriptionCollapse(html);\n        }\n    }\n\n    if (\n        game.settings.get(MODULENAME, \"castPrivateSpellHideName\") &&\n        message?.flags?.pf2e?.origin?.type === \"spell\" &&\n        isActuallyDamageRoll(message)\n    ) {\n        castPrivateSpellHideName(message, html);\n    }\n\n    // Alert everyone that Keeley's hero point rule was invoked\n    const lastRoll = message.rolls.at(-1);\n    if (lastRoll?.options.keeleyAdd10) {\n        const element: any = jq.get(0);\n\n        if (element) {\n            const tags = element.querySelector(\".flavor-text > .tags.modifiers\");\n            const formulaElem = element.querySelector(\".reroll-discard .dice-formula\");\n            const newTotalElem = element.querySelector(\".reroll-second .dice-total\");\n            if (tags && formulaElem && newTotalElem) {\n                // Add a tag to the list of modifiers\n                const newTag = document.createElement(\"span\");\n                newTag.classList.add(\"tag\", \"tag_transparent\", \"keeley-add-10\");\n                newTag.innerText = game.i18n.localize(`${MODULENAME}.SETTINGS.keeleysHeroPointRule.bonusTag`);\n                newTag.dataset.slug = \"keeley-add-10\";\n                const querySelector = tags.querySelector(\".tag\");\n                if (querySelector?.dataset.visibility === \"gm\") {\n                    newTag.dataset.visibility = \"gm\";\n                }\n                tags.append(newTag);\n\n                // Show +10 in the formula\n                const span = document.createElement(\"span\");\n                span.className = \"keeley-add-10\";\n                span.innerText = \" + 10\";\n                formulaElem?.append(span);\n\n                // Make the total purple\n                newTotalElem.classList.add(\"keeley-add-10\");\n            }\n        }\n    }\n}\n\nfunction dropHeldItemsOnBecomingUnconscious(actor) {\n    const items = <PhysicalItemPF2e[]>actor.items?.filter((i) => i.isHeld);\n    if (items && items.length > 0) {\n        for (const item of items) {\n            if (item.traits.has(\"free-hand\") || item.type === \"shield\" || item.traits.has(\"attached-to-shield\")) {\n                // Presumed to strapped to an arm/worn on a hand, so just unreadied instead of dropped\n                actor.changeCarryType(item, { carryType: \"worn\", handsHeld: 0, inSlot: false });\n            } else {\n                actor.changeCarryType(item, { carryType: \"dropped\", handsHeld: 0, inSlot: false });\n            }\n        }\n        const message = game.i18n.format(`${MODULENAME}.SETTINGS.dropHeldItemsOnBecomingUnconscious.message`, {\n            name: game?.scenes?.current?.tokens?.find((t) => t.actor?.id === actor.id)?.name ?? actor.name,\n            items: items.map((i) => i.name).join(\", \"),\n        });\n        ChatMessage.create({\n            flavor: message,\n            speaker: ChatMessage.getSpeaker({ actor }),\n        }).then();\n    }\n}\n\nexport async function createItemHook(item: ItemPF2e, _options: {}, _id: any) {\n    if (\n        item.actor?.isOfType(CHARACTER_TYPE) &&\n        item.actor.hasCondition(\"unconscious\") &&\n        game.settings.get(MODULENAME, \"dropHeldItemsOnBecomingUnconscious\") &&\n        shouldIHandleThis(item.actor)\n    ) {\n        dropHeldItemsOnBecomingUnconscious(item.actor);\n    }\n}\n\nexport async function updateItemHook(_item: ItemPF2e, _update: any) {}\n\nexport async function deleteItemHook(item: ItemPF2e, _options: {}) {\n    await itemHandlingItemHook(item);\n}\n\nexport function pf2eEndTurnHook(combatant: CombatantPF2e, _combat: EncounterPF2e, userId: string) {\n    if (game.settings.get(MODULENAME, \"decreaseFrightenedConditionEachTurn\")) {\n        reduceFrightened(combatant, userId).then(() => logDebug(\"Workbench reduceFrightened complete\"));\n    }\n}\n\nexport async function pf2eStartTurnHook(combatant: CombatantPF2e, _combat: EncounterPF2e, userId: string) {\n    const forWhom = String(game.settings.get(MODULENAME, \"actionsReminderAllow\"));\n    if (game.settings.get(MODULENAME, \"autoReduceStunned\")) {\n        autoReduceStunned(combatant, userId).then((reduction) => {\n            if (forWhom !== \"none\") {\n                actionsReminder(combatant, reduction);\n            }\n        });\n    } else if (forWhom !== \"none\") {\n        actionsReminder(combatant, 0);\n    }\n\n    // TODO Handle removal of game.combats.active.combatant.defeated/unsetting of deathIcon (are those the same?) for combatants that are neither dying nor have 0 HP.\n}\n\nexport function renderTokenHUDHook(_app: TokenDocumentPF2e, q: JQuery, data: any) {\n    const html = q.get(0);\n    if (html && game.user?.isGM && game.settings.get(MODULENAME, \"npcMystifier\")) {\n        renderNameHud(data, html);\n    }\n}\n\nexport async function preUpdateActorHook(actor: CreaturePF2e, update: Record<string, string>) {\n    const updateHp = fu.getProperty(update, \"system.attributes.hp.value\");\n\n    // All these are only relevant if hp has changed (it's undefined otherwise)\n    if (typeof updateHp === \"number\") {\n        const currentActorHp = (<ActorSystemData>actor.system).attributes.hp?.value || 0;\n        if (\n            game.user?.isGM &&\n            actor?.type === NPC_TYPE &&\n            actor?.items?.size > 0 &&\n            currentActorHp > 0 &&\n            updateHp <= 0 &&\n            game.settings.get(\"pf2e\", \"automation.lootableNPCs\") &&\n            String(game.settings.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItems\")) === \"onZeroHp\"\n        ) {\n            await mystifyNpcItems(actor);\n        }\n\n        const autoGainDying = String(game.settings.get(MODULENAME, \"autoGainDyingAtZeroHP\"));\n        dyingHandlingPreUpdateActorHook(actor, update, currentActorHp, updateHp, autoGainDying);\n    }\n}\n\nexport function preUpdateTokenHook(_document, update, options, ..._args) {\n    if (game.settings.get(MODULENAME, \"tokenAnimation\") && (update.x || update.y)) {\n        fu.setProperty(options, \"animation\", {\n            movementSpeed: game.settings.get(MODULENAME, \"tokenAnimationSpeed\"),\n        });\n    }\n}\n\nexport async function createTokenHook(token: TokenDocumentPF2e, ..._args) {\n    if (game.user?.isGM && game.settings.get(MODULENAME, \"npcMystifier\")) {\n        tokenCreateMystification(token).then();\n    }\n\n    if (\n        game.user?.isGM &&\n        game.settings.get(\"pf2e\", \"automation.lootableNPCs\") &&\n        String(game.settings.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItems\")) === \"onScene\" &&\n        token.actor &&\n        token.actor.isOfType(NPC_TYPE) &&\n        token.actor.items &&\n        token.actor.items.size > 0\n    ) {\n        await mystifyNpcItems(token.actor.items);\n    }\n}\n\n/** Keeley's Hero Point Rule */\nexport function pf2eRerollHook(\n    _oldRoll: Rolled<CheckRoll>,\n    newRoll: Rolled<CheckRoll>,\n    heroPoint: boolean,\n    keep: \"new\" | \"higher\" | \"lower\",\n) {\n    if (!heroPoint || keep !== \"new\") return;\n\n    const die = newRoll.dice.find((d) => d instanceof Die && d.number === 1 && d.faces === 20);\n    const result = die?.results.find((r) => r.active && r.result <= 10);\n    if (die && result) {\n        newRoll.terms.push(\n            OperatorTerm.fromData({ class: \"OperatorTerm\", operator: \"+\", evaluated: true }),\n            NumericTerm.fromData({ class: \"NumericTerm\", number: 10, evaluated: true }),\n        );\n        // @ts-ignore It's protected. Meh.\n        newRoll._total += 10;\n        newRoll.options.keeleyAdd10 = true;\n    }\n}\n\nexport async function pf2eSystemReadyHook() {\n    const housepatcherSetting = game.settings.get(MODULENAME, \"housepatcher\");\n    if (game.user.isGM && housepatcherSetting) {\n        await housepatcher(housepatcherSetting);\n    }\n}\n\nexport function renderActorSheetHook(sheet: ActorSheetPF2e<ActorPF2e>, q: JQuery) {\n    const html = <HTMLElement>q.get(0);\n\n    function itemFromCompendium(element: Element, qualifiedName: string) {\n        const itemUuid = element.getAttribute(qualifiedName);\n        return itemUuid ? fromUuidSync(itemUuid) : null;\n    }\n\n    function itemFromActor(element: Element, attributeName: string) {\n        const itemId = <string>element.getAttribute(attributeName);\n        return itemId ? sheet.actor?.items?.get(itemId) : null;\n    }\n\n    function performColoring(setting: string, listSelector: string, itemSelector: string, fetchItem) {\n        if (sheet.actor?.type === CHARACTER_TYPE && game.settings.get(MODULENAME, setting)) {\n            const lists = html.querySelectorAll(listSelector);\n            for (const list of lists) {\n                const elementNodeListOf = list.querySelectorAll(itemSelector);\n                for (const element of elementNodeListOf) {\n                    const item = fetchItem(element);\n                    if (item) {\n                        const rarity = item.system.traits.rarity;\n                        if (rarity) {\n                            const h4Elements = element.querySelectorAll(\"h4\");\n                            h4Elements.forEach((h4) => h4.classList.add(`xdy-pf2e-workbench-rarity-${rarity}`));\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    performColoring(\"playerSpellsRarityColour\", \".spell-list\", \".spell\", (element) =>\n        itemFromActor(element, \"data-item-id\"),\n    );\n\n    performColoring(\"playerFeatsRarityColour\", \".feats-pane\", \".slot\", (element) =>\n        itemFromActor(element, \"data-item-id\"),\n    );\n\n    performColoring(\"playerCraftingRarityColour\", \".crafting-pane\", \".formula-item\", (element) =>\n        itemFromCompendium(element, \"data-item-uuid\"),\n    );\n\n    if (sheet.actor?.type === CHARACTER_TYPE && game.settings.get(MODULENAME, \"playerFeatsPrerequisiteHint\")) {\n        const featLists = html.querySelectorAll(\".feats-pane\");\n        featLists.forEach((list) => {\n            const elementNodeListOf = list.querySelectorAll(\".slot\");\n            for (const element of elementNodeListOf) {\n                const feat: FeatPF2e | null = <FeatPF2e | null>itemFromActor(element, \"data-item-id\");\n                if (feat) {\n                    const prereqs = feat.system.prerequisites.value.length > 0;\n                    if (prereqs) {\n                        const h4Elements = element.querySelectorAll(\"h4\");\n                        h4Elements.forEach((h4Element) => (h4Element.innerHTML += \"*\"));\n                    }\n                }\n            }\n        });\n    }\n}\n","/*\n * Copyright 2021 Andrew Cuccinello, 2022 Jonas Karlsson\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { scaleNPCToLevel } from \"./NPCScaler.js\";\nimport { ActorPF2e } from \"@actor\";\n\nexport function onScaleNPCContextHook(_html, buttons: any[]) {\n    if (game.user?.isGM) {\n        buttons.unshift({\n            name: \"Scale to Level\",\n            icon: '<i class=\"fas fa-level-up-alt\"></i>',\n            condition: (li: JQuery<HTMLLIElement>) => {\n                const id = li.data(\"document-id\") as string;\n                const actor = game.actors?.get(id) as ActorPF2e;\n\n                return actor.isOfType(\"npc\");\n            },\n            callback: async (li: JQuery<HTMLLIElement>) => {\n                const id = li.data(\"document-id\") as string;\n                const actor: any = game.actors?.get(id);\n\n                // const oldLevel = actor.system.details.level.value;\n                const oldLevel = 24;\n\n                const d = new Dialog({\n                    title: \"Scale NPC\",\n                    content:\n                        `<p>Scale a creature to a range of levels, creating the creature at each level in the range. The min level must be less than or ` +\n                        `equal to the max level. To only scale to a single level, set both equal to the desired level.</p>` +\n                        `<div class=\"form-group\"><label>Min Level</label><input id=\"startLevel\" type=\"number\" value=\"${oldLevel}\" min=\"-1\" max=\"24\"></div>` +\n                        `<div class=\"form-group\"><label>Max Level</label><input id=\"endLevel\" type=\"number\" value=\"${oldLevel}\" min=\"-1\" max=\"24\"></div>`,\n                    buttons: {\n                        scale: {\n                            icon: '<i class=\"fas fa-level-up-alt\"></i>',\n                            label: \"Scale\",\n                            callback: async (html: JQuery) => {\n                                ui.notifications?.info(`Scaling NPC... please wait.`);\n                                const startLevel = parseInt(<string>html.find(\"#startLevel\").val());\n                                const endLevel = parseInt(<string>html.find(\"#endLevel\").val());\n\n                                for (let i = startLevel; i <= endLevel; i++) {\n                                    await scaleNPCToLevel(actor, i);\n                                }\n                                ui.notifications?.info(`Scaled ${actor.name} to levels ${startLevel} - ${endLevel}.`);\n                            },\n                        },\n                    },\n                    default: \"scale\",\n                });\n                d.render(true);\n            },\n        });\n    }\n}\n","import { PartialSettingsData, SettingsMenuPF2eWorkbench } from \"../../settings/menu.js\";\nimport { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\n\nexport function toggleSettings(_html: JQuery) {\n    const settings: [string, any][] = Array.from(game.settings.settings.entries());\n    settings.forEach((_setting: [string, any]) => {\n        // None right now\n    });\n}\n\nexport function toggleMenuSettings(html: JQuery, settings: SettingsMenuPF2eWorkbench) {\n    for (const key in settings[\"settings\"]) {\n        const settingElement: PartialSettingsData = settings[\"settings\"][key];\n        if (settingElement && settingElement[\"key\"]) {\n            const settingName = settingElement[\"key\"];\n\n            // if (settingName !== `automatedAnimationOn` && settingName.startsWith(`automatedAnimation`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"automatedAnimationOn\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n            //\n            // // Disable all dependent actionsReminder settings\n            // if (settingName !== `actionsReminderAllow` && settingName.startsWith(`actionsReminder`)) {\n            //     const applyToggle = !(\n            //         game.settings.get(MODULENAME, \"actionsReminderAllow\") === \"none\" ||\n            //         (game.user?.isGM\n            //             ? game.settings.get(MODULENAME, \"actionsReminderAllow\") === \"players\"\n            //             : game.settings.get(MODULENAME, \"actionsReminderAllow\") === \"gm\")\n            //     );\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(applyToggle);\n            // }\n            //\n            // // Disable all dependent npcMystifier settings\n            // if (settingName !== `npcMystifier` && settingName.startsWith(`npcMystifier`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"npcMystifier\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n\n            // Disable all dependent persistentDamage settings\n            if (settingName !== \"applyPersistentAllow\" && settingName.startsWith(\"applyPersistent\")) {\n                const applyToggle = !(\n                    game.settings.get(MODULENAME, \"applyPersistentAllow\") === \"none\" ||\n                    (game.user?.isGM\n                        ? game.settings.get(MODULENAME, \"applyPersistentAllow\") === \"players\"\n                        : game.settings.get(MODULENAME, \"applyPersistentAllow\") === \"gm\")\n                );\n                html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(applyToggle);\n            }\n            if (settingName !== `handleDyingRecoveryRollAllow` && settingName.startsWith(\"handleDyingRecoveryRoll\")) {\n                const applyToggle = !(\n                    game.settings.get(MODULENAME, \"handleDyingRecoveryRollAllow\") === \"none\" ||\n                    (game.user?.isGM\n                        ? game.settings.get(MODULENAME, \"handleDyingRecoveryRollAllow\") === \"players\"\n                        : game.settings.get(MODULENAME, \"handleDyingRecoveryRollAllow\") === \"gm\")\n                );\n                html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(applyToggle);\n            }\n            if (settingName !== `autoRollDamageAllow` && settingName.startsWith(`autoRollDamage`)) {\n                // const valueFunction = game.settings.get(MODULENAME, \"autoRollDamage\") === \"none\";\n                const applyToggle = !(\n                    game.settings.get(MODULENAME, \"autoRollDamageAllow\") === \"none\" ||\n                    (game.user?.isGM\n                        ? game.settings.get(MODULENAME, \"autoRollDamageAllow\") === \"players\"\n                        : game.settings.get(MODULENAME, \"autoRollDamageAllow\") === \"gm\")\n                );\n\n                html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(applyToggle);\n                html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(applyToggle);\n            }\n\n            // if (settingName !== `reminderCannotAttack` && settingName.startsWith(`reminderCannotAttack`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"reminderCannotAttack\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n            //\n            // if (settingName !== `heroPointHandler` && settingName.startsWith(`heroPointHandler`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"heroPointHandler\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n            //\n            // if (settingName !== `castPrivateSpell` && settingName.startsWith(`castPrivateSpell`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"castPrivateSpell\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n            //\n            // if (settingName !== `tokenAnimation` && settingName.startsWith(`tokenAnimation`)) {\n            //     const valueFunction = !game.settings.get(MODULENAME, \"tokenAnimation\");\n            //\n            //     html.find(`input[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            //     html.find(`select[name=\"${settingName}\"]`).parent().parent().toggle(!valueFunction);\n            // }\n        }\n    }\n}\n","// types: [all, action, bestiary, campaignFeature, equipment, feat, hazard, spell] (compendium browser divisions + 'all')\n//        if you need to find effects like this, too bad I guess\n// fields: document fields required to index for provided filter\n// filter: a function that takes one argument, returns bool, for .filter()\n// strictSourcing: if true, will suppress documents with missing source information, if false they're let through\n// fetch: if true, return full documents instead of the filtered index\n\ninterface GetAllFromAllowedPacksParams {\n    type?: string;\n    fields?: string[];\n    filter?: any | null;\n    strictSourcing?: boolean;\n    fetch?: boolean;\n}\n\n/**\n * Retrieves all items from allowed packs based on the provided parameters.\n *\n * @param {GetAllFromAllowedPacksParams} [params] - Optional parameters to customize the retrieval.\n * @param {string} [params.type=\"equipment\"] - The type of items to retrieve.\n * @param {string[]} [params.fields=[]] - The fields to include in the retrieved items.\n * @param {Function} [params.filter=null] - A filter function to apply to the retrieved items.\n * @param {boolean} [params.strictSourcing=true] - Whether to apply strict sourcing rules.\n * @param {boolean} [params.fetch=false] - Whether to fetch the full documents of the retrieved items.\n * @return {any[]} - An array of the retrieved items.\n */\nexport async function getAllFromAllowedPacks({\n    type = \"equipment\",\n    fields = [],\n    filter = null,\n    strictSourcing = true,\n    fetch = false,\n}: GetAllFromAllowedPacksParams = {}) {\n    const FUNC = \"getAllFromAllowedPacks\";\n    const browser = game.pf2e.compendiumBrowser;\n    const validTypes = Object.keys(browser.settings);\n    validTypes.push(\"all\");\n    const aliases = {\n        actor: \"bestiary\",\n        npc: \"bestiary\",\n        ability: \"action\",\n    };\n\n    const originalType = type;\n    if (!validTypes.includes(type) && !validTypes.includes((type = aliases[type] ?? \"\"))) {\n        ui.notifications.error(`${FUNC}: invalid type ${originalType}`);\n        return null;\n    }\n    if (!Array.isArray(fields) || (fields.length && fields.some(() => false))) {\n        ui.notifications.error(`${FUNC}: fields must be an array of only strings`);\n        return null;\n    }\n    if (filter && typeof filter !== \"function\") {\n        ui.notifications.error(`${FUNC}: provided filter must be a function`);\n        return null;\n    }\n\n    // initialize the sources list if it hasn't been set\n    if (!Object.keys(browser.packLoader.sourcesSettings.sources).length) {\n        await browser.packLoader.updateSources(browser.loadedPacksAll());\n    }\n    const packList =\n        type === \"all\"\n            ? Object.values(browser.settings).flatMap((t: any) => Object.entries(t))\n            : Object.entries(browser.settings[type]);\n\n    const loadablePacks = packList.filter(([_, p]) => (<any>p).load).map(([pack]) => pack);\n    // const unloadablePacks = packList.filter(([_, p]) => !p.load).map(([pack]) => pack);\n    const sources = browser.packLoader.sourcesSettings.sources;\n    const values: any[] = <any[]>(<unknown>Object.values(sources));\n    const loadableSources = values\n        .filter((s) => s?.load)\n        .map((s) =>\n            s.name.slugify({\n                strict: true,\n            }),\n        );\n    fields.push(\"system.details.publication\", \"system.publication\", \"system.source\", \"system.details.source\");\n\n    const out = <any[]>[];\n    const sourceFilter = (d) => {\n        const slug = (\n            d?.system?.details?.publication?.title ??\n            d?.system?.publication?.title ??\n            d?.system?.details?.source?.value ??\n            d?.system?.source?.value ??\n            \"\"\n        ).slugify({\n            strict: true,\n        });\n        if (!slug) return !strictSourcing;\n        return loadableSources.includes(slug);\n    };\n\n    for (const packName of loadablePacks) {\n        const pack = game.packs.get(packName);\n        const initialDocs = await pack?.getIndex({\n            fields,\n        });\n        const sourcedDocs = initialDocs?.filter(sourceFilter);\n        let filteredDocs: any[] | undefined = <any[]>[];\n        try {\n            filteredDocs = filter ? sourcedDocs?.filter(filter) : sourcedDocs;\n        } catch (error) {\n            ui.notifications.error(`Error in provided filter: ${error.toString()}`);\n            return null;\n        }\n\n        if (fetch) {\n            const newVar = await pack?.getDocuments({\n                _id__in: filteredDocs?.map((d) => d._id),\n            });\n            out.push(...(<any[]>newVar));\n        } else {\n            out.push(...(<any[]>filteredDocs));\n        }\n    }\n    return out;\n}\n","import { MODULENAME } from \"../../xdy-pf2e-workbench.js\";\n\nasync function increaseFocusPoints(actor, value) {\n    const focus = actor.system.resources.focus;\n    const current = focus.value;\n    const result = Math.min(current + value, focus.max);\n    await actor.update({ \"system.resources.focus.value\": result });\n    await ChatMessage.create({\n        type: CONST.CHAT_MESSAGE_TYPES.EMOTE,\n        speaker: ChatMessage.getSpeaker(actor),\n        flavor: '<strong><img src=\"systems/pf2e/icons/actions/Passive.webp\" width=\"10\" height=\"10\" style=\"border: 0; margin-right: 3px;\" alt=\"Passive\">Refocus</strong>',\n        content: game.i18n.format(`${MODULENAME}.macros.refocus.regains`, { focus: result - current }),\n    });\n}\n\n/**\n * Executes the \"refocus\" action.\n *\n * @return {Promise<void>} - A promise that resolves when the action is complete.\n */\nexport async function refocus(actors: any = canvas.tokens.controlled.map((token) => token.actor) ?? []) {\n    if (actors.length === 1) {\n        const actor = canvas.tokens.controlled[0].actor;\n        let regain = 1;\n        if (actor) {\n            // @ts-ignore\n            const feats = actor.feats?.map((x) => x.feats).flat();\n            if (\n                feats?.find((i) => {\n                    return [\n                        \"bloodline-focus\",\n                        \"bonded-focus\",\n                        \"conflux-focus\",\n                        \"devoted-focus\",\n                        \"domain-focus\",\n                        \"hex-focus\",\n                        \"inspirational-focus\",\n                        \"link-focus\",\n                        \"meditative-focus\",\n                        \"primal-focus\",\n                        \"wardens-focus\",\n                    ].includes(i.feat?.system?.slug);\n                })\n            ) {\n                regain = actor.system[\"resources\"].focus.max;\n            }\n            increaseFocusPoints(actor, regain);\n        }\n    } else {\n        ui.notifications.warn(game.i18n.localize(`${MODULENAME}.macros.refocus.selectOneActor`));\n    }\n}\n\n// refocus();\n","/**\n * Entrypoint for xdy-pf2e-workbench.\n * Author: xdy (Jonas Karlsson)\n * Content License: See LICENSE and README.md for license details\n * Software License: Apache 2.0\n */\n\n// TODO Make it so holding shift pops up a dialog where one can change the name of the mystified creature\n// TODO Add an option to have the 'demystify' button post a message to chat/pop up a dialog with demystification details (e.g. pretty much the recall knowledge macro), with the chat button doing the actual demystification.\n// TODO Make the button post a chat message with a properly set up RK roll that players can click, as well as a gm-only button on the message that the gm can use to actually unmystify.\nimport { preloadTemplates } from \"./preloadTemplates.js\";\nimport { registerWorkbenchKeybindings } from \"./keybinds.js\";\nimport { ActorPF2e } from \"@actor\";\n\nimport { isFirstGM, logInfo } from \"./utils.js\";\nimport { enableNpcRollerButton, registerNpcRollerHandlebarsTemplates } from \"./feature/npc-roller/NpcRoller.js\";\nimport { scaleNPCToLevelFromActor } from \"./feature/cr-scaler/NPCScaler.js\";\nimport { generateNameFromTraitsForToken } from \"./feature/tokenMystificationHandler/traits-name-generator.js\";\nimport { basicActionMacros, registerBasicActionMacrosHandlebarsTemplates } from \"./feature/macros/basicActionMacros.js\";\nimport { buildNpcSpellbookJournal } from \"./feature/macros/buildNpcSpellbookJournal.js\";\nimport {\n    createChatMessageHook,\n    createItemHook,\n    createTokenHook,\n    deleteItemHook,\n    pf2eEndTurnHook,\n    pf2eRerollHook,\n    pf2eStartTurnHook,\n    pf2eSystemReadyHook,\n    preCreateChatMessageHook,\n    preUpdateActorHook,\n    preUpdateTokenHook,\n    renderActorSheetHook,\n    renderChatMessageHook,\n    renderTokenHUDHook,\n    updateItemHook,\n} from \"./hooks.js\";\nimport { onScaleNPCContextHook } from \"./feature/cr-scaler/NPCScalerSetup.js\";\nimport {\n    addHeroPoints,\n    calcRemainingMinutes,\n    callHeroPointHandler,\n    createRemainingTimeMessage,\n    resetHeroPoints,\n    startTimer,\n} from \"./feature/heroPointHandler/index.js\";\nimport { moveSelectedAheadOfCurrent } from \"./feature/initiativeHandler/index.js\";\nimport { doMystificationFromToken } from \"./feature/tokenMystificationHandler/index.js\";\nimport { noOrSuccessfulFlatcheck } from \"./feature/damageHandler/index.js\";\nimport { registerWorkbenchSettings } from \"./settings/index.js\";\nimport { SettingsMenuPF2eWorkbench } from \"./settings/menu.js\";\nimport { toggleMenuSettings } from \"./feature/settingsHandler/index.js\";\nimport { mystifyNpcItems } from \"./feature/qolHandler/index.js\";\nimport { getAllFromAllowedPacks } from \"./feature/api/getAllFromAllowedPacks.js\";\n\nimport \"../styles/xdy-pf2e-workbench.scss\";\nimport { refocus } from \"./feature/macros/refocus.js\";\n\nexport const MODULENAME = \"xdy-pf2e-workbench\";\nexport const NPC_TYPE = \"npc\";\nexport const CHARACTER_TYPE = \"character\";\n\nconst activeHooks = new Set();\n\n// Enum for phases\nexport enum Phase {\n    DOWN = 0, // Before init, not sure if it has a name in foundry\n    INIT = 10,\n    SETUP = 20,\n    READY = 30,\n    ACTIVE = 40, // After ready, not sure if it has a name in foundry\n}\n\nexport let phase: Phase = Phase.DOWN;\n\nfunction handle(hookName, shouldBeOn, hookFunction, once = false) {\n    if (!activeHooks.has(hookName)) {\n        if (shouldBeOn) {\n            if (once) {\n                Hooks.once(hookName, hookFunction);\n            } else {\n                Hooks.on(hookName, hookFunction);\n            }\n            activeHooks.add(hookName);\n        }\n    } else {\n        if (!shouldBeOn) {\n            Hooks.off(hookName, hookFunction);\n            activeHooks.delete(hookName);\n        }\n    }\n}\n\nexport function updateHooks(cleanSlate = false) {\n    if (phase > Phase.SETUP && game.user.isGM) {\n        game.socket.emit(\"module.\" + MODULENAME, { operation: \"updateHooks\" });\n    }\n    if (cleanSlate) {\n        activeHooks.clear();\n    }\n\n    const gs = game.settings;\n\n    handle(\"getActorDirectoryEntryContext\", gs.get(MODULENAME, \"npcScaler\"), onScaleNPCContextHook);\n    handle(\"renderJournalDirectory\", gs.get(MODULENAME, \"npcRoller\"), enableNpcRollerButton);\n\n    handle(\n        \"preCreateChatMessage\",\n        gs.get(MODULENAME, \"castPrivateSpell\") ||\n            gs.get(MODULENAME, \"reminderTargeting\") !== \"no\" ||\n            gs.get(MODULENAME, \"reminderCannotAttack\") === \"cancelAttack\",\n        preCreateChatMessageHook,\n    );\n\n    handle(\n        \"createChatMessage\",\n        gs.get(MODULENAME, \"autoRollDamageAllow\") ||\n            gs.get(MODULENAME, \"autoRollDamageForStrike\") ||\n            gs.get(MODULENAME, \"autoRollDamageForSpellAttack\") ||\n            gs.get(MODULENAME, \"autoRollDamageForSpellWhenNotAnAttack\") !== \"no\" ||\n            gs.get(MODULENAME, \"automatedAnimationOn\") ||\n            gs.get(MODULENAME, \"reminderBreathWeapon\") ||\n            gs.get(MODULENAME, \"reminderCannotAttack\") === \"reminder\" ||\n            gs.get(MODULENAME, \"autoGainDyingIfTakingDamageWhenAlreadyDying\"),\n        createChatMessageHook,\n    );\n\n    handle(\n        \"renderChatMessage\",\n        true, // Due to support for minimumUserRole, this hook is always on\n        renderChatMessageHook,\n    );\n\n    handle(\n        \"createItem\",\n        game.settings.get(MODULENAME, \"dropHeldItemsOnBecomingUnconscious\"),\n        fu.debounce(createItemHook, 10),\n    );\n\n    handle(\"updateItem\", false, updateItemHook);\n\n    handle(\n        \"deleteItem\",\n        gs.get(MODULENAME, \"giveWoundedWhenDyingRemoved\") || gs.get(MODULENAME, \"giveUnconsciousIfDyingRemovedAt0HP\"),\n        deleteItemHook,\n    );\n\n    handle(\"pf2e.systemReady\", gs.get(MODULENAME, \"housepatcher\") !== \"\", pf2eSystemReadyHook, true);\n\n    handle(\"pf2e.endTurn\", gs.get(MODULENAME, \"decreaseFrightenedConditionEachTurn\"), pf2eEndTurnHook);\n\n    handle(\n        \"pf2e.startTurn\",\n        gs.get(MODULENAME, \"actionsReminderAllow\") !== \"none\" || gs.get(MODULENAME, \"autoReduceStunned\"),\n        pf2eStartTurnHook,\n    );\n\n    handle(\"pf2e.reroll\", gs.get(MODULENAME, \"keeleysHeroPointRule\"), pf2eRerollHook);\n\n    handle(\"renderTokenHUD\", gs.get(MODULENAME, \"npcMystifier\"), renderTokenHUDHook);\n\n    handle(\n        \"preUpdateActor\",\n        (<string>gs.get(MODULENAME, \"enableAutomaticMove\")).startsWith(\"reaching0HP\") ||\n            !String(gs.get(MODULENAME, \"autoGainDyingAtZeroHP\")).startsWith(\"no\") ||\n            !String(gs.get(MODULENAME, \"nonLethalIsNotLethal\")).startsWith(\"no\") ||\n            !String(gs.get(MODULENAME, \"autoRemoveDyingAtGreaterThanZeroHP\")).startsWith(\"no\") ||\n            gs.get(MODULENAME, \"autoRemoveUnconsciousAtGreaterThanZeroHP\") ||\n            (gs.get(\"pf2e\", \"automation.lootableNPCs\") &&\n                gs.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItems\") === \"onZeroHp\"),\n        preUpdateActorHook,\n    );\n\n    handle(\"preUpdateToken\", gs.get(MODULENAME, \"tokenAnimation\"), preUpdateTokenHook);\n\n    handle(\n        \"createToken\",\n        gs.get(MODULENAME, \"npcMystifier\") ||\n            (gs.get(\"pf2e\", \"automation.lootableNPCs\") &&\n                gs.get(MODULENAME, \"npcMystifyAllPhysicalMagicalItems\") === \"onScene\"),\n        createTokenHook,\n    );\n\n    handle(\n        \"renderActorSheet\",\n        // gs.get(MODULENAME, \"playerFeatsRarityColour\") ||\n        //     gs.get(MODULENAME, \"playerFeatsPrerequisiteHint\") ||\n        //     gs.get(MODULENAME, \"playerSpellsRarityColour\") ||\n        //     gs.get(MODULENAME, \"castPrivateSpell\") ||\n        true, // Due to legacy variant rules this hook is always on\n        renderActorSheetHook,\n    );\n\n    changePauseText();\n}\n\nHooks.on(\"renderPause\", (_app, _html, _options) => {\n    changePauseText();\n});\n\n// Initialize module\nHooks.once(\"init\", async (_actor: ActorPF2e) => {\n    logInfo(`${MODULENAME} | Initializing xdy-pf2e-workbench`);\n    phase = Phase.INIT;\n\n    registerWorkbenchSettings();\n\n    await preloadTemplates();\n    registerNpcRollerHandlebarsTemplates().then();\n\n    registerBasicActionMacrosHandlebarsTemplates().then();\n\n    registerHandlebarsHelpers();\n\n    // Hooks that always run\n    Hooks.on(\"renderSettingsMenuPF2eWorkbench\", (_app: any, html: JQuery, _settings: SettingsMenuPF2eWorkbench) => {\n        toggleMenuSettings(html, _settings);\n        _app.setPosition();\n    });\n\n    // Hooks.on(\"renderSettingsConfig\", (_app: any, html: JQuery) => {\n    //     toggleSettings(html);\n    // });\n\n    // Hooks that run once, if a setting is enabled. Manual refresh will still be needed for these.\n\n    // Hooks that only run if a setting that needs it has been enabled\n    updateHooks();\n\n    // Register custom sheets (if any)\n});\n\nexport function changePauseText() {\n    if (!document?.querySelector(\"#pause\")?.classList.contains(\"paused\")) {\n        return;\n    }\n\n    if (game.settings.get(MODULENAME, \"customPauseImage\") !== \"\") {\n        // Set css variables for the module\n        const path = <string>game.settings.get(MODULENAME, \"customPauseImage\");\n        const prefix = path.startsWith(\"http\") ? \"\" : \"../../../\";\n        document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause\", \"url(\" + prefix + path + \")\");\n    }\n\n    document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause-bottom\", \"10%\");\n    document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause-figcaption-top\", \"0%\");\n    if (game.settings.get(MODULENAME, \"customPauseRelocation\")) {\n        document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause-bottom\", \"calc(50% - 64px)\");\n        document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause-figcaption-top\", \"-100%\");\n        document.documentElement.style.setProperty(\"--xdy-pf2e-workbench-pause-background\", \"\");\n    }\n\n    const text = game.settings.get(MODULENAME, \"customPauseText\");\n    if (phase >= Phase.READY) {\n        const element = document.querySelector(\"figcaption\");\n        if (text && text !== \"\" && element) {\n            // @ts-ignore\n            element.textContent = text;\n            const pauseText = game?.i18n?.translations?.GAME[\"Paused\"];\n            if (pauseText) {\n                game.i18n.translations.GAME[\"Paused\"] = text;\n            }\n        }\n        // const paused = !game.paused;\n        // game.togglePause(paused, true);\n        // new Promise((resolve) => setTimeout(resolve, 25)).then(() => game.togglePause(!paused, true));\n    }\n}\n\n// Setup module\nHooks.once(\"setup\", async () => {\n    logInfo(`${MODULENAME} | Setting up`);\n    phase = Phase.SETUP;\n    // Do anything after initialization but before ready\n\n    registerWorkbenchKeybindings();\n\n    // General module setup\n});\n\nfunction handleCampaignFeatSection() {\n    const legacyVariantRuleAncestryParagon = game.settings.get(MODULENAME, \"legacyVariantRuleAncestryParagon\");\n    const legacyVariantRuleDualClass = game.settings.get(MODULENAME, \"legacyVariantRuleDualClass\");\n\n    // Add campaign feat sections if enabled\n    if (legacyVariantRuleDualClass || legacyVariantRuleAncestryParagon) {\n        const campaignFeatSections = game.settings.get(\"pf2e\", \"campaignFeatSections\");\n        if (legacyVariantRuleAncestryParagon) {\n            if (!campaignFeatSections.find((section) => section.id === \"xdy_ancestryparagon\")) {\n                campaignFeatSections.push({\n                    id: \"xdy_ancestryparagon\",\n                    label: game.i18n.localize(`${MODULENAME}.SETTINGS.legacyVariantRuleAncestryParagon.title`),\n                    supported: [\"ancestry\"],\n                    slots: [1, 3, 7, 11, 15, 19],\n                });\n            }\n        }\n\n        if (legacyVariantRuleDualClass) {\n            if (!campaignFeatSections.find((section) => section.id === \"xdy_dualclass\")) {\n                campaignFeatSections.push({\n                    id: \"xdy_dualclass\",\n                    label: game.i18n.localize(`${MODULENAME}.SETTINGS.legacyVariantRuleDualClass.title`),\n                    supported: [\"class\"],\n                    slots: [1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20],\n                });\n            }\n        }\n\n        game.settings.set(\"pf2e\", \"campaignFeatSections\", campaignFeatSections);\n    }\n\n    const campaignFeatSections = game.settings.get(\"pf2e\", \"campaignFeatSections\");\n    // ... or remove it if disabled.\n    if (\n        campaignFeatSections &&\n        !legacyVariantRuleDualClass &&\n        campaignFeatSections.find((section) => section.id === \"xdy_dualclass\")\n    ) {\n        campaignFeatSections.splice(\n            campaignFeatSections.findIndex((section) => section.id === \"xdy_dualclass\"),\n            1,\n        );\n        game.settings.set(\"pf2e\", \"campaignFeatSections\", campaignFeatSections);\n    }\n\n    if (\n        campaignFeatSections &&\n        !legacyVariantRuleAncestryParagon &&\n        campaignFeatSections.find((section) => section.id === \"xdy_ancestryparagon\")\n    ) {\n        campaignFeatSections.splice(\n            campaignFeatSections.findIndex((section) => section.id === \"xdy_ancestryparagon\"),\n            1,\n        );\n        game.settings.set(\"pf2e\", \"campaignFeatSections\", campaignFeatSections);\n    }\n}\n\n// When ready\nHooks.once(\"ready\", () => {\n    // Do anything once the module is ready\n    logInfo(`${MODULENAME} | Ready`);\n    phase = Phase.READY;\n\n    // Must be in ready\n\n    // Make some functions available for macros\n    // noinspection JSUnusedGlobalSymbols\n    // @ts-ignore\n    game.PF2eWorkbench = {\n        resetHeroPoints: resetHeroPoints, // game.PF2eWorkbench.resetHeroPoints(1)\n        addHeroPoints: addHeroPoints, // game.PF2eWorkbench.addHeroPoints(1, \"ALL\") OR game.PF2eWorkbench.addHeroPoints(1, _token.actor.id)\n        scaleNPCToLevelFromActor: scaleNPCToLevelFromActor, // game.PF2eWorkbench.scaleNPCToLevelFromActor(_token.actor.id, 24);\n        moveSelectedAheadOfCurrent: moveSelectedAheadOfCurrent, // await game.PF2eWorkbench.moveSelectedAheadOfCurrent(await game.combat?.getCombatantByToken(_token.id).id)\n        doMystificationFromToken: doMystificationFromToken, // await game.PF2eWorkbench.doMystificationFromToken(_token.id, true) OR await game.PF2eWorkbench.doMystificationFromToken(_token.id, false)\n        generateNameFromTraitsFromTokenId: generateNameFromTraitsForToken, // await game.PF2eWorkbench.generateNameFromTraitsFromTokenId(_token.id)\n        noOrSuccessfulFlatcheck: noOrSuccessfulFlatcheck, // await game.PF2eWorkbench.noOrSuccessfulFlatcheck(game.messages.get(\"messageId\"))\n        basicActionMacros: basicActionMacros, // await game.PF2eWorkbench.basicActionMacros()\n        refocus: refocus, // await game.PF2eWorkbench.refocus()\n        buildNpcSpellbookJournal: buildNpcSpellbookJournal, // await game.PF2eWorkbench.buildNpcSpellbookJournal()\n        callHeroPointHandler: callHeroPointHandler, // await game.PF2eWorkbench.callHeroPointHandler()\n        mystifyNpcItems: mystifyNpcItems, // await game.PF2eWorkbench.mystifyNpcItems() OR await game.PF2eWorkbench.mystifyNpcItems(items, minimumRarity, usingPartyLevel, minimumLevel, multiplier)\n        getAllFromAllowedPacks: getAllFromAllowedPacks, // await game.PF2eWorkbench.getAllFromAllowedPacks({ type, fields, filter, strictSourcing, fetch})\n    };\n\n    if (game.modules.get(\"pf2e-sheet-skill-actions\")?.active) {\n        ui.notifications.error(game.i18n.localize(`${MODULENAME}.modules.pf2e-sheet-skill-actions`));\n    }\n\n    if (game.modules.get(\"pf2e-toolbox\")?.active) {\n        ui.notifications.error(game.i18n.localize(`${MODULENAME}.modules.pf2e-toolbox`));\n    }\n\n    const ta = game.settings.get(MODULENAME, \"tokenAnimation\");\n    const mlt = game.modules.get(\"multilevel-tokens\");\n    if (ta && mlt?.active) {\n        ui.notifications.error(game.i18n.localize(`${MODULENAME}.modules.multilevel-tokens`));\n    }\n\n    updateHooks();\n\n    // TODO Instead of opening immediately, add a handler that hooks onto the *first* unpause, and starts then.\n    // TODO Check if more than 'timer max' minutes have passed, if so assume new start and reset to 'timer max' minutes.\n    if (isFirstGM() && game.settings.get(MODULENAME, \"heroPointHandler\")) {\n        let remainingMinutes = calcRemainingMinutes(false);\n        if (remainingMinutes > 0 || game.settings.get(MODULENAME, \"heroPointHandlerStartTimerOnReady\")) {\n            remainingMinutes = calcRemainingMinutes(true);\n            startTimer(remainingMinutes).then(() => {\n                createRemainingTimeMessage(remainingMinutes);\n            });\n        }\n    }\n\n    game.socket.on(\"module.\" + MODULENAME, (operation) => {\n        switch (operation?.operation) {\n            case \"updateHooks\":\n                if (!game.user.isGM) {\n                    updateHooks();\n                }\n                break;\n            case \"notification\":\n                if (!game.user.isGM) {\n                    const type = operation.args[0];\n                    const message = operation.args[1];\n                    ui.notifications.notify(message, type);\n                }\n                break;\n            default:\n                break;\n        }\n    });\n\n    handleCampaignFeatSection();\n\n    phase = Phase.ACTIVE;\n    Hooks.callAll(`${MODULENAME}.moduleReady`);\n});\n\nfunction registerHandlebarsHelpers() {\n    Handlebars.registerHelper(\"xdy_includes\", function (array: any[], value: any, options: any) {\n        if (array.includes(value)) {\n            return options.fn(this);\n        } else {\n            return options.inverse(this);\n        }\n    });\n    Handlebars.registerHelper(\"xdy_ifeq\", function (v1, v2, options) {\n        if (v1 === v2) return options.fn(this);\n        else return options.inverse();\n    });\n    Handlebars.registerHelper(\"xdy_ifne\", function (v1, v2, options) {\n        if (v1 !== v2) return options.fn(this);\n        else return options.inverse();\n    });\n\n    Handlebars.registerHelper(\"xdy_isNaN\", function (context, options) {\n        if (isNaN(context) && !(typeof context === \"string\")) {\n            return options.fn(this);\n        } else {\n            return options.inverse(this);\n        }\n    });\n\n    Handlebars.registerHelper(\"xdy_undefined\", function () {\n        return undefined;\n    });\n\n    Handlebars.registerHelper(\"xdy_hasKey\", function (context, key) {\n        for (const prop of context) {\n            if (Object.getOwnPropertyDescriptor(prop, key)) {\n                return true;\n            }\n        }\n        return false;\n    });\n}\n"],"names":["__name","housepatcher","document","event","trait","draw","HPHState","key","item","action","content","eye","condition","total","getSpeakerToken","u","Phase","campaignFeatSections"],"mappings":"gPAAA,eAAsB,kBAAkC,CACpD,MAAM,cAA0B,CAAA,EAIhC,MAAM,cAAc,aAAa,CACrC,CANsB,4CAAAA,QAAA,iBAAA,kBAAA,ECMtB,SAAS,yBAAyB,QAA0B,gBAAkB,GAAM,YAAc,GAAM,CAE9F,MAAA,iBADS,QAAQ,KAAK,KACQ,KAAK,MAAM,GAC/C,MAAI,CAAC,KAAK,MAAM,MAAQ,iBAAmB,iBAChC,GACA,QAAK,MAAM,MAAQ,aAAe,iBAIjD,CATS,4DAAAA,QAAA,yBAAA,0BAAA,EAYT,SAAS,kCAAkC,QAAkC,CACnE,MAAA,MAAwB,QAAQ,MAAM,KACxC,IAAA,gBAA0B,MAAM,SAAS,SAAW,GACpD,GAAA,OAAO,SAAS,SAAU,CAC1B,MAAM,MAAQ,QAAQ,QAAQ,MAAM,iCAAiC,EACjE,OAAS,MAAM,CAAC,IAChB,gBAAkB,MAAM,CAAC,EAEjC,CACO,OAAA,eACX,CAVS,8EAAAA,QAAA,kCAAA,mCAAA,EAYT,SAAS,WAAY,CACV,OAAA,KAAK,MAAM,WAAa,KAAK,IACxC,CAFS,8BAAAA,QAAA,UAAA,WAAA,EAIT,SAAS,YAAa,CAClB,MAAM,QAAU,iEACT,OAAA,MAAM,KAAK,MAAM,EAAE,EAAE,KAAM,CAAA,EAC7B,IAAI,IAAM,QAAQ,KAAK,MAAM,KAAK,SAAW,QAAQ,MAAM,CAAC,CAAC,EAC7D,KAAK,EAAE,CAChB,CALS,gCAAAA,QAAA,WAAA,YAAA,EAOT,SAAS,qBAAqB,QAAS,CAE7B,MAAA,qBACF,QAAQ,OAAO,SAAW,GAC1B,CAAC,WAAY,SAAU,OAAQ,QAAS,QAAQ,EAAE,SAAS,QAAQ,MAAM,IAAI,IAC5E,CAAC,QAAQ,QAAU,QAAQ,cAC1B,kBAAoB,QAAQ,MAAM,OAAS,SAAW,QAAQ,aACpE,OACI,sBAAwB,iBAGhC,CAXS,oDAAAA,QAAA,qBAAA,sBAAA,EAmBF,SAAS,YAAY,KAAM,CAC1B,IAAA,EAAG,GAAG,IAAI,CAClB,CAFgB,4BAAAA,QAAA,SAAA,UAAA,EAIT,SAAS,WAAW,KAAM,CACzB,IAAA,EAAG,GAAG,IAAI,CAClB,CAFgB,0BAAAA,QAAA,QAAA,SAAA,EAQT,SAAS,YAAY,KAAM,CAC1B,IAAA,EAAG,GAAG,IAAI,CAClB,CAFgB,4BAAAA,QAAA,SAAA,UAAA,EAIhB,SAAS,IAAI,SAAW,KAAM,KAAM,CAChC,IAAI,OAAS,EAKb,GAJI,OAAS,MAAM,QACf,OAAS,OAAO,KAAK,SAAS,IAAI,WAAY,UAAU,CAAC,GAAK,GAG9D,UAAY,OACZ,OAAQ,SAAU,CACd,IAAK,GACO,QAAA,MAAM,GAAG,IAAI,EACrB,MACJ,IAAK,GACO,QAAA,MAAM,GAAG,IAAI,EACrB,MACJ,IAAK,GACO,QAAA,KAAK,GAAG,IAAI,EACpB,MACJ,IAAK,GACO,QAAA,KAAK,GAAG,IAAI,EACpB,MACJ,IAAK,GACO,QAAA,MAAM,GAAG,IAAI,EACrB,KAGR,CAER,CA3BS,kBAAAA,QAAA,IAAA,KAAA,EAuCF,SAAS,kBAAkB,MAAO,CACrC,GAAI,CAAC,MAAc,OAAA,KACb,MAAA,YAAc,KAAK,MAAM,QACzB,cAAgB,KAAK,MAAM,QAAQ,OAAQ,GAAM,EAAE,MAAM,EACzD,aAAe,cAAc,KAAM,GAAM,EAAE,YAAc,KAAK,EAC9D,qBAAuB,cAAc,KAAM,GAAM,MAAM,cAAc,EAAG,QAAQ,CAAC,EACjF,QACF,aAAa,QAAU,MAAM,cAAc,YAAa,QAAQ,EAC1D,YACA,cAAgB,KAAK,MAAM,UAAY,sBAAwB,KAClE,OAAA,KAAK,KAAK,KAAO,SAAS,EACrC,CAXgB,8CAAAA,QAAA,kBAAA,mBAAA,EAaA,SAAA,iBAAiB,QAAc,KAAe,OAAQ,CAClE,KAAK,OAAO,KAAK,UAAY,WAAY,CAAE,UAAW,eAAgB,KAAM,CAAC,KAAM,OAAO,CAAG,CAAA,CACjG,CAFgB,4CAAAA,QAAA,iBAAA,kBAAA,EAIT,SAAS,UAAU,OAAQ,CAC9B,MAAM,OAAS,CAAA,EACf,cAAO,KAAK,MAAM,EAAE,QAAQ,SAAU,EAAG,CACrC,SAAS,OAAQ,EAAG,OAAO,CAAC,CAAC,CAAA,CAChC,EACM,MACX,CANgB,8BAAAA,QAAA,UAAA,WAAA,EAQA,SAAA,SAAS,OAAQ,KAAM,MAAO,CACpC,MAAA,MAAQ,KAAK,MAAM,GAAG,EACtB,IAAM,MAAM,MAElB,MAAM,OAAO,SAAU,EAAG,EAAG,EAAG,GAAI,CAChC,OAAQ,EAAE,CAAC,EAAI,EAAE,CAAC,IAAM,SAAS,EAAI,KAAK,GAAK,GAAG,EAAI,CAAC,EAAI,GAAG,EAAI,CAAA,EAAK,CAAA,EACxE,EAAA,MAAM,EAAE,GAAG,EAAI,KACtB,CAPgB,4BAAAA,QAAA,SAAA,UAAA,EAehB,eAAsB,aAAaC,cAAc,CACzC,GAAA,CACA,MAAM,QAAU,KAAK,MAAM,UAAU,OAAOA,aAAY,CAAC,CAAC,EAC1D,IAAI,MAAQ,EAEZ,SAAW,CAAE,KAAM,OAAQ,IAAA,IAAU,QAAS,CACpCC,MAAAA,UAAW,MAAM,SAAS,IAAI,EAEpC,GAAIA,WAAU,WAAY,CACtB,MAAM,WAAaA,UAAS,WAE5B,GAAI,SAAW,SAAU,CACf,MAAA,SAAgBA,UAAS,WACzB,OAAS,UAAU,QAAQ,QAAQ,MAEnC,kBAAoB,wBAEtB,GAAA,EAAE,QAAQ,SADU,kBACc,GAAK,QAAQ,SAAS,iBAAiB,GAAI,CACvE,MAAA,OAAc,UAAU,IAAI,EAC3B,OAAA,OAAS,OAAO,QAAU,CAAA,EACjC,OAAO,OAAO,OAAS,OAAO,OAAO,QAAU,GAC/C,OAAO,OAAO,OAAO,MAAQ,OAAO,OAAO,OAAO,OAAS,GAC3D,OAAO,OAAO,OAAO,MAAM,KAAK,iBAAiB,EAEjD,MAAM,OAAS,QAAA,MAAG,YAAY,SAAU,MAAM,EAC9C,MAAMA,UAAS,OAAO,UAAU,MAAM,CAAC,EAC9B,OAAA,CACb,CAAA,MACO,SAAW,SACd,WAAW,QACX,MAAM,WAAW,UAAU,CAAE,OAAQ,EAAO,CAAA,EAEzC,SAAW,OACb,WAAW,QACZ,MAAM,WAAW,UAAU,CAAE,OAAQ,EAAM,CAAA,EAExC,SAAW,WAClB,MAAMA,UAAS,SACf,MAAM,WAAW,WAEzB,CACJ,CAEM,MAAA,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,sCAAuC,CAAE,KAAA,CAAO,EAC3F,GAAA,cAAc,KAAK,OAAO,OACrB,CACL,GAAA,cAAc,MAAM,KAAK,KAAK,OAAO,GAAG,UAAU,8BAA8B,CAAC,EACpF,KAAK,SAAS,IAAI,WAAY,eAAgB,EAAE,CACpD,CACJ,CAjDsB,oCAAAF,QAAA,aAAA,cAAA,EAmDf,SAAS,sBAAsB,MAA+B,CACjE,OAAO,MAAM,SAAS,WAAW,EAAiB,KAAK,OAAO,SAAS,QAC3D,OAAO,IAAM,CAAC,KAAK,KAAK,IAAI,GAC5B,OAAQ,OAAU,MAAM,cAAkC,KAAK,KAAO,QAAQ,CAAC,GAC/E,IAAK,OAAU,MAAM,KAAK,GAC1B,OAAQ,GAAM,GAAG,OAAO,IAAI,QAAQ,CAAC,EAAI,EACzD,CANgB,sDAAAA,QAAA,sBAAA,uBAAA,EAqBA,SAAA,aAA+B,IAAQ,IAA8B,CACjF,OAAQ,OAAO,KAAQ,UAAY,OAAO,KAAQ,WAAa,OAAO,GAC1E,CAFgB,oCAAAA,QAAA,aAAA,cAAA,ECvMT,MAAM,kCAAkC,eAAgB,OAAA,0CF5B/D,ME4B+D,CAAAA,QAAA,KAAA,2BAAA,CAAA,CAC3D,OAAgB,UAEhB,WAAoB,gBAAiB,CACjC,MAAM,QAAU,MAAM,eACf,OAAA,QAAA,MAAG,YAAY,QAAS,CAC3B,MAAO,GAAG,UAAU,aAAa,KAAK,SAAS,QAC/C,GAAI,GAAG,KAAK,SAAS,YACrB,SAAU,gDACV,QAAS,CAAC,OAAQ,qBAAsB,eAAe,EACvD,MAAO,IACP,OAAQ,IACR,cAAe,GACf,UAAW,EAAA,CACd,CACL,CAEA,IAAI,WAAoB,CACpB,OAAQ,KAAK,YAAiD,SAClE,CAGA,WAAqB,UAAgD,CACjE,MAAO,EACX,CAEA,OAAO,kBAAyB,CAC5B,MAAM,SAAW,KAAK,SACtB,UAAW,WAAW,OAAO,KAAK,QAAQ,EACjC,KAAA,SAAS,SAAS,WAAY,QAAS,CACxC,GAAG,SAAS,OAAO,EACnB,OAAQ,EAAA,CACX,CAET,CAEA,OAAO,SAAS,KAAmB,QAAwB,CACvD,KAAK,MAAM,QAAW,QAAmB,GAAT,MACpC,CAEA,OAAgB,SAAmB,CAAA,EAGnC,OAAO,QAAQ,KAAoC,CACzC,MAAA,KAAO,KAAK,CAAC,EACZ,OAAA,QAAQ,KAAK,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAG,CAAC,IAAM,CACxC,MAAA,QAAU,KAAK,SAAS,IAAI,qBAAsB,CAAC,KAAO,EAAE,OAAS,IACrE,gBAAkB,KAAK,KAAK,uBAAuB,CAAC,IAAI,EACnD,UAAA,QAAQ,EAAE,KAAM,CACvB,MAAM,YAAc,KAAK,KAAK,uCAAuC,IAAI,KAAK,EAAE,CAAC,EAC5E,KAAA,SAAS,YAAa,OAAO,CACtC,CACgB,gBAAA,GAAG,SAAWG,QAAU,CACzB,UAAA,QAAQ,EAAE,KAAM,CACvB,MAAM,YAAc,KAAK,KAAK,uCAAuC,IAAI,KAAK,EAAE,CAAC,EAC7E,IAAA,UAAYA,OAAM,OAAO,QAC7B,OAAQ,EAAE,KAAM,CACZ,IAAK,SACWA,UAAAA,OAAM,OAAO,QAAU,EAAE,MACrC,KAIR,CACK,KAAA,SAAS,YAAa,SAAS,CACxC,CAAA,CACH,CAAA,CACJ,CACL,CAEA,OAAO,gBAAuB,CAC1B,MAAM,KAAO,KAAK,KACd,MAEM,MAAA,GAAG,SAAS,KAAK,IAAI,GAAI,KAAK,KAAK,IAAI,CAAC,CAEtD,CAEA,OAAO,8BAA8B,KAAM,WAAa,GAAM,CAC1D,KAAK,SAAS,aAAa,WAAY,KAAK,UAAW,CACnD,KAAM,GAAG,UAAU,aAAa,KAAK,SAAS,QAC9C,MAAO,GAAG,UAAU,aAAa,KAAK,SAAS,SAC/C,KAAM,GAAG,UAAU,aAAa,KAAK,SAAS,QAC9C,KACA,KAAM,KACN,UAAA,CACH,EACD,KAAK,iBAAiB,EACtB,KAAK,eAAe,CACxB,CAES,SAA4B,CAC3B,MAAA,SAAY,KAAK,YAAiD,SAClE,aAAuC,OAAO,QAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAK,OAAO,IAAM,CAC1F,MAAM,MAAQ,KAAK,SAAS,IAAI,WAAY,GAAG,EACxC,MAAA,CACH,GAAG,QACH,IACA,MACA,WAAY,QAAQ,OAAS,QAC7B,aAAc,QAAQ,OAAS,QAAU,QAAQ,WACjD,SAAU,QAAQ,OAAS,OAC3B,SAAU,CAAC,CAAC,QAAQ,QACpB,OAAQ,QAAQ,OAAS,QAAU,CAAC,QAAQ,UAAA,CAChD,CACH,EACD,OAAyB,QAAG,MAAA,YAAY,MAAM,QAAA,EAAW,CACrD,SAAU,aACV,aAAc,GAAG,UAAU,aAAa,KAAK,SAAS,OAAA,CACzD,CACL,CAEA,MAAyB,cAAc,OAAe,KAA8C,CAChG,UAAW,OAAO,OAAO,KAAK,IAAI,EAAG,CAC7B,IAAA,MAAQ,KAAK,GAAG,GAEhB,QAAU,MAAQ,QAAU,UACpB,MAAA,IAGP,CAAC,SAAU,OAAO,EAAE,SAAS,GAAG,GACjC,MAAM,KAAK,SAAS,IAAI,WAAY,IAAK,KAAK,CAEtD,CACJ,CACJ,CCtJW,IAAA,0BACA,mBAEJ,MAAM,uCAAuC,yBAA0B,OAAA,+CHN9E,MGM8E,CAAAH,QAAA,KAAA,gCAAA,CAAA,CAC1E,OAAgB,UAAY,wBAE5B,WAA2B,UAAgD,CAChE,MAAA,CACH,kCAAmC,CAC/B,KAAM,GAAG,UAAU,mDACnB,KAAM,GAAG,UAAU,mDACnB,MAAO,QACP,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,gDAAgD,EACpF,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,qDAAqD,EAC9F,SAAU,KAAK,KAAK,SAAS,GAAG,UAAU,sDAAsD,CACpG,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,sDAAuD,CACnD,KAAM,GAAG,UAAU,uEACnB,KAAM,GAAG,UAAU,uEACnB,MAAO,QACP,QAAS,GACT,KAAM,MACV,EACA,qEAAsE,CAClE,KAAM,GAAG,UAAU,sFACnB,KAAM,GAAG,UAAU,sFACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,gEAAiE,CAC7D,KAAM,GAAG,UAAU,iFACnB,KAAM,GAAG,UAAU,iFACnB,MAAO,QACP,QAAS,MACT,KAAM,MACV,EACA,uDAAwD,CACpD,KAAM,GAAG,UAAU,wEACnB,KAAM,GAAG,UAAU,wEACnB,MAAO,QACP,QAAS,SACT,KAAM,OACN,QAAS,CACL,OAAQ,KAAK,KAAK,SAAS,kBAAkB,EAC7C,SAAU,KAAK,KAAK,SAAS,oBAAoB,EACjD,KAAM,KAAK,KAAK,SAAS,gBAAgB,EACzC,OAAQ,KAAK,KAAK,SAAS,kBAAkB,CACjD,CACJ,EACA,aAAc,CACV,KAAM,GAAG,UAAU,8BACnB,KAAM,GAAG,UAAU,8BACnB,MAAO,QACP,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kDAAmD,CAC/C,KAAM,GAAG,UAAU,mEACnB,KAAM,GAAG,UAAU,mEACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,8BAA+B,CAC3B,KAAM,GAAG,UAAU,+CACnB,KAAM,GAAG,UAAU,+CACnB,MAAO,QACP,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,8CAA8C,EACpF,cAAe,KAAK,KAAK,SACrB,GAAG,UAAU,uDACjB,EACA,WAAY,KAAK,KAAK,SAAS,GAAG,UAAU,oDAAoD,CACpG,EACA,QAAS,OACT,SAAW,KAAQ,CACqB,0BAAA,GACxC,CACJ,EACA,sCAAuC,CACnC,KAAM,GAAG,UAAU,wCACnB,KAAM,GAAG,UAAU,wCACnB,MAAO,QACP,QAAS,GACT,KAAM,MACV,EACA,+BAAgC,CAC5B,KAAM,GAAG,UAAU,gDACnB,KAAM,GAAG,UAAU,gDACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,wCAAyC,CACrC,KAAM,GAAG,UAAU,yDACnB,KAAM,GAAG,UAAU,yDACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,mBAAoB,CAChB,KAAM,GAAG,UAAU,oCACnB,KAAM,GAAG,UAAU,oCACnB,MAAO,QACP,KAAM,OACN,QAAS,EACb,EACA,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,KAAM,OACN,QAAS,sBACb,EACA,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,wBAAyB,CACrB,KAAM,GAAG,UAAU,yCACnB,KAAM,GAAG,UAAU,yCACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,QAAS,GACT,KAAM,MACV,EACA,yBAA0B,CACtB,KAAM,GAAG,UAAU,0CACnB,KAAM,GAAG,UAAU,0CACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,8BAA+B,CAC3B,KAAM,GAAG,UAAU,+CACnB,KAAM,GAAG,UAAU,+CACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,2BAA4B,CACxB,KAAM,GAAG,UAAU,4CACnB,KAAM,GAAG,UAAU,4CACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,EACA,sBAAuB,CACnB,KAAM,GAAG,UAAU,uCACnB,KAAM,GAAG,UAAU,uCACnB,MAAO,QACP,QAAS,GACT,KAAM,MACV,EACA,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,QAAS,MACT,KAAM,OACN,SAAU,MAAO,QAAW,CACnB,SAED,MAAM,IAAI,QAAS,SAAY,WAAW,QAAS,GAAG,CAAC,EACvD,KAAK,SAAS,IAAI,WAAY,sBAAuB,KAAK,EAElE,CACJ,EACA,wBAAyB,CACrB,KAAM,GAAG,UAAU,yCACnB,KAAM,GAAG,UAAU,yCACnB,MAAO,QACP,KAAM,OACN,QAAS,CACL,OAAQ,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAClF,SAAU,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EACtF,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,uCAAuC,EAC5E,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACpF,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,CAClF,EACA,QAAS,UACT,SAAW,KAAQ,CACc,mBAAA,GACjC,CACJ,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,QAAS,GACT,KAAM,OACV,CAAA,CAER,CAEA,OAAgB,kBAAyB,CACrC,MAAM,iBAAiB,EACvB,mBAAqB,OAAO,KAAK,SAAS,IAAI,WAAY,yBAAyB,CAAC,EACpF,0BAA4B,OAAO,KAAK,SAAS,IAAI,WAAY,+BAA+B,CAAC,CACrG,CACJ,CClOO,MAAM,mCAAmC,yBAA0B,OAAA,2CJH1E,MIG0E,CAAAA,QAAA,KAAA,4BAAA,CAAA,CACtE,OAAgB,UAAY,oBAE5B,WAA2B,UAAgD,CAChE,MAAA,CACH,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACvE,SAAU,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EACnF,aAAc,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,CAC/F,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,sCAAuC,CACnC,KAAM,GAAG,UAAU,uDACnB,KAAM,GAAG,UAAU,uDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kBAAmB,CACf,KAAM,GAAG,UAAU,mCACnB,KAAM,GAAG,UAAU,mCACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,gCAAgC,EACpE,SAAU,KAAK,KAAK,SAAS,GAAG,UAAU,sCAAsC,EAChF,WAAY,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,CACxF,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,OACT,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,EAC3E,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,oCAAoC,EACzE,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACvE,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,CACrF,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,2BAA4B,CACxB,KAAM,GAAG,UAAU,4CACnB,KAAM,GAAG,UAAU,4CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,iBAAkB,CACd,KAAM,GAAG,UAAU,kCACnB,KAAM,GAAG,UAAU,kCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,iCAAkC,CAC9B,KAAM,GAAG,UAAU,kDACnB,KAAM,GAAG,UAAU,kDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kCAAmC,CAC/B,KAAM,GAAG,UAAU,mDACnB,KAAM,GAAG,UAAU,mDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,sCAAuC,CACnC,KAAM,GAAG,UAAU,uDACnB,KAAM,GAAG,UAAU,uDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,6BAA8B,CAC1B,KAAM,GAAG,UAAU,8CACnB,KAAM,GAAG,UAAU,8CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,CAAA,CAER,CACJ,CCrIO,MAAM,yCAAyC,yBAA0B,OAAA,iDLHhF,MKGgF,CAAAA,QAAA,KAAA,kCAAA,CAAA,CAC5E,OAAgB,UAAY,0BAE5B,WAA2B,UAAgD,CAChE,MAAA,CACH,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,OAAQ,GACR,QAAS,eACT,KAAM,OACN,QAAS,CACL,aAAc,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EAC1F,YAAa,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACxF,0BAA2B,KAAK,KAAK,SACjC,GAAG,UAAU,yDACjB,CACJ,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,OAAQ,GACR,QAAS,OACT,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,oCAAoC,EAC1E,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACxE,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,kCAAkC,EACtE,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,uCAAuC,CACpF,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,OACT,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,EAC3E,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,oCAAoC,EACzE,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACvE,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,CACrF,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,6BAA8B,CAC1B,KAAM,GAAG,UAAU,8CACnB,KAAM,GAAG,UAAU,8CACnB,MAAO,QACP,OAAQ,GACR,QAAS,OACT,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EACnF,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EACjF,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EAC/E,QAAS,KAAK,KAAK,SAAS,GAAG,UAAU,gDAAgD,CAC7F,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kBAAmB,CACf,KAAM,GAAG,UAAU,mCACnB,KAAM,GAAG,UAAU,mCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,yCAA0C,CACtC,KAAM,GAAG,UAAU,0DACnB,KAAM,GAAG,UAAU,0DACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,4BAA6B,CACzB,KAAM,GAAG,UAAU,6CACnB,KAAM,GAAG,UAAU,6CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,sBAAuB,CACnB,KAAM,GAAG,UAAU,uCACnB,KAAM,GAAG,UAAU,uCACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,oCAAoC,EACxE,OAAQ,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EAChF,gBAAiB,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EAClG,oBAAqB,KAAK,KAAK,SAC3B,GAAG,UAAU,qDACjB,EACA,6BAA8B,KAAK,KAAK,SACpC,GAAG,UAAU,8DACjB,CACJ,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACvE,YAAa,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EACzF,yBAA0B,KAAK,KAAK,SAChC,GAAG,UAAU,yDACjB,CACJ,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,4CAA6C,CACzC,KAAM,GAAG,UAAU,6DACnB,KAAM,GAAG,UAAU,6DACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,0DAA0D,EAC9F,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,2DAA2D,EAChG,iBAAkB,KAAK,KAAK,SACxB,GAAG,UAAU,wEACjB,CACJ,CACJ,EACA,4CAA6C,CACzC,KAAM,GAAG,UAAU,6DACnB,KAAM,GAAG,UAAU,6DACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,0DAA0D,EAC9F,IAAK,KAAK,KAAK,SAAS,GAAG,UAAU,2DAA2D,EAChG,iBAAkB,KAAK,KAAK,SACxB,GAAG,UAAU,wEACjB,CACJ,CACJ,EACA,8BAA+B,CAC3B,KAAM,GAAG,UAAU,+CACnB,KAAM,GAAG,UAAU,+CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,OAAQ,GACR,QAAS,KACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EACrF,OAAQ,KAAK,KAAK,SAAS,GAAG,UAAU,0DAA0D,EAClG,oBAAqB,KAAK,KAAK,SAC3B,GAAG,UAAU,uEACjB,CACJ,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,mCAAoC,CAChC,KAAM,GAAG,UAAU,oDACnB,KAAM,GAAG,UAAU,oDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,CAAA,CAER,CAEA,OAAyB,SAAW,CAChC,sBAAuB,CACnB,KAAM,SACN,MAAO,KACP,KAAM,CACF,uBACA,8CACA,8CACA,+BACJ,CACJ,CAAA,CAER,CCtOO,MAAM,0CAA0C,yBAA0B,OAAA,kDNHjF,MMGiF,CAAAA,QAAA,KAAA,mCAAA,CAAA,CAC7E,OAAgB,UAAY,2BAE5B,WAAoB,gBAAiB,CAC1B,OAAA,QAAA,MAAG,YAAY,MAAM,eAAgB,CACxC,OAAQ,aAAA,CACX,CACL,CAEA,WAA2B,UAAgD,CAChE,MAAA,CAEH,wBAAyB,CACrB,KAAM,GAAG,UAAU,yCACnB,KAAM,GAAG,UAAU,yCACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,6BAA8B,CAC1B,KAAM,GAAG,UAAU,8CACnB,KAAM,GAAG,UAAU,8CACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,sCAAuC,CACnC,KAAM,GAAG,UAAU,uDACnB,KAAM,GAAG,UAAU,uDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,OACN,QAAS,CACL,GAAI,KAAK,KAAK,SAAS,GAAG,UAAU,oDAAoD,EACxF,SAAU,KAAK,KAAK,SAChB,GAAG,UAAU,0DACjB,EACA,UAAW,KAAK,KAAK,SACjB,GAAG,UAAU,2DACjB,EACA,aAAc,KAAK,KAAK,SACpB,GAAG,UAAU,8DACjB,CACJ,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,wCAAyC,CACrC,KAAM,GAAG,UAAU,yDACnB,KAAM,GAAG,UAAU,yDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,OACV,EACA,sBAAuB,CACnB,KAAM,GAAG,UAAU,uCACnB,KAAM,GAAG,UAAU,uCACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kCAAmC,CAC/B,KAAM,GAAG,UAAU,mDACnB,KAAM,GAAG,UAAU,mDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,uBAAwB,CACpB,KAAM,GAAG,UAAU,wCACnB,KAAM,GAAG,UAAU,wCACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,wBAAyB,CACrB,KAAM,GAAG,UAAU,yCACnB,KAAM,GAAG,UAAU,yCACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,oCAAqC,CACjC,KAAM,GAAG,UAAU,qDACnB,KAAM,GAAG,UAAU,qDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,CAAA,CAER,CACJ,CClHO,MAAM,kCAAkC,yBAA0B,OAAA,0CPHzE,MOGyE,CAAAA,QAAA,KAAA,2BAAA,CAAA,CACrE,OAAgB,UAAY,mBAE5B,WAA2B,UAAgD,CAChE,MAAA,CACH,UAAW,CACP,KAAM,GAAG,UAAU,2BACnB,KAAM,GAAG,UAAU,2BACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,UAAW,CACP,KAAM,GAAG,UAAU,2BACnB,KAAM,GAAG,UAAU,2BACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,iBAAkB,CACd,KAAM,GAAG,UAAU,kCACnB,KAAM,GAAG,UAAU,kCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kCAAmC,CAC/B,KAAM,GAAG,UAAU,mDACnB,KAAM,GAAG,UAAU,mDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,oDAAqD,CACjD,KAAM,GAAG,UAAU,qEACnB,KAAM,GAAG,UAAU,qEACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,yBAA0B,CACtB,KAAM,GAAG,UAAU,0CACnB,KAAM,GAAG,UAAU,0CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,0BAA2B,CACvB,KAAM,GAAG,UAAU,2CACnB,KAAM,GAAG,UAAU,2CACnB,MAAO,QACP,OAAQ,GACR,QAAS,OACT,KAAM,OACN,QAAS,CACL,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,UAAW,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EAC1F,gBAAiB,KAAK,KAAK,SACvB,GAAG,UAAU,qDACjB,EACA,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,CACpF,EACA,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,kCAAmC,CAC/B,KAAM,GAAG,UAAU,mDACnB,KAAM,GAAG,UAAU,mDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,0CAA2C,CACvC,KAAM,GAAG,UAAU,2DACnB,KAAM,GAAG,UAAU,2DACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,4CAA6C,CACzC,KAAM,GAAG,UAAU,6DACnB,KAAM,GAAG,UAAU,6DACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,eAAgB,CACZ,KAAM,GAAG,UAAU,gCACnB,KAAM,GAAG,UAAU,gCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,oBAAqB,CACjB,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,MAAO,QACP,OAAQ,GACR,QAAS,EACT,KAAM,OACN,SAAU,IAAM,YAAY,EAC5B,eAAgB,EACpB,EACA,4BAA6B,CACzB,KAAM,GAAG,UAAU,6CACnB,KAAM,GAAG,UAAU,6CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAChC,EACA,wBAAyB,CACrB,KAAM,GAAG,UAAU,yCACnB,KAAM,GAAG,UAAU,yCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAChC,EACA,2BAA4B,CACxB,KAAM,GAAG,UAAU,4CACnB,KAAM,GAAG,UAAU,4CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAChC,EACA,yBAA0B,CACtB,KAAM,GAAG,UAAU,0CACnB,KAAM,GAAG,UAAU,0CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAChC,CAAA,CAER,CAEA,OAAyB,SAAW,CAChC,iBAAkB,CACd,KAAM,CACF,oCACA,sDACA,sDACA,2BACA,2BACJ,CACJ,EACA,kCAAmC,CAC/B,KAAM,CAAC,4CAA6C,6CAA6C,CACrG,CAAA,CAER,CC1LO,MAAM,oCAAoC,yBAA0B,OAAA,4CRH3E,MQG2E,CAAAA,QAAA,KAAA,6BAAA,CAAA,CACvE,OAAgB,UAAY,qBAE5B,WAAoB,gBAAiB,CAC1B,OAAA,QAAA,MAAG,YAAY,MAAM,eAAgB,CACxC,OAAQ,aAAA,CACX,CACL,CAEA,WAA2B,UAAgD,CAChE,MAAA,CACH,qBAAsB,CAClB,KAAM,GAAG,UAAU,sCACnB,KAAM,GAAG,UAAU,sCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACV,EACA,iCAAkC,CAC9B,KAAM,GAAG,UAAU,kDACnB,KAAM,GAAG,UAAU,kDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACV,EACA,2BAA4B,CACxB,KAAM,GAAG,UAAU,4CACnB,KAAM,GAAG,UAAU,4CACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACV,EACA,aAAc,CACV,KAAM,GAAG,UAAU,8BACnB,KAAM,GAAG,UAAU,8BACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,MACV,CAAA,CAER,CACJ,CCrCO,SAAS,2BAA4B,CAChC,QAAA,GAAG,UAAU,qBAAqB,EAE1C,+BAA+B,8BAA8B,kBAAkB,EAC/E,2BAA2B,8BAA8B,aAAa,EACtE,0BAA0B,8BAA8B,cAAc,EACtE,iCAAiC,8BAA8B,cAAc,EAC3C,kCAAA,8BAA8B,eAAgB,EAAK,EACrF,4BAA4B,8BAA8B,cAAc,EAEnE,KAAA,SAAS,SAAS,WAAY,kCAAmC,CAClE,KAAM,GAAG,UAAU,iDACnB,KAAM,GAAG,UAAU,iDACnB,MAAO,SACP,OAAQ,GACR,QAAS,aACT,KAAM,OACN,QAAS,CACL,WAAY,KAAK,KAAK,SAAS,GAAG,UAAU,sDAAsD,EAClG,iBAAkB,KAAK,KAAK,SACxB,GAAG,UAAU,4DACjB,EACA,oBAAqB,KAAK,KAAK,SAC3B,GAAG,UAAU,+DACjB,CACJ,EACA,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,0CAA2C,CAC1E,KAAM,GAAG,UAAU,yDACnB,KAAM,GAAG,UAAU,yDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,wCAAyC,CACxE,KAAM,GAAG,UAAU,uDACnB,KAAM,GAAG,UAAU,uDACnB,MAAO,SACP,OAAQ,GACR,QAAS,aACT,KAAM,OACN,QAAS,CACL,WAAY,KAAK,KAAK,SAAS,GAAG,UAAU,4DAA4D,EACxG,iBAAkB,KAAK,KAAK,SACxB,GAAG,UAAU,kEACjB,EACA,oBAAqB,KAAK,KAAK,SAC3B,GAAG,UAAU,qEACjB,CACJ,EACA,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,wCAAyC,CACxE,KAAM,GAAG,UAAU,uDACnB,KAAM,GAAG,UAAU,uDACnB,MAAO,SACP,OAAQ,GACR,QAAS,aACT,KAAM,OACN,QAAS,CACL,WAAY,KAAK,KAAK,SAAS,GAAG,UAAU,4DAA4D,EACxG,iBAAkB,KAAK,KAAK,SACxB,GAAG,UAAU,kEACjB,EACA,oBAAqB,KAAK,KAAK,SAC3B,GAAG,UAAU,qEACjB,CACJ,EACA,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,wBAAyB,CACxD,KAAM,GAAG,UAAU,uCACnB,KAAM,GAAG,UAAU,uCACnB,MAAO,SACP,OAAQ,GACR,QAAS,mBACT,KAAM,OACN,QAAS,CACL,aAAc,KAAK,KAAK,SAAS,GAAG,UAAU,8CAA8C,EAC5F,YAAa,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EAC1F,YAAa,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EAC1F,eAAgB,KAAK,KAAK,SAAS,GAAG,UAAU,gDAAgD,CACpG,EACA,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,gCAAiC,CAChE,KAAM,GAAG,UAAU,wDACnB,KAAM,GAAG,UAAU,wDACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OAAA,CACT,EAEI,KAAA,SAAS,SAAS,WAAY,kBAAmB,CAClD,KAAM,GAAG,UAAU,iDACnB,KAAM,GAAG,UAAU,iDACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,aAAc,CAC7C,KAAM,GAAG,UAAU,4CACnB,KAAM,GAAG,UAAU,4CACnB,MAAO,SACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,mBAAoB,CACnD,KAAM,GAAG,UAAU,kCACnB,KAAM,GAAG,UAAU,kCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACN,WAAY,QACZ,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,kBAAmB,CAClD,KAAM,GAAG,UAAU,iCACnB,KAAM,GAAG,UAAU,iCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACN,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,wBAAyB,CACxD,KAAM,GAAG,UAAU,uCACnB,KAAM,GAAG,UAAU,uCACnB,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,QACN,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,WAAY,CAC3C,KAAM,GAAG,UAAU,0BACnB,KAAM,GAAG,UAAU,0BACnB,MAAO,SACP,OAAQ,GACR,QAAS,EACT,KAAM,OACN,QAAS,CACL,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,0BAA0B,EAC7D,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,0BAA0B,EAC7D,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,yBAAyB,EAC5D,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,yBAAyB,EAC5D,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,0BAA0B,EAC7D,EAAG,KAAK,KAAK,SAAS,GAAG,UAAU,wBAAwB,CAC/D,EACA,SAAU,IAAM,YAAY,CAAA,CAC/B,EAEI,KAAA,SAAS,SAAS,WAAY,mBAAoB,CACnD,KAAM,GAAG,UAAU,kCACnB,KAAM,GAAG,UAAU,kCACnB,MAAO,QACP,OAAQ,GACR,QAAS,SACT,KAAM,OACN,SAAU,IAAM,YAAY,CAAA,CAC/B,CACL,CApLgB,8DAAAA,QAAA,0BAAA,2BAAA,ECXT,MAAM,mBAA+B,CACxC,aACA,SACA,SACA,QACA,YACA,YACA,SACA,QACA,YACA,WACA,MACA,QACA,SACA,QACA,WACA,UACA,WACA,OACA,aACA,QACA,WACA,SACA,OACA,QACJ,EAEa,WAAuB,CAAC,QAAS,MAAM,ECtBpD,IAAI,OAQJ,eAAe,gBAAgB,WAAqC,CAChE,MAAM,WAAa,OAAO,KAAK,SAAS,IAAI,WAAY,UAAU,CAAC,EAGnE,GAAI,aAAe,MAAQ,aAAe,QAAU,aAAe,GAAI,CAC7D,MAAA,MAAQ,MAAM,QAAQ,KAAM,GAAM,EAAE,OAAS,UAAU,EAC7D,GAAK,MAaE,CACH,MAAM,KAAO,MAAM,OAAO,KAAK,CAAE,YAAa,GAAO,EACrD,GAAI,MAAQ,MAAM,QAAQ,CAAC,EACvB,OAAO,MAAM,QAAQ,CAAC,EAAE,YAAY,CAE5C,KAlBY,CACR,MAAM,KAAO,KAAK,MAAM,IAAI,wCAAwC,EACpE,GAAI,KAAM,CAEA,MAAA,IADQ,MAAM,KAAK,YACR,KAAM,GAAM,EAAE,KAAK,SAAiB,UAAU,CAAC,GAAG,IACnE,GAAI,GAAI,CAEJ,MAAM,KAAO,MADI,MAAM,MAAM,YAAY,EAAE,GACF,KAAK,CAAE,YAAa,GAAO,EACpE,GAAI,MAAQ,MAAM,QAAQ,CAAC,EACvB,OAAO,MAAM,QAAQ,CAAC,EAAE,YAAY,CAE5C,CACJ,CAAA,CAOW,OAAA,UACnB,CACO,MAAA,EACX,CA5Be,0CAAAA,QAAA,gBAAA,iBAAA,EA8Bf,SAAS,YAAa,CACT,OAAA,CACL,SAAU,OAAO,KAAK,OAAO,KAAK,YAAY,EAC9C,MAAO,OAAO,KAAK,OAAO,KAAK,UAAU,EACzC,mBACA,qBAAsB,OAAO,KAAK,OAAO,KAAK,cAAc,EAC5D,UAAA,CAER,CARS,gCAAAA,QAAA,WAAA,YAAA,EAUT,SAAS,gBAAgB,WAAsB,OAAgB,QAA2B,CACtF,GAAI,KAAK,SAAS,IAAI,WAAY,uBAAuB,EAAG,CACxD,MAAM,UACF,OAAO,KAAK,SAAS,IAAI,WAAY,uBAAuB,CAAC,EAAE,kBAAoB,EAAA,MAAM,GAAG,GAAK,KACjG,YACa,WAAA,WAAW,OAAQ,OACrB,CAAC,UAAU,IAAKI,QAAkBA,OAAM,MAAM,EAAE,SAAS,KAAK,CACxE,EAET,CAEA,IAAI,KAAiB,CAAA,EACjB,KAAK,SAAS,IAAI,WAAY,qBAAqB,IAC5C,KAAA,WAAW,OAAQ,OAAkB,OAAO,MAAM,SAAS,KAAK,CAAC,GAG5E,IAAI,UAAsB,CAAA,EACtB,KAAK,SAAS,IAAI,WAAY,0BAA0B,IAC5C,UAAA,WAAW,OAAQ,OAAkB,OAAO,WAAW,SAAS,KAAK,CAAC,GAGtF,IAAI,SAAqB,CAAA,EACzB,GAAI,KAAK,SAAS,IAAI,WAAY,yBAAyB,EAAG,CAC/C,SAAA,WAAW,OAAQ,OAAkB,OAAO,SAAS,SAAS,KAAK,CAAC,EAC/E,MAAM,YAAsB,OACxB,KAAK,SAAS,IAAI,WAAY,oCAAoC,GACpE,kBAAkB,EAChB,cAAgB,KAChB,SAAW,SAAS,IAAK,OAAmB,QAAU,SAAW,YAAc,KAAM,EAE7F,CAEA,IAAI,iBAA6B,CAAA,EAC7B,KAAK,SAAS,IAAI,WAAY,oCAAoC,IAC/C,iBAAA,WAAW,OAAQ,OAAkB,OAAO,mBAAmB,SAAS,KAAK,CAAC,GAGrG,IAAI,mBAA+B,CAAA,EAC/B,KAAK,SAAS,IAAI,WAAY,+BAA+B,IACxC,mBAAA,WAAW,OAAQ,OAAkB,OAAO,qBAAqB,SAAS,KAAK,CAAC,GAGzG,IAAI,OAAmB,CAAA,EACvB,OAAI,KAAK,SAAS,IAAI,WAAY,4BAA4B,IACjD,OAAA,WACJ,OAAQ,OAAkB,CAAC,OAAO,WAAW,SAAS,KAAK,CAAC,EAC5D,OAAQ,OAAkB,CAAC,OAAO,MAAM,SAAS,KAAK,CAAC,EACvD,OAAQ,OAAkB,CAAC,OAAO,SAAS,SAAS,KAAK,CAAC,EAC1D,OAAQ,OAAkB,CAAC,OAAO,mBAAmB,SAAS,KAAK,CAAC,EACpE,OAAQ,OAAkB,CAAC,OAAO,qBAAqB,SAAS,KAAK,CAAC,GAIxE,MAAM,KACT,IAAI,IACA,CAAC,MAAM,EACF,OAAO,IAAI,EACX,OAAO,SAAS,EAChB,OAAO,QAAQ,EACf,OAAO,MAAM,EACb,OAAO,gBAAgB,EACvB,OAAO,kBAAkB,EACzB,OAAO,CAAC,OAAO,CAAC,GACvB,OAAO,CAAA,CAEjB,CAjES,0CAAAJ,QAAA,gBAAA,iBAAA,EAyET,eAAsB,+BAA+B,QAAiB,CAElE,MAAM,MAA6B,KAAK,QAAQ,SAAS,QAAQ,IAAI,OAAO,EAC5E,GAAI,MACA,OAAO,uBAAuB,KAAK,CAE3C,CANsB,wEAAAA,QAAA,+BAAA,gCAAA,EAQtB,eAAsB,uBAAuB,MAAsC,CAC3E,IAAA,OACE,MAAA,OAAS,OAAO,OAAO,QAAQ,OAKrC,GAJK,qBAID,OAAQ,CACJ,IAAA,WAAuB,OAAO,MAClC,GAAI,WAAY,CACZ,MAAM,cAAqB,OAAO,OAC9B,gBACa,WAAA,WAAW,OAAO,aAAa,GAG1C,MAAA,KAAO,QAAQ,MAAM,MACvB,MACA,WAAW,KAAK,IAAI,EAGxB,MAAM,MAAa,MAAM,MACrB,MAAM,QAAQ,YAAY,YAC1B,WAAW,KAAK,MAAM,QAAQ,YAAY,UAAU,EAGxD,MAAM,OAAU,MAAM,gBAAgB,oBAAoB,GAAM,GAC1D,QAAW,MAAM,gBAAgB,qBAAqB,GAAM,GACrD,WAAA,gBAAgB,WAAY,OAAQ,OAAO,EAE/C,OAAA,WACJ,IAAK,OAAkB,MAAM,KAAK,CAAC,EACnC,OAAO,CAAC,MAAe,QACb,WAAW,QAAQ,KAAK,IAAM,KACxC,EACA,OAAQ,OAAU,MAAM,OAAO,OAAS,CAAC,EACzC,IAAK,OACK,OAAO,OAAO,CAAC,EAAE,oBAAsB,OAAO,MAAM,CAAC,CAC/D,EACA,IAAK,OAAkB,CACd,MAAA,eAAiB,MAAM,oBAC7B,GAAI,OAAO,WAAW,SAAS,cAAc,EACzC,OAAQ,eAAgB,CACpB,KAAK,OAAO,WAAW,CAAC,EACb,OAAA,KAAK,KAAK,SAAS,gCAAgC,EAC9D,KAAK,OAAO,WAAW,CAAC,EACb,OAAA,KAAK,KAAK,SAAS,+BAA+B,CACjE,SACO,OAAO,MAAM,SAAS,cAAc,EAC3C,OAAO,KAAK,KAAK,SAAS,OAAO,KAAK,WAAW,cAAc,CAAC,EAGpE,MAAM,aAAoB,KAAK,KAAK,aAAa,MAAQ,CAAA,EACjD,OAAA,QAAU,QAAU,QAAU,QAAU,aAAa,QAAQ,KAAK,EAAE,EAAI,QAAU,KAAA,CAC7F,EACA,KAAK,GAAG,CACjB,CAAA,MAGA,OAAiB,KAAK,SAAS,IAAI,WAAY,qBAAqB,EAEjE,OAAA,MACX,CA7DsB,wDAAAA,QAAA,uBAAA,wBAAA,EC7HtB,SAAS,yBAAyB,MAAsC,CAEhE,OAAA,KAAK,SAAS,IAAI,WAAY,yCAAyC,GACrD,OAAO,OAAO,QAAS,QAAQ,SAAW,QAEpE,CALS,4DAAAA,QAAA,yBAAA,0BAAA,EAOT,SAAS,kBAAkB,MAAsC,CAC7D,OAAQ,0BAA2B,CAC/B,IAAK,gBACL,IAAK,aACD,OAAO,MAAM,KAAK,MAAM,GAAG,EAAE,UAAY,MAAM,OAAO,eAAe,KAAK,MAAM,GAAG,GAAK,CAAC,EAAE,GAAG,OAClG,QACW,MAAA,EACf,CACJ,CARS,8CAAAA,QAAA,kBAAA,mBAAA,EAUT,eAAe,uBAAyC,CACpD,MAAM,WAAa,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,EAGhG,GAAI,aAAe,MAAQ,aAAe,QAAU,aAAe,GAAI,CAC7D,MAAA,MAAQ,MAAM,QAAQ,KAAM,GAAM,EAAE,OAAS,UAAU,EAC7D,GAAI,CAAC,MAAO,CACR,MAAM,KAAO,KAAK,MAAM,IAAI,wCAAwC,EACpE,GAAI,KAAM,CAEA,MAAA,IADQ,MAAM,KAAK,YACR,KAAM,GAAM,EAAE,KAAK,SAAiB,UAAU,CAAC,GAAG,IACnE,GAAI,GAAI,CAEJ,MAAMK,MAAO,MADI,MAAM,MAAM,YAAY,EAAE,GACF,KAAK,CAAE,YAAa,GAAO,EACpE,OAAIA,OAAQA,OAAM,QAAQ,CAAC,EAChBA,OAAM,QAAQ,CAAC,EAAE,YAAY,EAErB,UAEvB,CACJ,CACJ,CACA,MAAM,KAAO,MAAM,OAAO,KAAK,CAAE,YAAa,GAAO,EACrD,OAAI,MAAQ,MAAM,QAAQ,CAAC,EAChB,MAAM,QAAQ,CAAC,EAAE,YAAY,EAErB,UAEvB,CAES,gBAAA,iBAAiB,UAAU,oCAAoC,EAEjE,EACX,CAjCe,sDAAAL,QAAA,sBAAA,uBAAA,EAmCO,eAAA,eAClB,MACA,YACe,CACf,IAAI,UAAY,GACZ,GAAA,OAAS,MAAM,MAAO,CACtB,UAAY,MAAM,KAClB,MAAM,KAAO,KAAK,SAAS,IAAI,WAAY,gCAAgC,EAC3E,GAAI,YACA,GAAI,MAAQ,CAAC,yBAAyB,KAAK,EACvC,OAAQ,0BAA2B,CAC/B,IAAK,gBACD,UAAY,GAAG,MAAM,MAAM,eAAe,IAAI,IAAI,UAAU,MAAM,MAAM,IAAI,CAAC,GAAK,EAAE,GAAG,OACvF,MACJ,IAAK,aACD,UAAY,IAAI,UAAU,MAAM,sBAAsB,GAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAC/D,MAAM,MAAM,eAAe,IAC/B,GAAG,OACH,MACJ,QACgB,UAAA,MAAM,MAAM,eAAe,IAC/C,MAEY,UAAA,MAAM,MAAM,eAAe,SAExC,CACH,OAAQ,KAAK,SAAS,IAAI,WAAY,4BAA4B,EAAG,CACjE,QACgB,UAAA,MAAM,uBAAuB,KAAK,CACtD,CAEA,GAAI,kBAAkB,KAAK,GAAK,MAAQ,CAAC,yBAAyB,KAAK,EACnE,OAAQ,0BAA2B,CAC/B,IAAK,gBACD,UAAY,GAAG,SAAS,IAAI,MAAM,KAAK,MAAM,MAAM,IAAI,CAAC,GAAK,EAAE,GAAG,KAAK,EACvE,MACJ,IAAK,aACD,UAAY,IAAI,MAAM,KAAK,MAAM,sBAAsB,GAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,SAAS,GAAG,OACpF,MACJ,QACgB,UAAA,MAAM,MAAM,eAAe,IAC/C,SAEI,CAAC,yBAAyB,KAAK,EAAG,CAClC,IAAI,OAAS,EAEb,OAAQ,0BAA2B,CAC/B,IAAK,gBACD,OAAS,KAAK,MAAM,KAAK,SAAW,GAAG,EAAI,EAGvC,QAAQ,OAAO,QAAQ,KAAM,GAAM,EAAE,KAAK,SAAS,IAAI,MAAM,EAAE,CAAC,IAChE,OAAS,KAAK,MAAM,KAAK,SAAW,GAAG,EAAI,GAE/C,WAAa,IAAI,MAAM,GACvB,MACJ,IAAK,aACD,UAAY,GAAG,MAAM,sBAAuB,CAAA,IAAI,SAAS,GAAG,OAC5D,KACR,CACJ,CAER,CACJ,CAGO,OAAA,YAAc,GAAK,OAAO,KAAK,SAAS,IAAI,WAAY,qBAAqB,CAAC,EAAI,SAC7F,CAnEsB,wCAAAA,QAAA,eAAA,gBAAA,EAqEtB,SAAS,6BAA8B,CACnC,OAAQ,mBAAoB,CACxB,IAAK,MACD,OAAO,MAAM,UAAU,iBAAiB,gBAAgB,cAAc,GAAG,EAC7E,IAAK,UACD,OAAO,MAAM,UAAU,iBAAiB,gBAAgB,cAAc,OAAO,EACjF,IAAK,OACM,OAAA,MAAM,UAAU,SAAS,IAAI,UAAU,GAAK,MAAM,UAAU,SAAS,IAAI,WAAW,EAC/F,QACW,MAAA,EACf,CACJ,CAXS,kEAAAA,QAAA,4BAAA,6BAAA,EAaT,eAAsB,yBAAyB,MAAY,CACvD,MAAM,IAAM,OAAO,KAAK,SAAS,IAAI,WAAY,yBAAyB,CAAC,EAEvE,KAAK,MAAM,MACX,OACA,CAAC,OAAO,OAAO,gBACf,MAAQ,aACP,MAAQ,UAAY,iCACpB,CAAC,KAAK,UAAU,SAAS,IAAI,GAAG,GAAK,KAAK,UAAU,SAAS,IAAI,QAAQ,IAEpE,MAAA,gBAAgB,MAAO,EAAK,CAE1C,CAZsB,4DAAAA,QAAA,yBAAA,0BAAA,EAcf,SAAS,iBAAiB,MAAsD,CACnF,MAAM,UAAY,OAAO,KACnB,mBAAqB,OAAO,OAAO,eAAe,MAAQ,GAGhE,OAAQ,WAAW,QAAQ,kBAAkB,GAAK,IAAM,CAC5D,CANgB,4CAAAA,QAAA,iBAAA,kBAAA,EAeM,eAAA,yBAAyB,QAAiB,OAAiB,CAE7E,MAAM,MAA6B,KAAK,QAAQ,SAAS,QAAQ,IAAI,OAAO,EAC5E,GAAI,MACO,OAAA,gBAAgB,MAAO,MAAM,CAE5C,CANsB,4DAAAA,QAAA,yBAAA,0BAAA,EAQA,eAAA,gBAAgB,MAAkB,OAAiB,CACjE,GAAA,CAAC,OAAO,MACR,OAIJ,MAAM,QAAU,CACZ,CACI,IAAa,MAAM,GACnB,KAAM,MAAM,eAAe,MAAO,MAAM,CAC5C,CAAA,EAGE,MAA0B,QAAQ,MAClC,WAAa,KAAK,SAAS,IAAI,WAAY,mDAAmD,EACpG,GAAI,KAAK,MAAM,MAAQ,iBAAiB,KAAK,GAAK,WACnC,UAAA,cAAc,OAAO,QAC1B,OAAQ,GAAM,EAAE,OAAO,KAAO,OAAO,OAAO,EAAE,GAC9C,OAAQ,GAAM,iBAAiB,CAAC,CAAC,GAAK,GACxC,QAAQ,KAAK,CACT,IAAa,WAAW,GACxB,KAAM,MAAM,eAAe,WAAY,MAAM,CAAA,CAChD,EAIT,OAAO,wBAAwB,QAAS,QAAS,CAAE,CAAA,EAAE,KAAK,IAAM,CACxD,KAAK,QACD,IAAA,QAAS,SAAY,WAAW,QAAS,EAAE,CAAC,EAAE,KAAK,IAAM,CACtD,GAAA,QAAQ,OAAO,EAAI,EACtB,GAAG,OAAO,QACL,OAAQ,GAAM,EAAE,WAAW,OAAQ,GAAM,EAAE,OAAO,KAAO,MAAM,OAAO,EAAE,EAAE,OAAS,CAAC,EACpF,QAAS,GAAM,EAAE,aAAa,CAAA,EAAI,CAAE,OAAQ,EAAA,CAAM,CAAC,CAAA,CAC3D,CACL,CACH,CACL,CApCsB,0CAAAA,QAAA,gBAAA,iBAAA,EAsCN,SAAA,cAAc,KAAyB,KAAmB,CAClE,IAAA,MACA,GAAA,QAAU,OAAO,OAAQ,CACzB,MAAQ,OAAO,OAAO,IAAY,KAAK,GAAG,GAAK,KAE/C,MAAM,MAAQ,iBAAiB,KAAK,EAAI,YAAc,UAChD,OAAS,SAAS,cAAc,KAAK,EAC3C,OAAO,UAAY,uBAAuB,iBAAiB,KAAK,EAAI,SAAW,EAAE,GAC1E,OAAA,aAAa,cAAe,SAAS,EAEtC,MAAA,KAAO,SAAS,cAAc,GAAG,EAMvC,GALA,KAAK,UAAY,mBACjB,KAAK,MAAQ,MAEb,OAAO,YAAY,IAAI,EAEnB,WAAW,GAAK,CAAC,OAAO,OAAO,eAAgB,CACxC,OAAA,iBAAiB,QAAS,MAAO,GAAM,CAC1C,MAAM,WAAa,EAAE,cACf,OAAS,WAAW,UAAU,SAAS,QAAQ,EACjD,QAAU,MAAQ,iBAAiB,KAAK,IAAM,QACxC,MAAA,gBAAgB,MAAO,MAAM,EAE5B,WAAA,UAAU,OAAO,QAAQ,CAAA,CACvC,EAEK,MAAA,OAAS,KAAK,cAAc,cAAc,EAC5C,QACA,OAAO,YAAY,MAAM,CAEjC,CACJ,CACJ,CAhCgB,sCAAAA,QAAA,cAAA,eAAA,EAkCA,SAAA,yBAAyB,QAA0B,KAAmB,CAC5E,MAAA,QAAkB,SAAS,SAAS,MACpC,QAAU,SAAS,SAAS,MAC5B,MAAQ,KAAK,QAAQ,IAAI,OAAO,EAEhC,OADS,KAAK,QAAQ,QAAQ,QAAU,KAAK,QAAQ,SAAS,QAAU,QAAQ,OAAO,SACvE,IAAY,OAAO,EACnC,WAA6B,KAAK,cAAc,cAAc,EAC9D,SAAgC,MAAM,iBAAiB,iBAAiB,EAExE,UAAY,OAAO,MAAQ,QAAQ,QAAQ,MAC3C,kBAAoB,WAAW,QAAQ,OAAQ,EAAE,EAAE,OAErD,mBAAqB,OAAO,eAAe,MAAM,SAAW,oBACxD,YAAc,WAAW,YACd,WAAA,UAAY,WAAW,UAAU,QACxC,IAAI,OAAe,OAAO,eAAe,KAAM,IAAI,EACnD,SAAA,GAGC,SAAA,QAAS,SAAY,CACtB,QAAQ,YACR,QAAQ,UAAY,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,MAAO,SAAS,EAClF,CACH,EACD,QAAQ,QAAQ,MAAQ,UAEhC,CA1BgB,4DAAAA,QAAA,yBAAA,0BAAA,EA4BT,SAAS,YAAa,CACzB,OAAO,KAAK,MAAM,MAAQ,QAAU,OAAO,MAC/C,CAFgB,gCAAAA,QAAA,WAAA,YAAA,EChRJ,IAAA,UAAAM,YACRA,UAAA,UAAA,MAAA,CAAA,EAAA,QACAA,UAAA,UAAA,MAAA,CAAA,EAAA,QACAA,UAAA,UAAA,QAAA,CAAA,EAAA,UAHQA,YAAA,UAAA,CAAA,CAAA,EAMZ,MAAM,iBAAmB,GAAK,IAE9B,eAAe,WAAY,CACvB,MAAM,KAAK,MAAM,UAAU,WAAY,4BAA4B,EACnE,MAAM,KAAK,MAAM,UAAU,WAAY,mCAAmC,EAC1E,MAAM,KAAK,MAAM,UAAU,WAAY,0BAA0B,CACrE,CAJe,8BAAAN,QAAA,UAAA,WAAA,EAMf,eAAsB,WAAW,iBAA0B,CACvD,MAAM,WAA6B,KAAK,MAAM,QAAQ,WAAY,0BAA0B,EAI5F,GAHI,YACA,aAAa,UAAU,EAEvB,iBAAmB,EAAG,CACtB,MAAM,GAAK,iBAAmB,iBACxB,QAAU,WAAW,SAAY,CAC7B,MAAA,iBAAiB,CAAA,GACxB,EAAE,EAEC,WAAa,CACf,MAAO,CACH,qBAAsB,CAClB,iBAAkB,CACd,UAAW,KAAK,KAAK,WACrB,iBACA,OACJ,CACJ,CACJ,CAAA,EAEE,MAAA,KAAK,MAAM,OAAO,UAAU,CAC3B,MAAA,CAAC,kBAAoB,kBAAoB,IAChD,MAAM,UAAU,CAExB,CA1BsB,gCAAAA,QAAA,WAAA,YAAA,EAiCtB,eAAsB,sBAAuB,CAClC,OAAA,iBAAiB,CAAA,CAC5B,CAFsB,oDAAAA,QAAA,qBAAA,sBAAA,EAIf,SAAS,2BAA2B,iBAA0B,CAC3D,MAAA,QACF,iBAAmB,EACb,KAAK,KAAK,OAAO,GAAG,UAAU,2CAA4C,CACtE,iBACA,KAAM,IAAI,KAAK,KAAK,IAAA,EAAQ,iBAAmB,gBAAgB,EAAE,mBAAmB,GAAI,CACpF,KAAM,UACN,OAAQ,SAAA,CACX,CAAA,CACJ,EACD,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EACnF,YAAY,QAAS,CAAC,KAAK,KAAK,EAAE,CAAC,CACvC,CAZgB,gEAAAA,QAAA,2BAAA,4BAAA,EAchB,eAAsB,iBAAiB,MAAiB,CACpD,GACI,OAAO,OAAO,GAAG,OAAO,EAAE,KAAM,GAC5B,EAAE,MAAM,SAAS,GAAG,KAAK,KAAK,SAAS,GAAG,UAAU,kCAAkC,CAAC,EAAE,CAAA,EAG7F,OAGA,IAAA,iBACJ,OAAQ,MAAO,CACX,IAAK,GACD,iBAAmB,OAAO,SACtB,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAA,EAEjF,MACJ,IAAK,GACD,iBAAmB,qBAAqB,EAAI,EAC5C,MACJ,IAAK,GACD,iBAAmB,OAAO,SACtB,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAA,EAEjF,KACR,CAEM,MAAA,MAAa,GAAG,KAAK,KAAK,SAAS,GAAG,UAAU,kCAAkC,CAAC,KACrF,iBACM,iBAAmB,IAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EACjG,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,CACrF,IAEM,QAAU,MAAM,UAAU,iBAAkB,KAAK,EAEvD,IAAI,OAAwB,KACN,IAAI,OAAO,CAC7B,MACA,QACA,QAAS,CACL,MAAO,CACH,KAAM,mCACN,MAAO,GAAG,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,CAAC,GACvF,SAAU,MAAO,MAAc,CAC3B,iBAAmB,qBAAqB,IAAI,EACnC,OAAA,OACb,CACJ,EACA,QAAS,CACL,MAAO,GAAG,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,CAAC,GACpF,SAAU,MAAO,MAAS,CACtB,qBAAqB,IAAI,EACN,iBAAA,EACV,OAAA,SACb,CACJ,CACJ,EACA,QAAS,QACT,MAAO,SAAY,CACf,OAAQ,OAAQ,CACZ,IAAK,QACD,MAAM,WAAW,gBAAgB,EACjC,MACJ,IAAK,UACD,MAAM,UAAU,EAChB,KACR,CACA,2BAA2B,gBAAgB,CAE/C,CAAA,CACH,EACa,OAAO,EAAI,CAC7B,CAvEsB,4CAAAA,QAAA,iBAAA,kBAAA,EAyEtB,eAAe,UAAU,iBAA0B,MAAiB,CAKhE,IAAI,kBAAoB,GACxB,MAAM,OAAS,SAEX,IAAA,QACJ,OAAQ,MAAO,CACX,IAAK,GACS,QAAA,GACV,MACJ,IAAK,GACS,QAAA,OAAO,OAAS,EAAI,KAAK,MAAM,KAAK,OAAO,EAAI,OAAO,MAAM,EAAI,GAC1E,MACJ,IAAK,GACS,QAAA,GACV,KACR,CAEA,MAAM,aAAe;AAAA;AAAA,OAElB,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,CAAC;AAAA;AAAA,uDAE1B,KAAK,KAAK,SAC3D,GAAG,UAAU,mCAAA,CAChB;AAAA;AAAA;AAAA;AAAA;AAAA,YAKS,KAAK,KAAK,SAAS,GAAG,UAAU,oCAAoC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMrE,KAAK,KAAK,SAAS,GAAG,UAAU,gCAAgC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMjE,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAOrB,KAAK,KAAK,SAC/D,GAAG,UAAU,qCAAA,CAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAQwD,KAAK,KAAK,SAC/D,GAAG,UAAU,mCAAA,CAChB;AAAA,0BAGC,QAAS,EAAI,EAAG,EAAI,OAAO,OAAQ,IACV,mBAAA;AAAA;AAAA,iCAEI,CAAC;AAAA,iEAC+B,CAAC,YAAY,OAAO,CAAC,GAAG,EAAE,KAC7E,UAAY,EAAI,oBAAsB,EAC1C;AAAA,YACE,OAAO,CAAC,GAAG,IAAI;AAAA;AAAA,YAKjB,MAAA,WAAa,OAAO,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAC,EAC3G,iBAAmB;AAAA;AAAA;AAAA,gFAInB,UAAY,GAAK,oBAAsB,EAC3C;AAAA,QACE,KAAK,KAAK,SAAS,GAAG,UAAU,iCAAiC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAS3B,OAAO,SAC1C,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAA,CAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAM+B,KAAK,KAAK,OAAO,GAAG,UAAU,wCAAyC,CACrG,UAAA,CACH,CAAC;AAAA,6EAEE,kBAAoB,UACxB;AAAA;AAAA,4BAEsB,KAAK,KAAK,SAAS,GAAG,UAAU,sCAAsC,CAAC;AAAA;AAAA;AAAA,EAK/F,OAAO,aAAe,kBAAoB,gBAC9C,CAnHe,8BAAAA,QAAA,UAAA,WAAA,EAqHR,SAAS,qBAAqB,WAA6B,CAC9D,MAAM,UAA4B,KAAK,MAAM,QAAQ,WAAY,4BAA4B,EACvF,aAAuB,KAAK,MAAM,QAAQ,WAAY,mCAAmC,EACzF,iBAA2B,KAAK,QAClC,eACK,WACK,OAAO,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAC,EAC9F,GACV,EACA,OAAO,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,CAAC,CAAA,EAE5F,aAAe,KAAK,KAAK,YAAc,WAAa,KAAK,KAAK,YACpE,OAAO,iBAAmB,KAAK,MAAM,aAAe,gBAAgB,CACxE,CAbgB,oDAAAA,QAAA,qBAAA,sBAAA,EAoBhB,SAAS,QAAS,CACd,OACI,KAAK,QAAQ,OAAO,QACf,OAAQ,OAAU,MAAM,SAAS,WAAW,CAAC,EAC7C,OAAQ,OAAU,CAAC,MAAM,OAAO,QAAQ,MAAM,SAAS,EAAE,SAAS,QAAQ,CAAC,EAC3E,OAAQ,OAAU,CAAC,MAAM,OAAO,QAAQ,MAAM,SAAS,EAAE,SAAS,SAAS,CAAC,GAAK,EAE9F,CAPS,wBAAAA,QAAA,OAAA,QAAA,EAeT,eAAsB,gBAAgB,WAAoB,CAC3C,UAAA,SAAS,SAChB,MAAM,MAAM,OAAO,CAEf,oCAAqC,KAAK,IAAI,WAAkB,MAAO,OAAO,UAAU,WAAW,GAAG,CAAA,CACzG,CAET,CAPsB,0CAAAA,QAAA,gBAAA,iBAAA,EAgBA,eAAA,cAAc,WAAoB,QAAe,MAAO,CACtE,IAAA,OACJ,OAAQ,QAAS,CACb,IAAK,MACD,OAAS,OAAO,EAChB,MACJ,IAAK,OACD,OAAS,CAAA,EACT,MACJ,QACI,OAAS,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,EACnC,KACR,CAEA,UAAW,SAAS,OAAQ,CACxB,MAAM,OAAS,MAAM,OACf,MAAQ,KAAK,IACf,OAAO,UAAU,WAAW,MAAQ,WAC9B,MAAO,OAAO,UAAU,WAAW,GAAA,EAE7C,MAAM,MAAM,OAAO,CACf,oCAAqC,KAAA,CACxC,CACL,CACJ,CAxBsB,sCAAAA,QAAA,cAAA,eAAA,EA0BtB,SAAS,+BAA+B,QAAuB,CAC3D,cAAc,EAAG,OAAO,EAAE,KAAK,IAAM,CAC3B,MAAA,KAAO,MAAM,QAAQ,KAAM,OAAU,MAAM,KAAO,OAAO,GAAG,KAC9D,IAAA,QACA,UAAY,MACZ,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,2CAA4C,CAChF,WAAY,CAAA,CACf,EACM,OACP,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,sCAAuC,CAC3E,IAAA,CACH,GAED,UACA,YAAY,OAAO,EACf,KAAK,SAAS,IAAI,WAAY,8BAA8B,GAC5D,iBAAiB,OAAO,EAEhC,CACH,CACL,CApBS,wEAAAA,QAAA,+BAAA,gCAAA,EAsBT,SAAS,YAAY,QAAiB,QAAgC,OAAW,CACzE,KAAK,SAAS,IAAI,WAAY,kCAAkC,EACpD,YAAA,OAAO,CAAE,OAAQ,QAAS,SAAW,CAAA,CAAE,EAAE,OAElD,GAAA,eAAe,OAAO,OAAO,CAExC,CANS,kCAAAA,QAAA,YAAA,aAAA,EAQT,SAAS,qBAAqB,KAAW,CACrC,MAAM,aAAe,KAAK,KAAK,oCAAoC,EAAE,IAAI,EACnE,WAAa,SAAS,KAAK,KAAK,0BAA0B,EAAE,KAAK,EACjE,QAAU,KAAK,KAAK,kCAAkC,EAAE,IAAI,EAC5D,iBAAmB,SAAS,KAAK,KAAK,yBAAyB,EAAE,KAAK,EAE5E,OAAI,eAAiB,QACD,gBAAA,UAAU,EAAE,KAAK,IAAM,CACnC,MAAM,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,2CAA4C,CACtF,UAAA,CACH,EACD,YAAY,OAAO,EACnB,+BAA+B,OAAO,CAAA,CACzC,EACM,eAAiB,MACV,cAAA,UAAU,EAAE,KAAK,IAAM,CACjC,MAAM,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,2CAA4C,CACtF,UAAA,CACH,EAED,YAAY,OAAO,EACnB,+BAA+B,OAAO,CAAA,CACzC,EACM,eAAiB,UACxB,+BAA+B,OAAO,EAGnC,gBACX,CA5BS,oDAAAA,QAAA,qBAAA,sBAAA,ECzWT,eAAsB,2BAA2B,oBAAoC,CAGjF,MAAM,OAAS,MAAM,OACrB,GAAI,QAAU,qBAAuB,sBAAwB,QAAQ,WAAW,GAAI,CAChF,MAAM,SAAW,QAAQ,WACpB,IAAK,IAAO,CACT,WAAY,EAAE,YAAc,CAC9B,EAAA,EACD,KAAK,CAAC,EAAG,IAAM,EAAE,WAAa,EAAE,UAAU,EAC1C,KAAM,GACI,EAAE,WAAqB,QAAQ,WAAW,UACpD,GAAG,WACF,QAAkB,QAAQ,WAAW,WACrC,WAAa,CAAC,UAAY,SAAW,QAAU,QAAU,GAAc,SAAW,SAAW,GAAM,EACnG,MAAA,QAAQ,cAAsB,oBAAqB,UAAU,CACvE,CACJ,CAjBsB,gEAAAA,QAAA,2BAAA,4BAAA,EAmBf,SAAS,aAAa,MAAwB,CAC3C,MAAA,UAAY,KAAK,QAAQ,oBAC3B,MAAM,QACQ,MAAM,OAAO,GACb,QAAQ,OAAO,QAAQ,KAAM,GAAM,EAAE,OAAO,KAAO,MAAM,EAAE,GAAG,EAAA,EAE5E,kBAAkB,KAAK,GAAK,WAAa,UAAU,KAAO,KAAK,QAAQ,WAAW,IACvD,2BAAA,UAAU,EAAE,EAAE,KAAK,CAEtD,CATgB,oCAAAA,QAAA,aAAA,cAAA,ECrBT,SAAS,8BAA+B,CACnC,QAAA,GAAG,UAAU,wBAAwB,EAE7C,MAAM,YAAc,KAAK,YAEb,YAAA,SAAS,WAAY,iBAAkB,CAC/C,KAAM,GAAG,UAAU,gCACnB,KAAM,GAAG,UAAU,gCACnB,WAAY,GACZ,SAAU,CAAC,EACX,OAAQ,IAAM,CACV,MAAM,IAAM,KAAK,MACZ,OAAQ,MAAS,CAAC,KAAK,IAAI,EAC3B,IAAK,OACK,CAAE,MAAO,KAAK,KAAM,IAAK,KAAK,IACxC,EAEL,IAAI,QAAU;AAAA;AAAA,0DAGd,SAAW,CAAE,IAAK,KAAM,IAAK,IACd,SAAA,kBAAkB,GAAG,KAAK,KAAK,YAEnC,gBAAA,kBAED,IAAI,OAAO,CACjB,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,gCAAgC,EACvE,QACA,QAAS,CACL,OAAQ,CACJ,KAAM,+BACN,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,iCAAiC,EACxE,SAAU,MAAO,MAAS,CACtB,MAAM,QACF,MAAM,KAAK,OAAO,QAAQ,UAAU,EAAE,OAClC,OAAO,OAAO,WAAW,OAAQ,IAAO,GAAG,wBAAwB,QAAU,CAAC,CAAA,EAGhF,KAAY,KAAK,MAAM,KACxB,GAAM,EAAE,KAAQ,KAAK,KAAK,eAAe,EAAE,IAAI,CAAA,EAEpD,GAAI,KAAK,MAAM,MAAQ,SAAW,KAC9B,UAAW,KAAK,QACZ,EAAE,UAAU,GAAM,CAAE,KAAY,cAAe,GAAO,EACjD,KAAA,QAAQ,IAAI,CAAC,CAG9B,CACJ,EACA,SAAU,CACN,KAAM,qCACN,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EAC1E,SAAU,MAAO,MAAiB,CACxB,MAAA,KAAY,KAAK,MAAM,KACxB,GAAM,EAAE,KAAQ,KAAK,KAAK,eAAe,EAAE,IAAI,CAAA,EAEhD,GAAA,KAAK,MAAM,MAAQ,KAAM,CACzB,MAAM,QAAU,KAAK,QACrB,UAAW,KAAK,QACZ,EAAE,UAAU,GAAO,CAAE,KAAY,cAAe,GAAO,CAE/D,CACJ,CACJ,CACJ,EACA,QAAS,QAAA,CACZ,EACC,OAAO,EAAI,EACN,EACX,CAAA,CACH,EAEW,YAAA,SAAS,WAAY,mBAAoB,CACjD,KAAM,GAAG,UAAU,qCACnB,KAAM,GAAG,UAAU,qCACnB,WAAY,GACZ,SAAU,CAAC,EACX,OAAQ,KACA,KAAK,MAAM,MAAQ,KAAK,SAAS,IAAI,WAAY,kBAAkB,GAClD,iBAAA,qBAAqB,EAAK,EAAI,EAAI,SAAS,MAAQ,SAAS,KAAK,EAAE,OAEjF,GACX,CACH,EAGW,YAAA,SAAS,WAAY,gCAAiC,CAC9D,KAAM,GAAG,UAAU,+CACnB,KAAM,GAAG,UAAU,+CACnB,WAAY,GACZ,SAAU,CAAC,EACX,OAAQ,IAAM,CACN,GAAA,KAAK,MAAM,KAAM,CACX,MAAA,iBAAwB,MAAM,QAAQ,oBAChC,QAAQ,QAAQ,WAAW,CAAC,EAAE,EAAA,EAEf,2BAAA,gBAAgB,EAAE,MACjD,CACO,MAAA,EACX,CAAA,CACH,EAGW,YAAA,SAAS,WAAY,yBAA0B,CACvD,KAAM,GAAG,UAAU,wCACnB,KAAM,GAAG,UAAU,wCACnB,WAAY,GACZ,SAAU,CAAC,EACX,OAAQ,IAAM,CACV,GAAI,KAAK,SAAS,IAAI,WAAY,cAAc,EAAG,CAC/C,GAAI,aACA,UAAW,SAAS,QAAQ,QAAQ,WAAW,OAAQ,GAAM,CAAC,EAAE,OAAO,cAAc,GAAK,CAAA,EACtF,gBAAgB,MAAO,iBAAiB,KAAK,CAAC,EAAE,KAAK,OAGtD,GAAA,eAAe,KAAK,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,CAAC,EAE1F,MAAA,EACX,CACO,MAAA,EACX,EACA,kBAAmB,CAAC,EAEpB,WAAY,MAAM,sBAAsB,MAAA,CAC3C,EAGD,QAAS,KAAO,EAAG,MAAQ,EAAG,OAC1B,QAAS,OAAS,EAAG,QAAU,GAAI,SAC/B,YAAY,SAAS,WAAY,iBAAiB,IAAI,QAAQ,MAAM,GAAI,CACpE,KAAM,KAAK,KAAK,OAAO,GAAG,UAAU,iCAAkC,CAAE,KAAY,OAAgB,EACpG,KAAM,KAAK,KAAK,OAAO,GAAG,UAAU,iCAAkC,CAAE,KAAY,OAAgB,EACpG,WAAY,GACZ,SAAU,CAAC,EACX,OAAQ,KACC,KAAA,MAAM,gBAAgB,IAAI,IAAI,OAAS,CAAC,EAAE,MAAS,UACjD,GACX,CACH,CAGb,CA7IgB,oEAAAA,QAAA,6BAAA,8BAAA,ECQT,MAAM,eAAiB,CAC1B,UAAW,CACP,CACI,MAAO,GACP,KAAM,CAAE,QAAS,EAAG,QAAS,GAAI,IAAK,CAAE,EACxC,SAAU,CAAE,QAAS,EAAG,QAAS,EAAG,IAAK,CAAE,EAC3C,IAAK,CAAE,QAAS,EAAG,QAAS,EAAG,IAAK,CAAE,CAC1C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EACzC,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,EAC7C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,GAAI,QAAS,GAAI,IAAK,CAAE,CAC5C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,GAAI,QAAS,IAAK,IAAK,CAAE,CAC7C,EACA,CACI,MAAO,EACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC3C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,EAC/C,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,CAAE,CAC9C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAC5C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAChD,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,CAC/C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAC5C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAChD,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,CAC/C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAC5C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAChD,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,CAC/C,EACA,CACI,MAAO,GACP,KAAM,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAC5C,SAAU,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,EAChD,IAAK,CAAE,QAAS,IAAK,QAAS,IAAK,IAAK,EAAG,CAC/C,CACJ,EACA,aAAc,CACV,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAChF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACjF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAClF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAClF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EAClF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACnF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACnF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACnF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACnF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,EACnF,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,GAAI,QAAS,EAAG,CACvF,EACA,YAAa,CACT,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,SAAU,CAAE,EACrE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,SAAU,CAAE,EACrE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,CAAE,EACtE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,CAC5E,EACA,WAAY,CACR,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,CAC9D,EACA,WAAY,CACR,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,SAAU,CAAE,EACrE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,SAAU,CAAE,EACrE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,CAAE,EACtE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,CAC5E,EACA,MAAO,CACH,CAAE,MAAO,GAAI,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,EAAG,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EAClE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACnE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,EAAG,SAAU,CAAE,EACpE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,SAAU,CAAE,EACrE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,CAAE,EACtE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,CAAE,EACtE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACvE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,EACxE,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,GAAI,SAAU,EAAG,CAC5E,EACA,aAAc,CACV,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,CAAE,EACvD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,CAAE,EACtD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,EAAG,IAAK,CAAE,EACtD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,IAAK,CAAE,EACvD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,CAAE,EACxD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,CAAE,EACxD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EACzD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,EAC1D,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,GAAI,IAAK,EAAG,CAC9D,EACA,aAAc,CACV,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAChF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAC7E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,IAAK,MAAO,CAAE,EAC/E,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,IAAK,MAAO,CAAE,CAC9E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAChF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAC7E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EACjF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,CAChF,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAChF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EAC7E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EACjF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,CAChF,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,KAAM,MAAO,CAAE,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,IAAK,MAAO,CAAE,EAC/E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,EACjF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,CAChF,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,KAAM,MAAO,CAAE,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,KAAM,MAAO,CAAE,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,KAAM,MAAO,CAAE,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,IAAK,MAAO,CAAE,CAChF,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,GAAI,MAAO,CAAE,EACjF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAC5E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAChF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,EAAG,MAAO,CAAE,CAC9E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,GAAI,MAAO,CAAE,EACjF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAC5E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAChF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,CAC/E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAC5E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAChF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,CAC/E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,SAAU,QAAS,GAAI,MAAO,CAAE,EAC9E,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAChF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,CAC/E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,EAChF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,CAC/E,EACA,CACI,MAAO,EACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,QAAS,QAAS,GAAI,MAAO,CAAE,CAC/E,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACtF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACtF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACtF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACrF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EAClF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,KAAM,MAAO,EAAG,EACtF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,KAAM,MAAO,EAAG,CACnF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,EAClF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,EACA,CACI,MAAO,GACP,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACnF,KAAM,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EAChF,SAAU,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,UAAW,QAAS,GAAI,MAAO,EAAG,EACpF,IAAK,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,SAAU,QAAS,GAAI,MAAO,EAAG,CACjF,CACJ,EACA,WAAY,CACR,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,IAAK,MAAO,CAAE,EAC9E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,IAAK,MAAO,CAAE,EAChF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,OAAQ,QAAS,IAAK,MAAO,CAAE,EAChF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,IAAK,MAAO,CAAE,EAChF,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,EAAG,MAAO,CAAE,EAC5E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,EAAG,MAAO,CAAE,EAC9E,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,EAAG,MAAO,CAAE,EAC9E,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC7E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,EAAG,MAAO,CAAE,EAC9E,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC7E,UAAW,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EACjF,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC7E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,CACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,KAAM,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,GAAI,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EACjF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,EAAG,SAAU,EAAG,SAAU,MAAO,QAAS,GAAI,MAAO,CAAE,EAC/E,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,GAAI,MAAO,CAAE,EAC/E,UAAW,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACnF,MAAO,EACX,EACA,CACI,QAAS,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACjF,UAAW,CAAE,UAAW,GAAI,SAAU,EAAG,SAAU,OAAQ,QAAS,KAAM,MAAO,CAAE,EACnF,MAAO,EACX,CACJ,EACA,gBAAiB,CACb,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,CACrD,EACA,MAAO,CACH,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,EAAG,SAAU,CAAE,EAC/C,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,CAAE,EAC9C,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,EAAG,SAAU,CAAE,EAC9C,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,CAAE,EAC/C,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,CAAE,EAC/C,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,EAAG,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EAChD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,EACjD,CAAE,MAAO,GAAI,QAAS,GAAI,KAAM,GAAI,SAAU,EAAG,CACrD,EACA,WAAY,CACR,CAAE,MAAO,GAAI,QAAS,EAAG,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,CAC1C,EACA,SAAU,CACN,CAAE,MAAO,GAAI,QAAS,EAAG,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EACnC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,EAAG,QAAS,GAAI,QAAS,CAAE,EACpC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,CAAE,EACrC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,EACtC,CAAE,MAAO,GAAI,QAAS,GAAI,QAAS,EAAG,CAC1C,EACA,cAAe,CACX,CAAE,MAAO,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,EAAG,MAAO,EAAG,MAAO,EAAG,SAAU,MAAO,MAAO,EAAG,EACjG,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,EAAG,MAAO,EAAG,SAAU,MAAO,UAAW,OAAQ,EAC1G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,SAAU,MAAO,UAAW,OAAQ,EAC3G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,SAAU,MAAO,UAAW,OAAQ,EAC3G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,SAAU,QAAS,UAAW,OAAQ,EAC7G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,SAAU,QAAS,UAAW,OAAQ,EAC7G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,SAAU,QAAS,UAAW,OAAQ,EAC7G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,GAAI,SAAU,QAAS,UAAW,OAAQ,EAC9G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,GAAI,SAAU,QAAS,UAAW,OAAQ,EAC9G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,GAAI,SAAU,QAAS,UAAW,OAAQ,EAC9G,CAAE,MAAO,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,GAAI,SAAU,QAAS,UAAW,OAAQ,EAC9G,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,OACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,EACA,CACI,MAAO,GACP,IAAK,GACL,IAAK,GACL,IAAK,GACL,MAAO,GACP,MAAO,GACP,MAAO,GACP,SAAU,QACV,UAAW,SACf,CACJ,EACA,cAAe,CACX,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,EAAG,UAAW,QAAS,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EAC1F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,EAAG,UAAW,QAAS,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EACzF,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,EAAG,UAAW,QAAS,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EACzF,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,SAAU,WAAY,SAAU,IAAK,GAAI,IAAK,EAAG,EAC5F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,SAAU,IAAK,GAAI,IAAK,EAAG,EAC7F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,SAAU,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EAC3F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,SAAU,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EAC3F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,SAAU,WAAY,QAAS,IAAK,GAAI,IAAK,EAAG,EAC3F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,SAAU,IAAK,GAAI,IAAK,EAAG,EAC7F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC9F,CAAE,MAAO,EAAG,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC9F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,EAC/F,CAAE,MAAO,GAAI,KAAM,GAAI,KAAM,GAAI,UAAW,UAAW,WAAY,UAAW,IAAK,GAAI,IAAK,EAAG,CACnG,EACA,MAAO,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CACxG,EC78BA,eAAsB,sCAAuC,CACzD,MAAM,cAAc,CAChB,WAAW,UAAU,0CACrB,WAAW,UAAU,0CACrB,WAAW,UAAU,wCAAA,CACxB,EAED,WAAW,gBAAgB,eAAgB,gBAAgB,UAAU,4CAA4C,EACjH,WAAW,gBAAgB,cAAe,gBAAgB,UAAU,2CAA2C,CACnH,CATsB,oFAAAA,QAAA,qCAAA,sCAAA,EAiBN,SAAA,sBAAsB,KAAM,KAAc,CACtD,MAAM,OAAS,EACX,sCAAsC,KAAK,KAAK,SAAS,GAAG,UAAU,yBAAyB,CAAC,WAAA,EAE7F,OAAA,GAAG,QAAS,IAAM,CACjB,IAAA,UAAY,EAAA,OAAO,EAAI,CAAA,CAC9B,EAEK,MAAA,OAAS,KAAK,KAAK,kCAAkC,EACvD,OAAO,OAAS,GAChB,OAAO,OAAO,MAAM,CAE5B,CAZgB,sDAAAA,QAAA,sBAAA,uBAAA,EAchB,MAAM,kBAAkB,WAAY,OAAA,0BjBnCpC,MiBmCoC,CAAAA,QAAA,KAAA,WAAA,CAAA,CACzB,YAAY,QAA8B,CAC7C,MAAM,OAAO,EAEb,MAAM,GAAG,eAAgB,KAAK,gBAAgB,KAAK,IAAI,CAAC,CAC5D,CAEA,WAAoB,gBAAqC,CAE9C,MAAA,CACH,GAFY,MAAM,eAGlB,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,kBAAkB,EACzD,SAAU,WAAW,UAAU,0CAC/B,KAAM,CACF,CACI,YAAa,gBACb,gBAAiB,iBACjB,QAAS,mBACb,CACJ,EACA,MAAO,IACP,OAAQ,OACR,UAAW,EAAA,CAEnB,CAES,QAAQ,QAAoB,CAC3B,MAAA,KAAO,MAAM,QAAQ,OAAO,EAElC,YAAK,KAAU,CACX,OAAQ,QAAG,MAAA,UAAU,cAAc,CAAA,EAGvC,KAAK,KAAQ,SAAc,OAAO,QAAQ,WAAW,IAChD,OAAqB,MAAM,OAAO,OAAO,QAAW,MAAM,KAAA,EAGxD,IACX,CAES,kBAAkB,KAAiC,CACxD,MAAM,kBAAkB,IAAI,EAE5B,KAAK,KAAK,iBAAiB,EAAE,GAAG,QAAS,KAAK,sBAAsB,CACxE,CAEA,iBAAkB,CACd,WAAW,KAAK,OAAO,KAAK,IAAI,EAAG,CAAC,CACxC,CAEA,KAAM,uBAAuBG,OAAsB,CACzC,MAAA,OAAS,EAAEA,OAAM,MAAM,EACvB,SAAW,OAAO,KAAK,UAAU,EACjC,MAAQ,OAAO,QAAQ,WAAW,CAAC,EACnC,QAAU,OAAO,KAAK,SAAS,EAC/B,OAAkB,MAAM,UAAU,iBAAiB,gBAAgB,cAAc,OAAO,EAE9F,GAAI,QAAS,CACH,MAAA,cAAgB,QAAQ,WAExB,MAAA,IAAI,KAAK,aAAa,EAAE,UAC1B,CACI,QAAS,YAAY,WAAW,CAAE,MAAY,OAAO,SAAU,EAC/D,OAAQ,SACR,QAAS,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,CACnE,EACA,CACI,SAAU,OAAS,MAAM,gBAAgB,QAAU,KAAK,SAAS,IAAI,OAAQ,UAAU,EACvF,OAAQ,EACZ,CAAA,CAER,CACJ,CAES,OAAuB,CAC5B,aAAM,IAAI,eAAgB,KAAK,gBAAgB,KAAK,IAAI,CAAC,EAElD,MAAM,OACjB,CACJ,CChGO,SAAS,UAAU,KAAc,CAC7B,OAAA,KAAK,SAAS,QAAQ,IAAI,CACrC,CAFgB,8BAAAH,QAAA,UAAA,WAAA,EAIA,SAAA,kBAAkB,KAAc,WAAqB,CAC7D,IAAA,OACJ,OAAI,YACS,OAAA,KAAK,SAAS,QAAQ,UAAU,EAClC,OAAO,gBAAgB,KAAM,GAAM,EAAE,OAAS,IAAI,GAElD,UAAU,IAAI,CAE7B,CARgB,8CAAAA,QAAA,kBAAA,mBAAA,EAUA,SAAA,SAAS,KAAc,OAAuC,CACnE,OAAA,KAAK,QAAQ,KAAM,GAAM,EAAE,OAAS,MAAQ,EAAE,QAAQ,OAAS,MAAM,CAChF,CAFgB,4BAAAA,QAAA,SAAA,UAAA,ECdT,SAAS,YAAY,MAA0B,CAClD,KAAM,CAAC,WAAY,WAAW,EAAI,MAAM,MAAM,GAAG,EACjD,IAAI,MAAQ,EACR,cAAgB,SAChB,MAAQ,SAAS,WAAW,GAGhC,KAAM,CAAC,gBAAiB,cAAc,EAAI,WAAW,MAAM,GAAG,EACxD,OAAS,CACX,UAAW,SAAS,eAAe,EACnC,SAAU,SAAS,cAAc,EACjC,SAAU,MACV,QAAS,EACT,KAAA,EAGJ,cAAO,SAAY,OAAO,SAAW,GAAK,EAAK,OAAO,UAAY,OAAO,MAElE,MACX,CAnBgB,kCAAAA,QAAA,YAAA,aAAA,EAqBT,SAAS,iBAAiB,CAC7B,UACA,SACA,KACJ,EAIG,CACC,IAAI,QAAU,GAAG,SAAS,IAAI,QAAQ,GACtC,OAAI,MAAQ,IACE,QAAA,GAAG,OAAO,IAAI,KAAK,IAE1B,OACX,CAdgB,4CAAAA,QAAA,iBAAA,kBAAA,EAgBT,SAAS,eAAe,IAAkC,SAAkB,SAAkB,SAAkB,CAC7G,MAAA,KAAO,eAAe,GAAG,EACzB,aAAe,KAAK,SAAW,CAAC,EAChC,aAAe,KAAK,SAAW,CAAC,EAEtC,IAAI,UAA4C,CAAE,IAAK,YAAa,MAAO,OAAO,kBAClF,UAAW,SAAS,OAAO,QAAQ,YAAY,EAAG,CACxCO,MAAAA,KAAM,MAAM,CAAC,EACnB,GAAIA,OAAQ,QACR,SAGJ,MAAM,MAAQ,SAAS,MAAM,CAAC,CAAQ,EAChC,MAAQ,KAAK,IAAI,MAAQ,QAAQ,EAEnC,MAAQ,UAAU,QACN,UAAA,CACR,IAAAA,KACA,KAAA,EAGZ,CAEA,MAAM,OAAS,CACX,MAAO,aAAa,UAAU,GAAG,EACjC,MAAO,SAAW,aAAa,UAAU,GAAG,EAC5C,MAAO,CAAA,EAEJ,cAAA,MAAQ,OAAO,MAAQ,OAAO,MAE9B,MACX,CA/BgB,wCAAAP,QAAA,eAAA,gBAAA,EAiCA,SAAA,UAAU,SAAkB,SAAkB,SAAkB,CACtE,MAAA,KAAO,eAAe,UACtB,aAAe,KAAK,SAAW,CAAC,EAChC,aAAe,KAAK,SAAW,CAAC,EAGtC,IAAI,UAAgE,CAChE,IAAK,YACL,WAAY,EACZ,MAAO,OAAO,gBAAA,EAElB,UAAW,SAAS,OAAO,QAAQ,YAAY,EAAG,CACxC,MAAA,IAAM,MAAM,CAAC,EACnB,GAAI,MAAQ,QACR,SAGE,MAAA,WAAa,MAAM,CAAC,EACpB,CAAE,QAAS,OAAY,EAAA,WACvB,MAAQ,QAAU,QAClB,YAAc,SAAW,SAAW,MACpC,KAAO,KAAK,IAAI,SAAW,OAAO,EAClC,KAAO,KAAK,IAAI,SAAW,OAAO,EAClC,MAAQ,KAAK,IAAI,KAAM,IAAI,EAE7B,GAAA,SAAW,SAAW,SAAW,QAAS,CAC9B,UAAA,CACR,IACA,WACA,KAAA,EAEJ,KAAA,MAEI,MAAQ,UAAU,QACN,UAAA,CACR,IACA,WACA,KAAA,EAIhB,CAEM,MAAA,SAAW,aAAa,UAAU,GAAG,EACpC,OAAA,KAAK,MAAM,SAAS,SAAW,SAAS,QAAU,SAAS,SAAW,UAAU,UAAU,CACrG,CA7CgB,8BAAAA,QAAA,UAAA,WAAA,EA+CT,SAAS,cAAc,IAAgC,SAAkB,SAAkB,SAAkB,CAC1G,MAAA,KAAO,eAAe,GAAG,EACzB,aAAe,KAAK,SAAW,CAAC,EAChC,aAAe,KAAK,SAAW,CAAC,EAEhC,SAAW,KAAK,IAAI,aAAa,QAAU,aAAa,OAAO,EAC/D,eAAiB,SAAW,aAAa,SAAW,SAEpD,SAAW,KAAK,IAAI,aAAa,QAAU,aAAa,OAAO,EACrE,OAAO,KAAK,MAAM,aAAa,QAAU,SAAW,aAAa,CACrE,CAVgB,sCAAAA,QAAA,cAAA,eAAA,EAYA,SAAA,wBAAwB,OAAmB,OAAmB,OAA8B,CACxG,MAAM,MAAQ,OAAO,UACf,KAAO,OAAO,SACd,MAAQ,OAAO,MAAQ,OAAO,MAAQ,OAAO,MAE5C,OAAA,YACH,iBAAiB,CACb,UAAW,MACX,SAAU,KACV,KAAA,CACH,CAAA,CAET,CAZgB,0DAAAA,QAAA,wBAAA,yBAAA,EAcA,SAAA,cAAc,SAAkB,SAAkB,SAAkB,CAC1E,MAAA,KAAO,eAAe,aACtB,aAAe,KAAK,SAAW,CAAC,EAChC,aAAe,KAAK,SAAW,CAAC,EAChC,eAAiB,YAAY,QAAQ,EAE3C,IAAI,UAA4C,CAAE,IAAK,YAAa,MAAO,OAAO,kBAClF,UAAW,SAAS,OAAO,QAAQ,YAAY,EAAG,CACxC,MAAA,IAAM,MAAM,CAAC,EACnB,GAAI,MAAQ,QACR,SAGE,MAAA,MAAQ,MAAM,CAAC,EACf,MAAQ,KAAK,IAAI,MAAM,QAAU,eAAe,OAAO,EAEzD,MAAQ,UAAU,QACN,UAAA,CACR,IACA,KAAA,EAGZ,CAEA,OAAI,UAAU,MAAQ,eAAe,QAAU,GACpC,wBAAwB,eAAgB,aAAa,UAAU,GAAG,EAAG,aAAa,UAAU,GAAG,CAAC,EAClG,SAEE,QAEf,CA9BgB,sCAAAA,QAAA,cAAA,eAAA,EAgCA,SAAA,kBAAkB,SAAkB,SAAkB,SAAkB,CAC9E,MAAA,KAAO,eAAe,WACtB,aAAe,KAAK,SAAW,CAAC,EAChC,aAAe,KAAK,SAAW,CAAC,EAChC,eAAiB,YAAY,QAAQ,EAE3C,IAAI,UAA4C,CAAE,IAAK,YAAa,MAAO,OAAO,kBAClF,UAAW,SAAS,OAAO,QAAQ,YAAY,EAAG,CACxC,MAAA,IAAM,MAAM,CAAC,EACnB,GAAI,MAAQ,QACR,SAGE,MAAA,MAAQ,MAAM,CAAC,EACf,MAAQ,KAAK,IAAI,MAAM,QAAU,eAAe,OAAO,EAEzD,MAAQ,UAAU,QACN,UAAA,CACR,IACA,KAAA,EAGZ,CAEA,OAAI,UAAU,MAAQ,eAAe,QAAU,GACpC,wBAAwB,eAAgB,aAAa,UAAU,GAAG,EAAG,aAAa,UAAU,GAAG,CAAC,EAClG,SAEE,QAEf,CA9BgB,8CAAAA,QAAA,kBAAA,mBAAA,ECnKM,eAAA,yBAAyB,QAAiB,SAAkB,CAC9E,MAAM,MAA2B,KAAK,OAAO,IAAI,OAAO,EACpD,OACM,MAAA,gBAAgB,MAAO,QAAQ,CAE7C,CALsB,4DAAAA,QAAA,yBAAA,0BAAA,EAOA,eAAA,gBAAgB,MAAgB,SAAkB,CAC9D,MAAA,WAAa,UAAU,WAAW,EAElC,WAAa,SAAS,QAAQ,GAC9B,OACF,kBAAkB,WAAY,YAAY,IAAc,GAEvD,MAAM,OAAO,OAAO,CACjB,KAAM,WACN,KAAM,QACN,OAAQ,WAAa,WAAW,GAAK,EAAA,CACxC,EAEC,OAAuC,MAAM,OAC7C,SAAW,OAAO,QAAQ,MAAM,MAChC,WAAa,CACf,OAAQ,OAAO,GACd,6BAA+B,QAAA,EAIzB,SAAA,CAAC,IAAK,IAAI,IAAK,OAAO,QAAQ,OAAO,SAAS,EAAG,CAClD,MAAA,IAAM,eAAe,eAAgB,SAAU,KAAa,GAAG,EAAG,SAAU,QAAQ,EAAE,MACtF,MAAQ,GAAK,IAAM,EACnB,IAAM,EAEZ,WAAW,oBAAoB,GAAG,EAAE,EAAI,CAAE,MAAO,IAAK,IAC1D,CAGA,MAAM,OAAgB,CAAA,EAEhB,YAAc,OAAO,WAAW,YACtC,QAAS,EAAI,EAAG,EAAI,YAAY,OAAQ,IAAK,CACnC,MAAA,WAAa,YAAY,CAAC,EAEhC,OAAO,KAAK,CACR,MAAO,WAAW,MAClB,KAAM,WAAW,KACjB,WAAY,WAAW,YAAc,GACrC,MAAO,cAAc,aAAc,WAAW,MAAO,SAAU,QAAQ,EAAE,SAAS,EAClF,SAAU,WAAW,UAAY,EAAA,CACpC,CACL,CACA,WAAW,+BAA+B,EAAI,OAG9C,MAAM,OAAgB,CAAA,EAEhB,WAAa,OAAO,WAAW,WACrC,QAAS,EAAI,EAAG,EAAI,WAAW,OAAQ,IAAK,CAClC,MAAA,SAAW,WAAW,CAAC,EAE7B,OAAO,KAAK,CACR,MAAO,SAAS,MAChB,KAAM,SAAS,KACf,WAAY,SAAS,YAAc,GACnC,MAAO,cAAc,WAAY,SAAS,MAAO,SAAU,QAAQ,EAAE,SAAS,CAAA,CACjF,CACL,CACA,WAAW,mCAAmC,EAAI,OAGlD,WAAW,4BAA4B,EAAI,eACvC,aACA,OAAO,WAAW,IAAI,OAAS,EAC/B,SACA,QACF,EAAA,MACF,WAAW,uBAAuB,EAAI,eAClC,aACA,OAAO,WAAW,KAAO,EACzB,SACA,QACF,EAAA,MACF,WAAW,8BAA8B,EAAI,eACzC,cACA,OAAO,MAAM,UAAU,OAAS,EAChC,SACA,QACF,EAAA,MACF,WAAW,2BAA2B,EAAI,eACtC,cACA,OAAO,MAAM,OAAO,OAAS,EAC7B,SACA,QACF,EAAA,MACF,WAAW,yBAAyB,EAAI,eACpC,cACA,OAAO,MAAM,KAAK,OAAS,EAC3B,SACA,QACF,EAAA,MAEI,MAAA,GAAK,UAAU,OAAO,WAAW,IAAI,OAAS,EAAG,SAAU,QAAQ,EACzE,WAAW,0BAA0B,EAAI,GACzC,WAAW,4BAA4B,EAAI,GAE3C,IAAI,YAA8B,CAAA,EAClC,MAAM,MAAa,MAAM,MACd,UAAA,UAAU,MAAM,OAAQ,CACzB,MAAA,KAAY,MAAM,IAAI,MAAM,EAE7B,GAAA,KAAK,OAA8B,OAAQ,CAC5C,MAAM,SAAW,SAAS,KAAK,OAAO,IAAI,KAAK,EACzC,SAAW,eAAe,QAAS,SAAU,SAAU,QAAQ,EAAE,MACvE,YAAY,KAAK,CACb,IAAK,KAAK,GACT,mBAAqB,QAAA,CACzB,CAAA,SACO,KAAK,OAA8B,oBAAqB,CAChE,MAAM,UAAY,SAAS,KAAK,OAAO,QAAQ,KAAK,EAC9C,UAAY,eAAe,QAAS,UAAW,SAAU,QAAQ,EAAE,MAEnE,MAAQ,SAAS,KAAK,OAAO,QAAQ,EAAE,EACvC,MAAQ,eAAe,kBAAmB,MAAO,SAAU,QAAQ,EAAE,MAE3E,YAAY,KAAK,CACb,IAAK,KAAK,GACT,uBAAyB,UACzB,oBAAsB,KAAA,CAC1B,CAAA,SACO,KAAK,OAA8B,QAAS,CACpD,MAAM,UAAY,SAAS,KAAK,OAAO,MAAM,KAAK,EAC5C,UAAY,eAAe,QAAS,UAAW,SAAU,QAAQ,EAAE,MAEnE,aAA6B,CAC/B,IAAK,KAAK,GACT,qBAAuB,UACvB,qBAAuB,SAAA,EAGtB,OAAS,KAAK,OAAO,YAEvB,GAAA,MAAM,QAAQ,MAAM,EACpB,QAAS,EAAI,EAAG,EAAI,OAAO,OAAQ,IAClB,aAAA,sBAAsB,CAAC,SAAS,EAAI,cAC7C,OAAO,CAAC,EAAE,OACV,SACA,QAAA,EAEJ,aAAa,sBAAsB,CAAC,aAAa,EAAI,OAAO,CAAC,EAAE,eAInE,WAAW,OAAO,OACD,aAAA,sBAAsB,GAAG,SAAS,EAAI,cAC/C,OAAO,GAAG,EAAE,OACZ,SACA,QAAA,EAEJ,aAAa,sBAAsB,GAAG,aAAa,EAAI,OAAO,GAAG,EAAE,WAI3E,YAAY,KAAK,YAAY,CACjC,CACJ,CACA,SAAS,WAAW,EAEpB,IAAI,SAAgB,SAAS,MAAM,KAAgB,OAAO,IAAI,EAC1D,WAAa,OACP,MAAA,SAAS,OAAO,UAAU,GAErB,SAAA,MAAM,MAAM,UAAU,EAEjC,SAAY,MAAM,MAAM,OAAO,UAAU,OAAc,GAGrD,MAAA,SAAS,wBAAwB,OAAQ,WAAW,EAE1D,YAAc,CAAA,EACR,MAAA,WAAa,CAAC,2BAA4B,uCAAuC,EACvF,QAAS,QAAU,EAAG,QAAU,WAAW,OAAQ,UAAW,CACpD,MAAA,MAAQ,WAAW,OAAO,EAChC,UAAW,QAAQ,MACd,OACIQ,OAASA,MAAK,OAAO,YAAY,MAAM,SAAS,IAAI,GAAKA,MAAK,OAAO,YAAY,MAAM,SAAS,KAAK,CAAA,EAEzG,OACIA,OACG,CACI,MAAM,GAAG,aAAc,QAAS,WAAY,OAAQ,YAAa,WAAY,QAAQ,EACtF,SAASA,MAAK,IAAI,CAE5B,EAAA,OAAQA,OAAS,CAACA,MAAK,OAAO,YAAY,MAAM,SAAS,WAAW,CAAC,EAAG,CACnE,MAAA,YAAc,KAAK,OAAO,YAAY,MAC5C,IAAI,eAAiB,YACjB,MAAgC,MAAM,KAAK,WAAW,EAEtD,YAAc,EAClB,KAAO,QAAU,MAAM,CACb,MAAA,UAAY,MAAM,CAAC,EACrB,IAAA,MACA,UAAY,EACZ,MAAQ,MAAM,CAAC,EAEf,MAAQ,MAAM,CAAC,EAEb,MAAA,MAAQ,MAAM,MAAQ,YACtB,WAAa,eAAe,kBAAmB,SAAS,KAAK,EAAG,SAAU,QAAQ,EAAE,MACpF,YAAc,GAAG,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC,GAGnD,eAAA,eAAe,UAAU,EAAG,KAAK,EACjC,YACA,eAAe,UAAU,MAAQ,UAAU,MAAM,EAEtC,aAAA,eAAe,OAAS,YAAY,OAAS,YAEpD,MAAA,MAAM,KAAK,WAAW,CAClC,CAEA,YAAY,KAAK,CACb,IAAK,KAAK,GACT,2BAA6B,cAAA,CACjC,CACL,CACJ,CAEM,MAAA,SAAS,wBAAwB,OAAQ,WAAW,EAE1D,YAAc,CAAA,EAEd,UAAW,QAAQ,SAAS,MAAM,OAAQA,OAAS,CAACA,MAAK,SAAS,OAAO,CAAC,EAAE,SAAU,CAClF,MAAM,UAAY,mBACZ,YAAc,KAAK,OAAO,YAAe,MAC/C,IAAI,eAAiB,YACjB,MAAgC,UAAU,KAAK,WAAW,EAC1D,YAAc,EAClB,KAAO,QAAU,MAAM,CACb,KAAA,CAAC,SAAS,EAAI,MACd,MAAQ,MAAM,MAAQ,YACtB,iBAAmB,kBAAkB,UAAW,SAAU,QAAQ,EAGpE,eAAA,eAAe,UAAU,EAAG,KAAK,EACjC,iBACA,eAAe,UAAU,MAAQ,UAAU,MAAM,EAEtC,aAAA,eAAe,OAAS,YAAY,OAAS,YAEpD,MAAA,UAAU,KAAK,WAAW,CACtC,CAEA,YAAY,KAAK,CACb,IAAK,KAAK,GACT,2BAA6B,cAAA,CACjC,CACL,CAEM,MAAA,SAAS,wBAAwB,OAAQ,WAAW,CAC9D,CA5PsB,0CAAAR,QAAA,gBAAA,iBAAA,ECFtB,MAAM,qBAAwC,OAAA,sCrBnC9C,MqBmC8C,CAAAA,QAAA,KAAA,uBAAA,CAAA,CACjC,IACA,KACA,KACA,OAIA,SAEA,OAEF,aAAc,CACjB,KAAK,IAAM,kDACN,KAAA,KAAO,GAAG,UAAU,0DACzB,KAAK,KAAO,oBACP,KAAA,OAAS,CAAC,aAAa,EACvB,KAAA,SAAW,IAAI,WACpB,KAAK,OAAS,gDAClB,CAEQ,WAAW,OAAsB,OAAmB,CACxD,MAAM,aAAe,OAAO,OAE5B,GAAI,CAAC,aAAc,OAEb,MAAA,MAAQ,OAAO,MAAM,MAAM,gBAE3B,SAAW,OAAO,SAAW,EAC7B,MAAQ,OAAO,OAAO,YAAY,EACnC,OAAQ,GAAM,EAAE,OAAS,EAAE,MAAQ,IAAM,QAAQ,EACjD,IAAK,IAAO,CAAE,MAAO,EAAE,MAAO,MAAO,EAAE,IAAA,EAAO,EAE7C,UAAY,OAAO,OAAO,MAAM,KACjC,GAAuB,EAAE,MAAQ,aAAe,EAAE,OAAS,sBAAA,EAE1D,SAAW,OAAO,OAAO,MAAM,KAChC,GAAuB,EAAE,MAAQ,aAAe,EAAE,OAAS,4BAAA,EAE5D,GAAA,CAAC,WAAa,CAAC,SAAgB,MAAA,IAAI,MAAM,yCAAyC,EAGlF,UAAY,GAAY,SAAA,QAAQ,KAAK,CAAE,MAAO,yBAA0B,KAAM,EAAG,MAAO,CAAA,CAAG,EAG/F,UAAU,QAAU,UAAU,QACzB,OAAQ,IAAO,aAAa,EAAE,KAAe,GAAG,MAAQ,IAAM,QAAQ,EACtE,OAAO,KAAK,EAIjB,MAAM,OAAS,UAAU,QAAQ,IAAK,GAAM,EAAE,KAAK,EACxC,UAAA,UAAU,SAAS,QAAS,CAC7B,MAAA,cAAgB,OAAO,OAAQ,GAAM,aAAa,CAAC,EAAE,OAAS,OAAO,KAAK,EAC5E,cAAc,OAAS,EACvB,OAAO,UAAY,CACf,CACI,GAAI,cAAc,IAAK,IAAO,CAC1B,GAAI,CAAC,yDAA0D,CAAC,CAAA,EAClE,CACN,CAAA,EAGG,OAAA,UAAY,CAAC,UAAU,CAEtC,CAGA,GAAI,OAAO,MAAO,CACd,MAAM,UAAY,OAAO,KAAK,OAAO,KAAK,gBAAgB,EACnD,OAAA,OAAO,MAAM,KAAK,CACrB,IAAK,iBACL,KAAM,UACN,KAAM,iCACN,SAAU,yDACV,MAAO,CACH,SAAU,UACL,IAAI,CAAC,EAAG,KAAO,CAAE,MAAO,EAAG,IAAK,EAAG,MAAO,MAAM,QAAQ,CAAC,CAAI,EAAA,EAC7D,OAAQ,GAAM,EAAE,QAAU,MAAS,EACxC,MAAO,4DACX,CAAA,CACkB,CAC1B,CACJ,CAEA,MAAM,IAAI,SAAwD,CAC9D,MAAM,OAAU,MAAM,SAAS,KAAK,MAAM,EAC1C,GAAI,CAAC,OAAQ,MAAM,IAAI,MAAM,UAAU,KAAK,MAAM,aAAa,EACzD,MAAA,OAAS,OAAO,YACrB,OAAO,MAAM,OAAS,CAAC,GAAG,SAAW,KAAK,OAErC,MAAA,OAAS,OAAO,OAAO,WAAW,QAAS,OAAU,MAAM,OAAS,CAAA,CAAE,EAExE,GADA,OAAO,SAAW,GAAK,KAAK,KAAK,WAAkB,OAAA,KAAK,KAAK,KAAK,SAAS,EAC3E,OAAO,SAAW,EAClB,OAAO,GAAG,cAAc,MAAM,oCAAqC,CAAE,SAAU,GAAM,EAGzF,MAAM,OAAS,KAAK,KAAK,QAAQ,MAAM,EACnC,QAAQ,OACH,KAAA,WAAW,OAAQ,OAAO,KAAK,EAGxC,UAAW,SAAS,OAAQ,CACxB,MAAM,SAAW,MAAM,UAAU,OAAO,KAAM,GAAM,EAAE,MAAM,MAAM,WAAa,KAAK,MAAM,EACtF,SACA,MAAM,SAAS,SAEf,MAAM,MAAM,wBAAwB,OAAQ,CAAC,MAAM,CAAC,CAE5D,CAIO,MAAA,EACX,CAEA,MAAM,UAAU,SAAgF,CAGhG,CACJ,CAEA,IAAI,gBAEJ,MAAM,KAAK,QAAS,IAAM,CACtB,gBAAkB,IAAI,qBAC1B,CAAC,EC9ID,eAAsB,8CAA+C,CACjE,MAAM,cAAc,CAChB,WAAW,UAAU,kCACrB,WAAW,UAAU,wCAAA,CACxB,EAED,WAAW,gBAAgB,eAAgB,gBAAgB,UAAU,2CAA2C,CACpH,CAPsB,oGAAAA,QAAA,6CAAA,8CAAA,EAStB,SAAS,eACL,YACA,MACA,WACF,CACE,UAAW,WAAW,MAAO,CACnB,MAAA,OAAS,YAAY,IAAI,OAAO,EACtC,UAAW,UAAU,WAAY,CAC7B,MAAM,MAAQ,SAAS,OAAO,OAAO,YAAa,CAAA,EAClD,GAAI,CAAC,MAAO,SACZ,MAAM,MAAQ,MAAM,OAAO,KAAO,MAAM,IACpC,OAAS,OAAO,MAAQ,MACxB,OAAO,KAAO,MACd,OAAO,UAAY,QAE3B,CACJ,CACJ,CAjBS,wCAAAA,QAAA,eAAA,gBAAA,EAmBT,SAAS,0BAA0B,OAAsE,CAC/F,MAAA,QAAU,IAChB,UAAW,SAAS,OAAQ,CAClB,MAAA,OAAS,YAAY,KAAK,EAC5B,QACI,IAAA,IAAI,MAAM,GAAI,MAAM,CAEhC,CACO,OAAA,GACX,CATS,8DAAAA,QAAA,0BAAA,2BAAA,EAWT,SAAS,YAAY,MAAsD,CACvE,MAAO,CAAE,WAAY,MAAM,WAAY,GAAG,MAAM,OACpD,CAFS,kCAAAA,QAAA,YAAA,aAAA,EAIT,SAAS,iBACL,OACA,IACA,MACA,MACA,YACuG,CACjG,MAAA,UAAY,OAAO,OAAO,YAAY,EACtC,MAAQ,UAAY,YAAY,SAAS,EAAI,KAC7C,MAAQ,MAAQ,MAAM,OAAO,KAAO,MAAM,IAAM,GAMtD,MAAO,CAAE,KALI,KAAK,SAAS,IAAI,WAAY,+BAA+B,GACpE,MAAM,QAAU,MAAM,SAAS,MAAM,EAAE,EACnC,QAAU,OAAO,MAAQ,GAE7B,GACS,IAAK,OAAQ,MAAO,KAAM,CAC7C,CAhBS,4CAAAA,QAAA,iBAAA,kBAAA,EA4CT,SAAS,eAAe,cAA0B,WAA0C,CACxF,MAAM,aAAe,KAAK,SAAS,IAAI,WAAY,iBAAiB,EAE9D,aAAe,WAChB,OAAQ,GAAM,CACL,MAAA,SAAW,cAAc,SAAS,EAAE,MAAM,kBAAkB,CAAC,GAAG,MAAQ,GACxE,mBACF,EAAE,iBAAiB,KAAM,GAAM,cAAc,SAAS,EAAE,MAAM,kBAAkB,CAAC,GAAG,IAAI,GACxF,EAAE,iBAAiB,KAAM,GAAM,cAAc,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,EAAE,IAAI,CAAC,EAGhG,OAAA,cACA,EAAE,aAAe,iBAChB,EAAE,aAAe,iBAAmB,CAAC,MAAO,UAAU,EAAE,SAAS,cAAc,IAAI,GACpF,cAAc,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,mBAAmB,GAC7E,UACA,kBAEP,CAAA,EACA,OAAQ,GAAO,EAAE,OAAS,KAAK,QAAQ,IAAI,EAAE,MAAM,GAAG,OAAS,EAAK,EACpE,KAAK,CAAC,EAAG,IAAM,EAAE,KAAK,cAAc,EAAE,KAAM,KAAK,KAAK,IAAI,CAAC,EAEnD,oBAAA,QAAS,GAAM,CACxB,MAAM,OAAU,GAAW,QAAQ,QAAU,CAAA,EAC3C,EAAA,QAAU,OAAO,SAAS,QAAQ,EAClC,EAAA,aAAe,OAAO,SAAS,UAAU,EACzC,EAAA,gBAAkB,OAAO,SAAS,aAAa,CAAA,CACpD,EAEM,YACX,CA9BS,wCAAAA,QAAA,eAAA,gBAAA,EAqCT,eAAsB,mBAAoB,CACtC,MAAM,WAA4B,CAC9B,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+DAA+D,EACrG,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,sBAAsB,GAAG,SAAS,IAAI,WAAW,EAC/E,KAAM,qDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,kEAAkE,EACxG,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,sBAAsB,GAAG,SAAS,IAAI,eAAe,EACnF,KAAM,sDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EACnF,MAAO,GACP,OAAQ,CAAC,iBAAkB,gDAAgD,EAC3E,KAAM,iDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,MAAO,GACP,OAAQ,CAAC,MAAO,gEAAgE,EAChF,OAAQ,6BACR,KAAM,iDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EACvF,MAAO,GACP,OAAS,SAAY,KAAK,aAAgB,IAAI,QAAQ,SAAS,CAAC,CAAC,EACjE,OAAQ,cACR,KAAM,iDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EACrF,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,cAAc,EAC5C,KAAM,0DACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACjF,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,KAAM,oDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,iCACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,MAAO,eACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,QAAQ,EACtC,KAAM,kDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACzF,MAAO,SACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,mBAAmB,EACjD,KAAM,8CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACzF,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,mBAAmB,EACjD,KAAM,kEACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,MAC1B,KAAM,oDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EACvF,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,gBAAgB,EAC9C,KAAM,kDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,oEAAoE,EAC1G,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,GAAG,SAAS,IAAI,mBAAmB,EACrF,KAAM,yCACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2DAA2D,EACjG,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,GAAG,SAAS,IAAI,SAAS,EAC3E,KAAM,yCACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yDAAyD,EAC/F,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,GAAG,SAAS,IAAI,OAAO,EACzE,KAAM,+CACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yDAAyD,EAC/F,MAAO,SACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,kBAAkB,EAChD,QAAS,CAAE,UAAW,QAAS,EAC/B,KAAM,qDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,4DAA4D,EAClG,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,kBAAkB,EAChD,QAAS,CAAE,UAAW,WAAY,EAClC,KAAM,sDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2DAA2D,EACjG,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,kBAAkB,EAChD,QAAS,CAAE,UAAW,UAAW,EACjC,KAAM,wEACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0DAA0D,EAChG,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,kBAAkB,EAChD,QAAS,CAAE,UAAW,SAAU,EAChC,KAAM,uDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,8CAA8C,EACpF,MAAO,eACP,OAAQ,CAAC,+BAAgC,yDAAyD,EAClG,KAAM,kDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,QAAQ,EACtC,KAAM,uDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EACvF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,gBAAgB,EAC9C,KAAM,kEACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,MAAO,GACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,QAAQ,EACtC,KAAM,6DACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,sDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yDAAyD,EAC/F,MAAO,GACP,OAAQ,gBACR,KAAM,iDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EACnF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,YAAY,EAC1C,KAAM,+CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,qDAAqD,EAC3F,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,EAClD,KAAM,8CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACjF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,KAAM,4CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EAC9E,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,MAAM,EACpC,KAAM,+CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EACrF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,aAAa,EAC3C,KAAM,kDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EAClF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,WAAW,EACzC,KAAM,+CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EAClF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,WAAW,EACzC,KAAM,gDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,uCAAuC,EAC7E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,KAAK,EACnC,KAAM,uDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,oDAAoD,EAC1F,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,EAClD,KAAM,wCACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,oDAAoD,EAC1F,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,oBAAoB,EAClD,KAAM,mDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,gDAAgD,EACtF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,gBAAgB,EAC9C,KAAM,0CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACjF,MAAO,cACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,GAAG,SAAS,IAAI,SAAS,EAChE,KAAM,mDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,6CAA6C,EACnF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,aAAa,EAC3C,KAAM,yDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,sDAAsD,EAC5F,MAAO,GACP,OAAQ,KAAK,KAAK,QAAQ,aAC1B,KAAM,gDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACzF,MAAO,GACP,OAAQ,CAAC,qCAAsC,yDAAyD,EACxG,KAAM,uDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,EAChF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,OAC1B,KAAM,iCACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,8CAA8C,EACpF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,YAAY,EAC1C,KAAM,kDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACjF,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,KAAM,iDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EAC9E,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,MAAM,EACpC,KAAM,2CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,kDAAkD,EACxF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,iBAAiB,EAC/C,KAAM,oDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EACrF,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,cAAc,EAC5C,KAAM,wCACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,+CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,8CACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,EACjF,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,KAAM,6CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,+CACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,kDAAkD,EACxF,MAAO,UACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,QAAS,CAAE,UAAW,SAAU,EAChC,KAAM,mDACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACzF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,EACvC,QAAS,CAAE,UAAW,UAAW,EACjC,KAAM,mDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EAC9E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,MAAM,EACpC,KAAM,+CACV,EACA,CACI,WAAY,QACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACzF,MAAO,GACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,YAAY,EAC1C,KAAM,wDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC/E,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,OAAO,EACrC,KAAM,6CACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,gDAAgD,EACtF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,eAAe,EAC7C,KAAM,oDACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EACrF,MAAO,WACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,cAAc,EAC5C,KAAM,8CACV,EACA,CACI,WAAY,gBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,+CAA+C,EACrF,MAAO,WACP,gBAAiB,CACb,CAAE,MAAO,SAAU,KAAM,kBAAmB,EAC5C,CAAE,MAAO,WAAY,KAAM,YAAa,CAC5C,EACA,OAAQ,CACJ,qDACA,yDACJ,EACA,KAAM,mDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,wCAAwC,EAC9E,MAAO,YACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,MAAM,EACpC,KAAM,oDACV,EACA,CACI,WAAY,kBACZ,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,iDAAiD,EACvF,MAAO,aACP,OAAQ,KAAK,KAAK,QAAQ,IAAI,gBAAgB,EAC9C,KAAM,oDACV,CAAA,EAGE,aAAe,OAAO,aAC5B,GAAI,cAAc,SACd,OAAO,aAAa,QAGlB,MAAA,WAAa,OAAO,OAAO,WAAW,QAAS,OAAU,MAAM,OAAS,CAAA,CAAE,EAC5E,WAAW,SAAW,GAAK,KAAK,KAAK,WAAsB,WAAA,KAAK,KAAK,KAAK,SAAS,EACjF,MAAA,cAAgB,WAAW,CAAC,EAE5B,oBAAsB,CAAC,YAAa,MAAO,UAAU,EAC3D,GAAI,CAAC,eAAiB,CAAC,oBAAoB,SAAS,cAAc,IAAI,EAC3D,OAAA,GAAG,cAAc,KAAK,KAAK,KAAK,SAAS,GAAG,UAAU,2CAA2C,CAAC,EAGvG,MAAA,aAAe,eAAe,cAAe,UAAU,EAEvD,OAAmC,MAAM,QAAQ,SAAS,OACvD,IAAK,OAAU,MAAM,KAAK,EAC1B,OAAQ,OACE,oBAAoB,SAAS,OAAO,MAAQ,SAAS,CAC/D,GAAK,CAAA,EAER,MAAQ,KAAK,QAAQ,OAAO,SAAW,CAAA,EACvC,SAAW,MAAM,IAAK,OAAU,MAAM,EAAE,GAAK,GAE7C,gBAAkB,0BAA0B,MAAM,EAExD,GAAI,SAAS,SAAS,cAAc,EAAE,EAAG,CAC/B,MAAA,YAAc,0BAA0B,KAAK,EACpC,eAAA,YAAa,SAAU,YAAY,CACtD,CAGM,MAAA,MAAQ,IADE,EAAI,CAAC,GAAG,aAAa,OAAS,GAAK,KACtB,IAMvB,QAAU,KAAK,SAAS,IAAI,WAAY,YAAY,EAEpD,oBAAsB,gBAAgB,IAAI,cAAc,EAAE,GAAK,GAC/D,KAAO,aAAa,IAAI,CAAC,OAAQ,MACnC,iBAAiB,OAAQ,IAAK,cAAe,SAAU,mBAAmB,CAAA,EAGxE,aAAe,CACjB,UAAW,KAAK,OAAQ,OAAU,EAAE,MAAM,OAAO,cAAgB,MAAM,OAAO,gBAAgB,EAC9F,SAAU,KAAK,OAAQ,OAAU,MAAM,OAAO,YAAY,EAC1D,YAAa,KAAK,OAAQ,OAAU,MAAM,OAAO,eAAe,EAChE,OAAA,EAEE,QAAU,MAAM,eAAe,4DAA6D,YAAY,EAE9G,OAAO,aAAe,IAAI,OACtB,CACI,MAAO,KAAK,KAAK,OAAO,GAAG,UAAU,kCAAmC,CACpE,KAAM,cAAc,IAAA,CACvB,EACD,QACA,QAAS,CACL,MAAO,CACH,KAAM,+BACN,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,kCAAkC,CAC7E,CACJ,EACA,QAAS,QACT,OAAS,MAAS,CACR,MAAA,OAAUA,QAAA,CAAA,OAAQG,SAAU,CAC9B,MAAMM,QAAS,aAAa,OAAO,QAAQ,MAAM,EAC3C,QAAUA,QAAO,OACnB,GAAA,MAAM,QAAQ,OAAO,EAAG,CAClB,MAAA,UAAY,QAAQ,CAAC,EACrB,eAAiB,QAAQ,CAAC,EAC1B,KAAO,KAAK,MAAM,IAAI,cAAc,EACtC,KACA,KAAK,aAAa,EAAE,KAAM,WAAc,CAC9B,MAAA,WAAa,UAAU,KAAM,GAAM,EAAE,QAAQ,OAAS,SAAS,GAAG,SAAS,EAC7E,WACmB,IAAI,MAAM,UAAU,EAC5B,QAAQN,MAAK,EAExB,GAAG,cAAc,MACb,KAAK,KAAK,OAAO,GAAG,UAAU,0CAA2C,CACrE,SAAA,CACH,CAAA,CAET,CACH,EAED,GAAG,cAAc,MACb,KAAK,KAAK,OAAO,GAAG,UAAU,+CAAgD,CAC1E,cAAA,CACH,CAAA,CAET,SACO,OAAO,SAAY,SAAU,CAEpC,MAAM,SACF,OAAO,QAAQ,KAAO,OAAO,QAAQ,MAAQ,IACvC,EAAE,OAAO,SAAS,OAAO,QAAQ,GAAG,EAAI,GACxC,EACV,QACK,IAAI,CACD,MAAAA,OACA,sBAAuB,SACvB,WAAYA,OAAM,WAClB,GAAGM,QAAO,OAAA,CACb,EACA,KAAK,CAAA,KACP,CACH,MAAM,OAAS,UAAU,cAAeA,QAAO,KAAK,EAC9C,QACF,OAAO,QAAQ,KAAO,OAAO,QAAQ,MAAQ,IACvC,cAAc,OAAO,CAAC,EAAG,GAAI,OAAO,SAAS,OAAO,QAAQ,GAAG,CAAC,EAChE,KACN,QACWA,QAAO,OAAQ,CACtB,MAAAN,OACA,OAAQ,CAAC,aAAa,EACtB,UAAW,SAAS,UACpB,GAAG,SAAS,KAAA,CACf,EAEUM,QAAO,OAAQ,CACtB,MAAAN,OACA,OAAQ,CAAC,aAAa,EACtB,MAAOM,QAAO,MAAM,kBAAkB,CAAA,CACzC,CAET,CAAA,EA9DW,QAAA,EAgEf,GAAI,qBAAsB,KAAM,CAC5B,UAAW,UAAU,KAAK,iBAAiB,qBAAqB,EAC5D,OAAO,iBAAiB,QAAUN,QAAU,OAAO,OAAQA,MAAK,CAAC,EAErE,UAAW,aAAa,KAAK,iBAAiB,QAAQ,EACxC,UAAA,iBAAiB,QAAS,IAAM,CACtC,GAAK,QAKE,CACH,UAAW,UAAU,KAAK,iBAAiB,SAAS,EACzC,OAAA,UAAU,OAAO,QAAQ,EAGzB,UAAA,UAAU,KAAK,iBAAiB,aAAa,UAAU,QAAQ,GAAG,GAAG,EACrE,OAAA,UAAU,IAAI,QAAQ,CAErC,KAZI,WAAW,OAAO,KAAK,iBAAiB,gBAAgB,EAEhD,IAAI,QAAQ,MAAQ,UAAU,QAAQ,KAAS,IAAA,UAAU,OAAO,QAAQ,CAUpF,CACH,CAET,CACJ,CACJ,EACA,CAAE,OAAQ,GAAO,QAAS,CAAC,UAAW,YAAY,EAAG,MAAO,OAAQ,GAAM,UAAW,EAAK,CAAA,EAC5F,OAAO,EAAI,CACjB,CA7lBsB,8CAAAH,QAAA,kBAAA,mBAAA,EA+lBtB,SAAS,UAAU,cAA0B,eAA+C,CACxF,MAAM,OAAS,cAAc,OAC7B,OAAK,OACD,iBAAmB,OACZ,OAAO,OAAO,MAAM,EAAE,OAAQ,OAAU,QAAU,QAAa,MAAM,IAAI,EAEzE,CAAC,OAAO,cAAc,CAAC,EAAE,OAAQ,GAAgC,CAAC,CAAC,CAAC,EAJ3D,EAMxB,CARS,8BAAAA,QAAA,UAAA,WAAA,EAUT,SAAS,cAAc,MAA4B,MAA4C,IAAsB,CACjH,MAAM,SAAW,IAAI,KAAK,KAAK,SAAS,CACpC,MAAO,KAAK,KAAK,SAAS,4BAA4B,EACtD,SAAU,IACV,KAAM,SAAA,CACT,EACK,MAAQ,KAAK,KAAK,OAAO,4BAA6B,CAAE,QAAS,IAAK,EAC5E,OAAO,IAAI,QAAQ,MAAO,MAAO,MAAO,CAAC,QAAQ,CAAC,CACtD,CARS,sCAAAA,QAAA,cAAA,eAAA,EAUF,MAAM,OAAQ,OAAA,wBtBlwBrB,MsBkwBqB,CAAAA,QAAA,KAAA,SAAA,CAAA,CACjB,MACA,MACA,MACA,UACA,eAEA,YACI,MACA,MACA,MACA,UAA4B,CAAC,EAC7B,eAAiB,EACnB,CACE,KAAK,MAAQ,MACb,KAAK,MAAQ,MACb,KAAK,MAAQ,MACb,KAAK,UAAY,UACjB,KAAK,eAAiB,cAC1B,CACJ,CC9wBA,eAAsB,0BAA2B,CAE7C,MAAM,aAAe,GAAG,aACpB,IAAA,MACA,GAAA,cAAc,YAAY,OAAS,eAC3B,MAAA,aAAa,OAAO,OAAS,aAAa,UAC/C,CACH,MAAM,OAAS,OAAO,OAAO,WAAW,IAAK,GAAM,EAAE,KAAK,EAAE,OAAQ,GAAM,GAAG,SAAS,KAAK,CAAC,EACxF,QAAQ,SAAW,IACnB,MAAQ,OAAO,CAAC,EAExB,CAEM,MAAA,oBAAsB,OAAO,cAAc,UAAU,OAAQ,MAAS,KAAK,MAAM,EACjF,OAAS,qBAAqB,OAEhC,GAAA,CAAC,OAAS,SAAW,EAAG,CACrB,GAAA,cAAc,KAAK,KAAK,KAAK,SAAS,GAAG,UAAU,sDAAsD,CAAC,EAC7G,MACJ,CAEA,MAAM,UAAmB,CAAA,EACzB,QAAS,EAAI,EAAG,EAAI,OAAQ,IAAK,CACnB,UAAA,CAAC,EAAI,CAAE,MAAO,oBAAoB,CAAC,EAAE,KAAM,OAAQ,CAAA,GACpD,QAAA,GAAK,EAAG,GAAK,oBAAoB,CAAC,GAAG,QAAQ,UAAU,OAAQ,KACpE,UAAU,CAAC,EAAE,OAAO,KAAK,SAAW,oBAAoB,CAAC,EAAE,OAAO,SAAS,EAAE,EAAE,SAAW,GAAG,CAErG,CAEA,MAAM,QAAU,CACZ,KAAM,KAAK,KAAK,OAAO,GAAG,UAAU,yDAA0D,CAC1F,KAAM,MAAM,IAAA,CACf,EACD,QAAS;AAAA;AAAA;AAAA;AAAA,UAAA,EAOb,QAAS,GAAK,EAAG,GAAK,UAAU,OAAQ,KACpC,QAAQ,SAAW;AAAA;AAAA,cAEb,UAAU,EAAE,EAAE,KAAK;AAAA,iHACgF,UAAU,EAAE,EAAE,MAAM;AAAA;AAAA,EAIjI,QAAQ,SAAW,WAEnB,MAAM,QAAU,KAAK,QAAQ,QAAQ,QAAQ,IAAI,EAC7C,SACA,MAAM,QAAQ,SAEZ,MAAA,aAAa,OAAO,OAAO,CACrC,CAvDsB,4DAAAA,QAAA,yBAAA,0BAAA,ECFN,SAAA,gBAAgB,UAA0B,UAAY,EAAG,CACrE,MAAM,MAAQ,UAAU,MACpB,GAAA,OAAS,kBAAkB,KAAK,GAC5B,yBAAyB,MAAO,SAAS,EAAG,CAC5C,MAAM,eAAiB,GAAG,UAAU,OAAO,IAAI,QAAQ,KAAK,IACxD,oBAAoB,KAAK,EACrB,KAAK,IACD,MAAM,aAAa,SAAS,GAAG,OAAS,EACxC,MAAM,aAAa,QAAQ,GAAG,OAAS,EACvC,SACJ,EACJ,CACH,CAAA,sBAEW,YAAA,OACR,CACI,OAAQ,eACR,QAAU,OAAO,eAA2E,CAAC,EAA3D,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,CAC5F,EACA,CAAC,GACH,KAAK,EACJ,GAAA,cAAc,KAAK,cAAc,CACxC,CAER,CAxBgB,0CAAAA,QAAA,gBAAA,iBAAA,EA0BA,SAAA,yBAAyB,MAAO,UAAmB,CAC/D,MAAM,qBAAuB,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,EACnF,UAAY,CAAC,MAAO,SAAS,EAAE,SAAS,oBAAoB,GAAK,OAAO,eACxE,WAAa,CAAC,MAAO,IAAI,EAAE,SAAS,oBAAoB,GAAK,CAAC,OAAO,eAC3E,OAAQ,WAAa,aAAe,wBAAwB,MAAO,SAAS,CAChF,CALgB,4DAAAA,QAAA,yBAAA,0BAAA,EAOA,SAAA,wBAAwB,MAAO,UAAmB,CAC9D,OAAO,MAAM,aAAa,UAAW,SAAU,WAAW,GAAK,UAAY,CAC/E,CAFgB,0DAAAA,QAAA,wBAAA,yBAAA,EAIhB,SAAS,oBAAoB,MAAkB,CACpC,OAAA,MAAM,QAAQ,IAAI,QAAQ,EAAI,EAAI,GAAK,MAAM,aAAa,WAAW,EAAI,EAAI,EACxF,CAFS,kDAAAA,QAAA,oBAAA,qBAAA,EAIa,eAAA,kBAAkB,UAAW,OAAiC,CAC5E,GAAA,CAAC,WAAW,OAAU,SAAW,KAAK,KAAK,IAAM,CAAC,kBAAkB,WAAW,KAAK,EAC7E,MAAA,GAGX,IAAI,cAAgB,EACd,MAAA,OAAsB,CAAC,WAAW,MAAO,GAAG,sBAAsB,WAAW,KAAK,CAAC,EAEzF,UAAW,SAAS,OAAQ,CACxB,MAAM,QAAU,MAAM,aAAa,SAAS,GAAG,OAAS,EACxD,GAAI,QAAS,CACT,cAAgB,KAAK,IAAI,QAAS,oBAAoB,KAAK,CAAC,EAC5D,QAAS,EAAI,EAAG,EAAI,cAAe,IACzB,MAAA,OAAO,kBAAkB,SAAS,CAEhD,CACJ,CACO,OAAA,aACX,CAlBsB,8CAAAA,QAAA,kBAAA,mBAAA,EAoBN,SAAA,kBAAkB,QAA0B,QAA0B,CAClF,MAAM,QAAU,SAAS,OAAO,MAAM,SAAW,CAAA,EAEjD,GACI,QAAQ,OACR,kBAAkB,QAAQ,KAAK,GAC/B,QAAQ,OACR,QAAQ,MACR,CAAC,oBAAqB,aAAa,EAAE,SAAiB,QAAQ,IAAI,EACpE,CACQ,MAAA,QAAU,QAAQ,KAAK,QAC7B,GAAI,CAAC,SAAW,QAAQ,OAAS,EAAG,CAChC,MAAM,MAAQ,QAAQ,MAEtB,GAAI,UAAY,WAAY,CAClB,MAAA,KAAO,KAAK,KAAK,OAAO,GAAG,UAAU,mCAAoC,CAAE,KAAA,CAAO,EACrF,GAAA,cAAc,KAAK,IAAI,CAAA,SACnB,UAAY,aAAc,CAC3B,MAAA,MAAQ,KAAK,KAAK,OAAO,GAAG,UAAU,oCAAqC,CAAE,KAAA,CAAO,EACvF,UAAA,cAAc,MAAM,KAAK,EACrB,EACX,CACJ,CACJ,CACO,MAAA,EACX,CAzBgB,8CAAAA,QAAA,kBAAA,mBAAA,EC9DT,SAAS,4BAA4B,KAAmB,CACrD,MAAA,eAAiB,KAAK,iBAAiB,eAAe,EACxD,GAAA,eAAe,OAAS,EAAG,CAC3B,MAAM,WAAa,KAAK,KAAK,SAAS,GAAG,UAAU,aAAa,EAC5D,GAAA,OAAO,KAAK,SAAS,IAAI,WAAY,iCAAiC,CAAC,IAAM,mBAAoB,CACjG,eAAe,QAAS,SAAa,QAAQ,MAAS,QAAU,MAAO,EACvE,MAAM,oBAAuB,eAAe,CAAC,EAAkB,eAAe,SAI9E,GAHI,sBAAsB,CAAC,GACvB,oBAAoB,CAAC,EAAE,mBAAmB,YAAa,GAAG,EAE1D,KAAK,SAAS,IAAI,WAAY,yCAAyC,EAAG,CAC1E,MAAM,YAAqB,CAAA,EACrB,MAAQ,MAAM,KAAK,KAAK,qBAAqB,GAAG,CAAC,EACvD,UAAW,QAAQ,MAAO,CAChB,MAAA,YAAc,KAAK,cAAc,gBAAgB,EACnD,aAAe,aAAa,aAAa,cAAc,GAAG,SAAS,UAAU,GAC7E,YAAY,KAAK,IAAI,CAE7B,CAEM,MAAA,qBAAuB,KAAK,QAAQ,eAAe,EACrD,sBAAwB,YAAY,OAAS,IAC7C,YAAY,CAAC,EAAE,UAAU,IAAI,iBAAiB,EAEzB,qBAAA,OAAO,GAAG,WAAW,EAElD,CACJ,CACJ,CACK,KAAA,iBAAiB,QAAUG,QAAU,CACtC,MAAM,OAAUA,OAAM,OAAuB,QAAQ,IAAI,EACzD,GAAI,OAAQ,CACR,MAAM,QAA0C,OAC3C,QAAQ,eAAe,GACtB,cAAc,eAAe,EAC/B,UACAA,OAAM,eAAe,EACrB,QAAQ,MAAM,QAAU,QAAQ,MAAM,UAAY,OAAS,QAAU,OACjE,QAAQ,MAAM,UAAY,QAC1B,eAAe,QAASO,UAA0BA,SAAQ,MAAM,QAAU,MAAO,EAErF,WAAW,IAAI,EAEvB,CAAA,CACH,CACL,CA7CgB,kEAAAV,QAAA,4BAAA,6BAAA,EA+ChB,SAAS,WAAW,KAAmB,CAC7B,MAAA,OAAS,KAAK,iBAAiB,SAAS,EACxC,YAAc,KAAK,iBAAiB,eAAe,EACzD,UAAWW,QAAO,MAAM,KAAK,MAAM,EAC3B,KAAA,UAAU,OAAO,cAAc,EAC/B,KAAA,UAAU,OAAO,QAAQ,EAEjC,UAAWA,QAAO,MAAM,KAAK,WAAW,EAChC,KAAA,UAAU,OAAO,cAAc,EAC/B,KAAA,UAAU,OAAO,QAAQ,CAErC,CAXS,gCAAAX,QAAA,WAAA,YAAA,EAaT,SAAS,uBAAuB,KAAmB,CAC3C,IAAA,KACE,MAAA,QAAU,KAAK,iBAAiB,YAAY,EAClD,IAAK,QAAQ,MAAM,KAAK,OAAO,EAC3B,KAAK,MAAM,QAAU,KAAK,MAAM,UAAY,OAAS,QAAU,OAEnE,WAAW,IAAI,CACnB,CAPS,wDAAAA,QAAA,uBAAA,wBAAA,EASF,SAAS,kCAAkC,KAAmB,CAC3D,MAAA,UAAY,KAAK,iBAAiB,SAAS,EAC7C,GAAA,UAAU,OAAS,EAAG,CAChB,MAAA,UAAY,KAAK,iBAAiB,YAAY,EAChD,GAAA,UAAU,OAAS,EAAG,CAClB,GAAA,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IAAM,mBAAoB,CACvG,UAAW,QAAQ,MAAM,KAAK,SAAS,EAC9B,KAAA,MAAS,QAAU,OAG5B,MAAM,eAAkB,UAAU,CAAC,EAAkB,eAAe,SAChE,iBAAiB,CAAC,GAClB,eAAe,CAAC,EAAE,mBAAmB,YAAa,GAAG,CAE7D,CACK,KAAA,iBAAiB,QAAUG,QAAU,CACvBA,OAAM,QACT,QAAQ,2CAA2C,IAC3DA,OAAM,eAAe,EACrB,uBAAuB,IAAI,EAC/B,CACH,CACL,CACJ,CACJ,CAxBgB,8EAAAH,QAAA,kCAAA,mCAAA,EA0BhB,MAAM,IAAM,sFAEL,SAAS,kCAAkC,KAAmB,CAC3D,MAAA,YAAc,KAAK,iBAAiB,YAAY,EAClD,GAAA,YAAY,OAAS,EAAG,CACpB,GAAA,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IAAM,mBAAoB,CACvG,UAAW,QAAQ,YACV,KAAA,MAAS,QAAU,OAGhB,YAAA,CAAC,EAAE,YAAY,YAAY,SAAS,CAAC,EAAE,mBAAmB,YAAa,GAAG,CAC1F,CACK,KAAA,iBAAiB,QAAUG,QAAU,CACvBA,OAAM,OACV,QAAQ,2CAA2C,IAC1DA,OAAM,eAAe,EACrB,uBAAuB,IAAI,EAC/B,CACH,CACL,CACJ,CAlBgB,8EAAAH,QAAA,kCAAA,mCAAA,EAoBA,SAAA,iBAAiB,QAA0B,KAAmB,UAAmB,CACvF,MAAA,aAAe,KAAK,iBAAiB,eAAe,EACtD,YAAc,cACd,aAAa,QAAS,aAA8B,YAAY,MAAM,QAAU,OAAQ,EAExF,UAAU,WAAW,aAAa,GAClC,KAAK,SAAS,SACT,OAAO,oBAAoB,EAC3B,MAAM,CAAC,KAAK,IAAI,UAAU,SAAS,KAAK,EAAI,EAAI,EAAG,KAAK,SAAS,IAAI,CAAC,EACtE,OAAQ,GAAM,EAAE,KAAO,QAAQ,EAAE,EAAE,OAAS,GAEjD,aAAa,QAAS,aAA8B,YAAY,MAAM,QAAU,OAAQ,CAEhG,CAbgB,4CAAAA,QAAA,iBAAA,kBAAA,EAwBM,eAAA,gBAClB,MACA,cAAwB,OACpB,KAAK,SAAS,IAAI,WAAY,wDAAwD,CAC1F,EACA,gBAAuB,KAAK,SAAS,IACjC,WACA,sEACJ,EACA,aAAuB,OAAO,SAC1B,OAAO,KAAK,SAAS,IAAI,WAAY,uDAAuD,CAAC,CACjG,GAAK,GACL,WAAqB,OAAO,WACxB,OAAO,KAAK,SAAS,IAAI,WAAY,iEAAiE,CAAC,CAC3G,EACF,CAEM,iBACA,KAAK,SAAS,IACV,WACA,wDACA,MAAM,QAAQ,OAAO,OAAS,YAAA,EAGlC,aAAe,GAAK,eAAiB,KACrC,aAAe,aAAe,YAElC,MAAM,YAAqB,CAAA,EACrB,WAAa,OAAO,KAAK,OAAO,KAAK,YAAY,EACvD,GAAI,CAAC,OAAS,CAAC,MAAM,MACjB,OAEJ,MAAM,cAAwD,MAAM,KAChE,MAAM,OACA,OAAQ,MAEN,CAAC,QAAS,SAAU,aAAc,WAAY,OAAQ,YAAa,WAAY,QAAQ,EAAE,SACrF,KAAK,IACT,CAAA,EAEH,IAAK,MAAqC,IAAK,EAC/C,OAAQ,MAAS,KAAK,YAAY,EAClC,OAAQ,MAAS,CAAC,KAAK,WAAW,EAClC,OAAQ,MAAS,KAAK,OAAS,YAAY,EAC3C,OAAQ,MAAS,WAAW,QAAQ,KAAK,MAAM,GAAK,WAAW,QAAQ,aAAa,CAAC,EACrF,OAAQ,MAAS,KAAK,WAAa,KAAK,YAAY,CAAA,EAGlD,UAAA,QAAQ,eAAiB,GAChC,YAAY,KAAK,CACb,IAAK,KAAK,GACV,+BAAgC,eAChC,qCAAsC,KAAK,iBAAiB,cAAc,CAAA,CAC7E,EAEC,MAAA,MAAM,wBAAwB,OAAQ,WAAW,CAC3D,CAxDsB,0CAAAA,QAAA,gBAAA,iBAAA,ECvItB,eAAsB,eAAe,QAA0B,CAE3D,MAAM,SAAW,CACb,oBAAqB,OAAO,KAAK,SAAS,IAAI,WAAY,qBAAqB,CAAC,EAChF,wBAAyB,KAAK,SAAS,IAAI,WAAY,yBAAyB,EAChF,6BAA8B,KAAK,SAAS,IAAI,WAAY,8BAA8B,EAC1F,sCAAuC,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAA,EAI5G,GAAA,yBACI,QACA,CAAC,MAAO,SAAS,EAAE,SAAS,SAAS,mBAAmB,EACxD,CAAC,MAAO,IAAI,EAAE,SAAS,SAAS,mBAAmB,CAAA,EAEzD,CACQ,MAAA,UAA4B,QAAQ,MAAM,KAC1C,WAAqB,WAAW,QAAQ,KAE9C,GAAI,WAAY,CACZ,MAAM,aAAe,QAAQ,OAAO,OAAO,IAAY,QAAQ,QAAQ,KAAK,EACtE,MAAQ,cAAc,MAAQ,cAAc,MAAQ,KAAK,QAAQ,IAAY,QAAQ,QAAQ,KAAK,EAClG,SAAW,UAAU,SAAS,KAE9B,OAAc,WAAa,MAAM,SAAS,UAAU,EAAI,KACxD,cAAgB,QAAQ,QAAQ,IAAI,QAAQ,GAAK,GACjD,YAAc,QAAQ,QAAQ,SAAS,MAAQ,GAC/C,aAAe,OAAO,UAAU,SAAS,QAAQ,QAAQ,MAAM,KAAK,CAAC,GAAK,GAE1E,sBAAwB,WAAa,eAAiB,SAAS,wBAC/D,sBACF,SAAW,MACX,CAAC,eACD,UAAU,UAAY,MACtB,cACA,QAAQ,QAAQ,OAEd,0BACF,aACA,wBACC,SAAS,wCAA0C,aAChD,SAAS,wCAA0C,YAErD,6BACF,CAAC,aACD,wBACC,SAAS,wCAA0C,gBAChD,SAAS,wCAA0C,YAErD,mBAAqB,eAAiB,SAAS,8BAAgC,aAE/E,gBAAkB,kCAAkC,OAAO,EAC3D,UAAY,CAAC,kBAAmB,SAAS,EAAE,SAAS,eAAe,EACnE,UAAY,CAAC,kBAAmB,SAAS,EAAE,SAAS,eAAe,EAEnE,YADe,UAAU,SACF,SAAS,SAAS,oBAAoB,EAG7D,OADgB,MAAM,+BAA+B,EAAG,UAAU,IAC3C,MAGvB,yBADqB,KAAK,QAAQ,IAAI,oBAAoB,GAAG,QAEzC,KAAK,SAAS,IAAI,qBAAsB,0BAA0B,IAAM,KAC5F,+BACD,MAAM,oBAAoB,GAAG,SAAW,GAAK,GAAK,yBAGnD,QACC,8BACI,4BAA8B,WAAc,aAAe,kBAAoB,YAC/E,oBAAsB,YAC3B,CAAC,8BAED,MAAM,YAAY,UAAW,GAAyB,WAAY,OAAQ,QAAS,eAAe,EAC3F,OAAS,uBAAyB,WACnC,MAAA,eAAe,MAAO,QAAS,eAAe,CAE5D,CACJ,CACJ,CA/EsB,wCAAAA,QAAA,eAAA,gBAAA,EAwFtB,eAAsB,wBAAwB,QAA4C,CACtF,IAAI,WAAa,GACjB,GAAI,KAAK,QAAQ,IAAI,gBAAgB,GAAG,OAAQ,CAC5C,MAAM,UACF,QAAQ,OAAO,UAAU,UAAU,OAAQ,GAAM,CAAC,UAAW,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,GAAK,GAC3F,WACF,QAAQ,QAAQ,MAAM,UAAU,UAAU,OAAQ,GAC9C,CAAC,YAAa,SAAU,YAAa,YAAY,EAAE,SAAS,EAAE,IAAI,IACjE,GACT,GAAI,WAAW,OAAS,GAAK,YAAY,OAAS,EAAG,CAC3C,KAAA,CAAE,MAAO,KAAU,EAAA,QACrB,GAAA,CAAE,IAAS,EAAA,QACf,MAAM,MAAQ,QAAQ,MAAM,MAAM,QAAQ,MAAM,MAAM,YAAY,EAI9D,GAHA,CAAC,MAAQ,OAAS,MAAM,CAAC,IAAM,qBAC/B,KAAO,CAAE,KAAM,SAAU,KAAM,CAAG,CAAA,GAElC,OAAS,MAAQ,OAGb,CAAC,qBAAqB,OAAO,EAC/B,CACE,MAAM,IAAI,QAAS,SAAY,WAAW,QAAS,GAAG,CAAC,EACvD,MAAM,MAAQ,MAAM,KAAK,KAAK,QAAQ,EAChC,aAAe,MAAM,UAAW,KAAQ,IAAI,KAAO,QAAQ,EAAE,EAC/D,aAAe,KACF,WAAA,CAAC,MACT,MAAM,YAAY,EAClB,QAAQ,EACR,KAAM,KACI,IAAI,QAAQ,SAAS,gCAAgC,CAC/D,EAEb,CACJ,KAEO,QAAA,UAEf,CACO,OAAA,UACX,CAvCsB,0DAAAA,QAAA,wBAAA,yBAAA,EAyCf,SAAS,iBAAiB,QAAS,CACtC,MAAM,OAAS,QAAQ,OACjB,iBAAmB,QAAQ,SAAS,WAAa,KAAK,KAAK,SAAS,8BAA8B,CAAC,EAErG,GAAA,yBACI,QACA,CAAC,MAAO,SAAS,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,CAAC,EACzF,CAAC,MAAO,IAAI,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,CAAC,CACxF,GACA,QACA,kBACA,QAAQ,QAAQ,OAChB,QAAQ,OACR,QAAQ,MAAM,OAAS,GACvB,QAAQ,KAAO,KAAK,SAAS,SAAS,IAAI,GAAG,IAC7C,KAAK,SACJ,QAAQ,QAAQ,WAAY,mBAAmB,GAAK,IACvD,CACE,MAAM,MAAQ,OAAO,QAAQ,IAAI,QAAQ,QAAQ,KAAK,EAClD,OAAS,MAAM,SAEf,OAAO,OACD,YAAY,CACV,OAAQ,QAAQ,MAAM,CAAC,EACvB,MAAO,MAAM,QAAA,CAChB,EACA,KAAK,IAAM,QAAQ,QAAQ,WAAY,oBAAqB,EAAI,EAAE,KAAA,CAAM,EAEjF,MAAM,MAAQ,OAAO,MACrB,GAAI,OAAS,KAAK,SAAS,IAAI,WAAY,mCAAmC,EAAG,CAC7E,MAAM,UAAY,MAAM,WACnB,OAAQY,YAAcA,WAAU,OAAS,mBAAmB,EAC5D,KAAMA,YAAc,OAAO,SAASA,WAAU,IAAI,CAAC,EACpD,WAEU,UAAA,eAAe,MAEjC,CACJ,CACJ,CAvCgB,4CAAAZ,QAAA,iBAAA,kBAAA,EAyCA,SAAA,kBAAkB,QAAS,QAAkB,CACzD,GACI,SACA,yBACI,QACA,CAAC,MAAO,SAAS,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,CAAC,EACzF,CAAC,MAAO,IAAI,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,CAAC,CAAA,GAExF,QAAQ,QACR,QAAQ,OACR,KAAK,SACL,KAAK,QAAQ,QACb,KAAK,QAAQ,OAAO,WACpB,KAAK,QAAQ,OAAO,UAAU,OAC9B,QAAQ,KAAO,KAAK,SAAS,SAAS,IAAO,GAAA,KAC5C,QAAQ,QAAQ,WAAY,mBAAmB,GAAK,IACvD,CACE,MAAM,MAAQ,KAAK,QAAQ,OAAO,UAAU,MACxC,GAAA,OAAS,MAAM,QAAS,CAClB,MAAA,iBAAmB,KAAK,KAAK,SAC/B,GAAG,UAAU,mDAAA,EAEX,kBAAoB,KAAK,KAAK,SAChC,GAAG,UAAU,oDAAA,EAEjB,GAAI,CAAC,iBAAkB,iBAAiB,EAAE,KAAM,MAAS,QAAQ,QAAQ,SAAS,IAAI,CAAC,EAAG,CACtF,MAAM,QAAU,QAAQ,MAAM,OAAO,CAAC,IAAK,UAAY,KAAO,QAAQ,OAAS,GAAI,CAAC,EAAI,GACxF,MAAM,OACA,YAAY,CACV,OAAQ,QACR,MAAO,MAAM,OAAO,gBAAgB,EAAE,CAAC,EAAE,QAAA,CAC5C,EACA,KAAK,IAAM,QAAQ,QAAQ,WAAY,oBAAqB,EAAI,EAAE,KAAA,CAAM,CACjF,CACJ,CACJ,CACJ,CApCgB,8CAAAA,QAAA,kBAAA,mBAAA,EAsChB,SAAS,qBAAqB,QAAS,QAA0B,CAC7D,MAAM,gBAAkB,QACnB,OAAQ,KACE,KAAK,QAAQ,OAAO,MAAM,SAAS,QAAQ,CACrD,EACA,OAAQ,KACE,IAAI,KAAO,QAAQ,MAAM,EACnC,EAEC,QAAU,QAAQ,OAAO,QAAQ,SACjC,OAAQ,KACC,KAAK,OAAS,QACxB,EACA,OAAQ,KACE,KAAK,MAAM,KAAO,QAAQ,MAAM,EAC1C,EAEC,WAAa,gBAAgB,OAAO,OAAO,EAE7C,GAAA,WAAW,SAAW,EAEtB,OAAO,WAAW,CAAC,KACZ,WAAW,OAAS,GAAK,SAAW,SAAS,OAAS,EAAG,CAG1D,MAAA,EAAI,2BADK,KAAK,KAAK,SAAS,GAAG,UAAU,0CAA0C,CAC9C,WACrC,WAAa,QAAQ,QAAQ,MAAM,CAAC,EACtC,OAAA,YAAc,WAAW,CAAC,EACnB,QAAQ,KAAM,GAAyB,EAAE,QAAU,WAAW,CAAC,CAAC,EAGhE,IACX,KAGO,QAAA,IAEf,CArCS,oDAAAA,QAAA,qBAAA,sBAAA,EAuCT,eAAe,+BAA+B,wBAAiC,WAAoB,CAC/F,MAAM,WAAa,KAAK,UAAU,SAAS,QAAU,EAC5C,QAAA,EAAI,EAAG,GAAK,KAAK,IAAI,wBAA0B,EAAG,UAAU,EAAG,IAAK,CACzE,MAAM,aAAe,KAAK,UAAU,SAAS,WAAa,CAAC,EAC3D,GAAI,cAAiC,aAAa,MAAM,KAAM,QAAQ,OAAS,WACpE,OAAA,YAEf,CAEJ,CATe,wEAAAA,QAAA,+BAAA,gCAAA,EAWf,eAAe,oBAAoB,wBAAiC,WAAqC,CAErG,MAAM,OADe,MAAM,+BAA+B,wBAAyB,UAAU,IACjE,QAAQ,MAAM,yBAAyB,EAC/D,OAAA,OAAS,MAAM,CAAC,EACT,SAAS,MAAM,CAAC,CAAC,EAErB,CACX,CAPe,kDAAAA,QAAA,oBAAA,qBAAA,EASf,eAAe,YACX,MAGA,wBACA,WACA,OACA,QACA,gBACF,CACQ,MAAA,SAAW,MAAM,kBAAkB,OAAO,KAAM,MAAO,wBAAyB,WAAY,OAAO,MAAM,EAC3G,IAAA,MAAQ,qBAAqB,OAAO,EAGxC,GAFmB,MAAM,wBAAwB,OAAO,EAExC,CAEN,MAAA,OAAS,uBAAuB,QAAQ,EAGvB,OAAS,KAAK,SAAS,IAAI,WAAY,0BAA0B,IAE5E,MAAA,IAER,QAAQ,OAAO,MAAM,QAAQ,SAAS,UAAU,OAAS,EAOzD,MANgB,OAAO,YAAY,CAC/B,SAEA,WAAY,CAAC,QAAQ,MAAM,KAAK,OAAO,QAAQ,SAAS,CAAC,CAAC,CAAA,CAC7D,EAEa,WAAW,CACrB,QAAS,gBACT,OACA,QAAS,KAAA,CACZ,EAGD,MAAM,QAAQ,WAAW,CACrB,QAAS,gBACT,OACA,QAAS,KAAA,CACZ,CAET,CACJ,CA5Ce,kCAAAA,QAAA,YAAA,aAAA,EA8Cf,eAAe,kBACX,UACA,MACA,wBACA,WACA,OACe,CACX,IAAA,SAAmB,MAAM,QAAQ,SAAW,OAAO,MAAM,QAAQ,QAAQ,EAAI,EACjF,OAAI,WAAa,IACF,SAAA,MAAM,oBAAoB,wBAAyB,UAAU,GAExE,WAAa,IACT,KAAK,SAAS,IAAI,WAAY,yCAAyC,GACvE,GAAG,cAAc,KAAK,KAAK,KAAK,OAAO,GAAG,UAAU,qBAAsB,CAAE,MAAO,SAAU,CAAC,CAAC,EAGxF,SAAA,OAAO,MAAM,OAAS,GAE9B,QACX,CAnBe,8CAAAA,QAAA,kBAAA,mBAAA,EAqBf,SAAS,qBAAqB,QAAuB,CACjD,MAAM,iBAAmB,KAAK,SAAS,IAAI,OAAQ,UAAU,EAC7D,QACM,SAAS,OAAS,MAAM,mBAAmB,SACzC,SAAS,OACR,SAAS,SAAW,SAAS,QAAQ,OAAS,IAC/C,mBAAqB,MAAM,gBAAgB,UAC/C,EAER,CATS,oDAAAA,QAAA,qBAAA,sBAAA,EAWT,SAAS,uBAAuB,SAAkC,CACxD,MAAA,OAAS,SAAS,cAAc,KAAK,EACpC,cAAA,QAAQ,SAAW,SAAS,SAAS,EAC5C,OAAO,QAAU,KACN,CAAE,QAAS,CAAE,QAAA,IAEjB,MACX,CAPS,wDAAAA,QAAA,uBAAA,wBAAA,EAST,eAAe,eAAe,MAAO,QAAS,gBAAyB,CACnE,MAAM,QAAU,OAAO,eAAe,CAAC,MAAO,aAAa,CAAC,EAEtD,aADe,SAAS,KAAM,QAAW,OAAO,MAAM,aAAa,CAAC,GACvC,QAAQ,UAAW,SAAS,EAE/D,SAAS,KAAK,YAAY,EAE1B,MAAM,aAAe,QAAQ,MAAM,KAAK,SAAW,KAE7C,aACF,cAAgB,iBAAkB,cAAgB,CAAC,EAAG,EAAG,CAAC,EAAE,SAAiB,aAAa,YAAY,EAChG,aAAa,aACb,KACJ,SAAW,cAAgB,aAAc,aAAe,aAAa,SAAW,KAChF,OAAS,QAAQ,QAAQ,OAAO,QAAU,KAC1C,QAAU,OAAO,QAAQ,QAK/B,GAHI,CAAC,SAAW,QAAQ,SAAW,GAG/B,CADe,MAAM,wBAAwB,OAAO,EACvC,OAEX,MAAA,OAAS,qBAAqB,QAAS,OAAO,EAEhD,GAAA,QAAU,OAAO,OAAS,SAEnB,OAAA,OADQ,kBAAoB,UAAY,SAAW,UACtC,IAAI,CAAE,MAAO,SAAU,aAAc,aAAc,OAAQ,OAAA,CAAS,EAG5F,MAAM,2BAA2B,MAAO,QAAS,gBAAiB,YAAY,CAClF,CA9Be,wCAAAA,QAAA,eAAA,gBAAA,EAgCf,eAAe,2BAA2B,MAAO,QAAS,gBAAiB,aAAc,CAC/E,MAAA,KAAO,QAAQ,MAAM,KAAM,GAAM,EAAE,SAAS,SAAW,iBAAiB,EAC9E,GAAI,MAAQ,MAAM,SAAS,WAAW,EAAG,CAC/B,MAAA,WAAqB,MAAM,QAAQ,WACnC,CAAC,QAAS,WAAY,cAAe,UAAU,EAA4B,YAAY,MAAM,GAAG,GAAK,GAEvG,GAAA,aAAa,OAAO,KAAK,cAAe,OAAO,GAAK,aAAa,OAAO,KAAK,YAAa,UAAU,EAAG,CACvG,MAAM,OAAc,CAChB,QACA,WACA,MAAO,gBAAkB,QACzB,WAAY,OAAO,UAAU,GAAK,EAClC,aACA,QAAS,gBACT,KAAA,EAEJ,MAAM,IAAI,KAAK,KAAK,eAAe,KAAK,EAAE,OAAO,MAAM,CAC3D,CACJ,CAEJ,CApBe,gEAAAA,QAAA,2BAAA,4BAAA,ECxYO,eAAA,iBAAiB,UAA0B,OAAgB,CAC7E,GAAI,CAAC,WAAa,CAAC,UAAU,OAAU,SAAW,KAAK,KAAK,IAAM,CAAC,kBAAkB,UAAU,KAAK,EAChG,OAGE,MAAA,OAAsB,CAAC,UAAU,MAAO,GAAG,sBAAsB,UAAU,KAAK,CAAC,EAEvF,UAAW,SAAS,OAAQ,CACxB,MAAM,kBAA6B,OAAO,QAAQ,WAAY,0BAA0B,GAAK,EACvF,WAAa,MAAM,aAAa,YAAY,EAC5C,kBAAoB,YAAY,OAAS,EAE/C,GAAI,YAAc,kBAAoB,GAAK,CAAC,WAAW,SAAU,CACvD,MAAA,SAAW,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,qBAAqB,EAAI,EAAI,EAEhG,QAAS,EAAI,EAAG,EAAI,UAAY,kBAAoB,EAAI,kBAAmB,IACjE,MAAA,MAAM,kBAAkB,YAAY,CAElD,CACJ,CACJ,CApBsB,4CAAAA,QAAA,iBAAA,kBAAA,ECGf,SAAS,gCACZ,MACA,OACA,eACA,SACA,cACF,CACE,MAAM,cAAgB,OAAO,KAAK,SAAS,IAAI,WAAY,qBAAqB,CAAC,EAC3E,iBACF,KAAK,SACH,gBAAkB,6BAA+B,MAAM,OAAS,gBAC7D,gBAAkB,eAAiB,CAAC,eAAgB,QAAQ,EAAE,SAAS,MAAM,IAAI,GACpF,gBAAkB,OAAO,KAAK,SAAS,IAAI,WAAY,oCAAoC,CAAC,EAC5F,sBAAwB,OAAO,KAAK,SAAS,IAAI,WAAY,0CAA0C,CAAC,EAE1G,eAAiB,CAAC,cAAc,WAAW,IAAI,EAC3B,oBAAA,MAAO,cAAG,UAAU,MAAM,EAAG,eAAgB,SAAU,aAAa,EAAE,KACrF,gBAAmB,CAChB,SAAS,0CAA0C,EAC/C,eACI,iBAAmB,CAAC,gBAAgB,WAAW,IAAI,EAE/C,IAAA,QAAS,SAAY,WAAW,QAAS,GAAG,CAAC,EAAE,KAAK,IAAM,CAC1D,mCACI,MACA,gBAAkB,GAAK,eACvB,eACJ,EAAE,KAAK,IAAM,CACT,SAAS,uDAAuD,EAC5D,uBACA,yCACI,MACA,gBAAkB,GAAK,gBACzB,KAAK,CACX,CACH,CAAA,CACJ,EAEG,uBACA,yCACI,MACA,gBAAkB,GAAK,gBACzB,KAAK,EAIX,kBAAoB,eAAiB,GAAK,UAAY,GACtD,aAAa,KAAK,CAG9B,CAAA,EAGA,gBAAkB,GAAK,SAAW,EAC9B,iBAAmB,CAAC,gBAAgB,WAAW,IAAI,EACnD,mCAAmC,MAAO,gBAAkB,EAAG,eAAe,EAAE,KAAK,IAAM,CACnF,uBACA,yCAAyC,MAAO,gBAAkB,CAAC,EAAE,KAAK,CAC9E,CACH,EAEG,uBACA,yCAAyC,MAAO,gBAAkB,CAAC,EAAE,KAAK,EAG3E,kBAAoB,eAAiB,GAAK,UAAY,GAC7D,aAAa,KAAK,CAG9B,CArEgB,0EAAAA,QAAA,gCAAA,iCAAA,EAuEhB,eAAsB,qBAAqB,KAAgB,CACnD,UAAe,GAAA,KAAK,OAAS,SAAW,KAAK,QAC7C,YAAY,EAAG,EAAG,KAAK,OAAQ,EAAK,EAGxC,MAAM,YAAc,KAAK,SAAS,IAAI,WAAY,6BAA6B,EACzE,gBAAkB,KAAK,SAAS,IAAI,WAAY,oCAAoC,GACtF,aAAe,mBACX,YAC4B,4BAAA,IAAI,EAAE,KAAK,IAAM,CACzC,SAAS,gDAAgD,EACrD,iBACmC,mCAAA,IAAI,EAAE,KAAK,IAAM,CAChD,SAAS,uDAAuD,CAAA,CACnE,CACL,CACH,EACM,iBACP,MAAM,mCAAmC,IAAI,EAGzD,CArBsB,oDAAAA,QAAA,qBAAA,sBAAA,EAuBN,SAAA,wBAAwB,QAA0B,QAAkB,CAChF,MAAM,OAAS,QAAQ,OACjB,MAAQ,QAAQ,MACtB,GACI,SACA,yBACI,QACA,CAAC,MAAO,SAAS,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,8BAA8B,CAAC,CAAC,EACjG,CAAC,MAAO,IAAI,EAAE,SAAS,OAAO,KAAK,SAAS,IAAI,WAAY,8BAA8B,CAAC,CAAC,CAAA,IAE/F,OAAO,SAAS,KAAK,KAAK,SAAS,2BAA2B,CAAC,GAC5D,OAAO,SAAS,KAAK,KAAK,SAAS,2BAA2B,CAAC,GAC/D,OAAO,SAAS,KAAK,KAAK,SAAS,uBAAuB,CAAC,GAC3D,OAAO,SAAS,KAAK,KAAK,SAAS,uBAAuB,CAAC,IAC/D,QAAQ,KAAO,KAAK,SAAS,SAAS,IAAI,GAAG,IAC7C,OACA,MAAM,OACN,MAAM,QACR,CACE,MAAM,QAAU,QAAQ,OAAO,MAAM,SAAS,SAAW,GAEnD,aAAe,QAAQ,OAAO,OAAO,IAAY,QAAQ,QAAQ,KAAK,EACtE,MAAQ,cAAc,MAAQ,cAAc,MAAQ,KAAK,QAAQ,IAAY,QAAQ,QAAQ,KAAK,EAElG,qBAAuB,MAAM,OAAO,aAAa,OAAO,GAAG,OAAS,EAC1E,IAAI,aAAe,EACf,cAAgB,GACpB,OAAQ,QAAS,CACb,IAAK,kBACD,aAAe,aAAe,EACd,cAAA,KAAK,KAAK,SAAS,kBAAkB,EACrD,MACJ,IAAK,kBACD,aAAe,aAAe,EACd,cAAA,KAAK,KAAK,SAAS,kBAAkB,EACrD,MACJ,IAAK,UACD,aAAe,aAAe,EACd,cAAA,KAAK,KAAK,SAAS,cAAc,EACjD,MACJ,IAAK,UACe,cAAA,KAAK,KAAK,SAAS,cAAc,EACjD,aAAe,aAAe,EAC9B,KACR,CACI,GAAA,qBAAuB,GAAK,eAAiB,EAAG,CACpC,YAAA,aAAc,qBAAsB,KAAK,EAE/C,MAAA,MAAQ,QAAQ,MAAM,OAAO,CAACa,OAAO,OAASA,OAAQ,KAAK,MAAO,CAAC,EACzE,YAAY,OAAO,CACf,OAAQ,KAAK,KAAK,OAAO,GAAG,UAAU,4CAA6C,CAC/E,QAAS,cACT,SAAU,MAAM,WAAW,SACrB,KAAK,KAAK,OAAO,GAAG,UAAU,6CAA8C,CACxE,KAAM,MAAM,OAAO,MAAQ,KAC9B,CAAA,EACD,GACN,KAAM,KAAA,CACT,EACD,QAAS,QAAQ,OAAA,CACpB,EAAE,KAAK,EACR,QAAQ,OAAO,CAAE,OAAQ,EAAO,CAAA,EAAE,MACtC,CACJ,CACJ,CAhEgB,0DAAAb,QAAA,wBAAA,yBAAA,EAkET,SAAS,YACZ,aACA,qBACA,MACA,WAAkB,MAAM,WAAW,SACrC,CAEQ,MAAA,UAAY,qBAAuB,cAAgB,MAAM,OAAO,WAAW,MAAM,KAAO,CAAC,WACzF,kBAAoB,qBAAuB,aAAe,GAAK,CAAC,WAClE,UACA,MACK,kBAAkB,QAAS,CACxB,IAAK,MAAM,OAAO,WAAW,MAAM,IACnC,MAAO,MAAM,OAAO,WAAW,MAAM,GAAA,CACxC,EACA,KAAK,IAAM,CACR,MAAM,WAAW,eAAiB,EAAA,KAAK,IAAM,CAGpC,MAAA,UAAU,WAAY,kBAAkB,EACxC,KAAK,IAAM,QAAQ,IAAI,uCAAuC,CAAC,CAAA,CACvE,CAAA,CACJ,EACE,kBACP,MACK,kBAAkB,QAAS,CACxB,IAAK,MAAM,OAAO,WAAW,MAAM,IACnC,MAAO,KAAK,IAAI,aAAc,MAAM,OAAO,WAAW,MAAM,GAAG,CAAA,CAClE,EACA,KAAK,IAAM,CACF,MAAA,MAAQ,MAAM,aAAa,OAAO,EACxC,QAAQ,IAAI,oBAAoB,oBAAoB,OAAO,MAAM,KAAK,EAAE,EAClE,MAAA,IAAM,KAAK,MACjB,OAAO,MAAM,QAAQ,WAAY,mBAAoB,GAAG,EAAE,KAAK,IAAM,CACzD,QAAA,IACJ,2BAA2B,GAAG,sBAAsB,oBAAoB,OAAO,MAAM,KAAK,EAAA,CAC9F,CACH,CAAA,CACJ,EAEC,MAAA,kBAAkB,QAAS,CAAE,YAAa,EAAM,CAAA,EAAE,KAAK,IAClD,MACF,UAAU,WAAY,kBAAkB,EACxC,KAAK,IAAM,QAAQ,IAAI,4CAA4C,CAAC,CAC5E,CAET,CA9CgB,kCAAAA,QAAA,YAAA,aAAA,EAgDM,eAAA,mCAClB,MACA,YACA,gBACgB,CACV,MAAA,MAAQ,MAAM,aAAa,OAAO,EACxC,GAAI,kBAAkB,KAAK,GAAK,OAAS,CAAC,MAAM,UAAY,YAAa,CAC/D,MAAA,MAAQ,OAAO,OAAS,EAC1B,OAAS,MAAQ,GAAK,CAAC,MAAM,WACzB,iBAAgB,SAAS,eAAe,GAAI,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,IAC7E,YAAA,EAAG,EAAG,KAAK,CAGnC,CACO,MAAA,EACX,CAfsB,gFAAAA,QAAA,mCAAA,oCAAA,EAiBA,eAAA,yCAClB,MACA,kBACa,CACP,MAAA,YAAc,MAAM,aAAa,aAAa,EAChD,kBAAkB,KAAK,GAAK,mBAAqB,aAAe,CAAC,YAAY,UAC7E,MAAM,MAAM,kBAAkB,cAAe,CAAE,YAAa,GAAM,CAE1E,CARsB,4FAAAA,QAAA,yCAAA,0CAAA,EAUf,SAAS,oBAAoB,MAAqC,CACrE,MAAM,SAAW,KAAK,SAAS,SAAS,MAAM,CAAC,KAAK,IAAI,GAAI,KAAK,SAAS,IAAI,CAAC,EAC/E,OAAO,KAAK,SAAS,IAAI,WAAY,+BAA+B,EAC9D,SACA,SAAS,OAAQ,SAAY,QAAQ,QAAQ,MAAM,KAAO,MAAM,EAAE,CAC5E,CALgB,kDAAAA,QAAA,oBAAA,qBAAA,EAOhB,SAAS,4BAA4B,SAA6B,YAAwC,CAC/F,OAAA,SAAS,OAAQ,SAAY,QAAQ,MAAM,KAAK,SAAS,OAAS,WAAW,CACxF,CAFS,kEAAAA,QAAA,4BAAA,6BAAA,EAIT,SAAS,+BAA+B,SAAgD,CAC7E,OAAA,SAAS,OAAQ,SAAY,QAAQ,MAAM,KAAK,QAAQ,QAAQ,CAC3E,CAFS,wEAAAA,QAAA,+BAAA,gCAAA,EAIT,SAAS,2BAA2B,SAAgD,CAChF,OAAO,SAAS,OAAQ,SAAY,QAAQ,QAAQ,OAAS,QAAQ,OAAO,UAAU,QAAQ,QAAQ,KAAK,CAAC,CAChH,CAFS,gEAAAA,QAAA,2BAAA,4BAAA,EAIT,SAAS,uCACL,SACA,MAC2B,CACpB,OAAA,SAAS,SAAU,SAAY,QAAQ,QAAQ,CAAC,GAAG,OAAS,KAAK,CAC5E,CALS,wFAAAA,QAAA,uCAAA,wCAAA,EAOO,SAAA,+CAA+C,MAAkB,OAAyB,CAChG,MAAA,GAAK,MAAM,WAAW,GAExB,GAAA,IACA,GAAG,OACH,KAAK,SAAS,SAAS,OAAS,IAC/B,GAAC,OAAO,WAAW,IAAI,GAAK,OAAO,SAAS,eAAe,IACtD,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,GAErD,CACQ,MAAA,SAAW,oBAAoB,KAAK,EACpC,aAAe,4BAA4B,SAAU,aAAa,EAClE,iBAAmB,+BAA+B,YAAY,EAC9D,gBAAkB,2BAA2B,gBAAgB,EAC7D,gBAAkB,gCAAgC,eAAe,EACjE,UAAY,uCAAuC,gBAAiB,GAAG,KAAK,EAC5E,gBAAkB,YAAc,cAAc,QAAU,EAAA,CAAC,EAAI,UAAY,KACxE,OAAA,iBAAoB,IAC/B,CACO,MAAA,EACX,CApBgB,wGAAAA,QAAA,+CAAA,gDAAA,EAsBhB,SAAS,gCAAgC,SAAgD,CAC9E,OAAA,SAAS,OAAQ,SAAY,QAAQ,MAAM,KAAK,SAAS,UAAY,iBAAiB,CACjG,CAFS,0EAAAA,QAAA,gCAAA,iCAAA,EAIO,SAAA,kBACZ,MACA,OACA,gBACA,KACA,sBAAwB,GACxB,eAAiB,GACnB,CACQ,MAAA,YAAc,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,cAAc,EAC9E,gBAAuB,MAAM,UAAU,OAAO,KAAM,QAAW,OAAO,OAAS,mBAAmB,EAClG,mBAAqB,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,qBAAqB,EAC5F,gBAAkB,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,kBAAkB,EACtF,kBAAoB,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,oBAAoB,EAChG,GAAI,cAAgB,CAAC,iBAAmB,gBAAgB,WAAY,CAC7D,QAAA,MAAA,YAAY,OAAQ,6BAA8B,CAAC,EAClD,iBACG,QAAA,MAAA,YAAY,OAAQ,4BAA6B,KAAK,IAAI,MAAM,MAAO,MAAM,WAAW,MAAQ,CAAC,CAAC,EAGjF,sBAAA,GAExB,MAAM,OAAc,CAChB,KAAM,SACN,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0BAA0B,EAChE,IAAK,mEACL,OAAQ,CACJ,KAAM,oBACN,UAAW,CACP,KAAM,EACV,EACA,SAAU,CACN,MAAO,mBAAqB,EAAI,GAChC,KAAM,QACN,UAAW,GACX,OAAQ,YACZ,CACJ,CAAA,EAEJ,gBAAgB,KAAK,MAAM,EAEvB,mBACA,YAAY,OAAO,CACf,OAAQ,KAAK,KAAK,OAAO,GAAG,UAAU,qDAAsD,CACxF,IAAA,CACH,EACD,QAAS,YAAY,WAAW,CAAE,MAAmB,EACrD,QACI,KAAK,SAAS,IAAI,OAAQ,uBAAuB,GAAK,CAAC,OAAO,eACxD,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,EACtD,CAAC,CAAA,CACd,EAAE,KAAK,EAGK,eAAA,EACrB,CACO,MAAA,CAAE,sBAAuB,eACpC,CAxDgB,8CAAAA,QAAA,kBAAA,mBAAA,EA0DA,SAAA,sBAAsB,MAAkB,gBAAwB,KAAc,CACpF,MAAA,gBAAkB,MAAM,UAAU,KAAK,KAAM,MAAS,KAAK,OAAS,kBAAkB,EACtF,oBAA2B,MAAM,UAAU,OAAO,KAAM,QAAW,OAAO,OAAS,uBAAuB,EAChH,GAAI,kBAAoB,CAAC,qBAAuB,oBAAoB,WAAY,CAC5E,MAAM,OAAc,CAChB,KAAM,SACN,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,8BAA8B,EACpE,IAAK,oDACL,OAAQ,CACJ,KAAM,wBACN,UAAW,CACP,KAAM,EACV,EACA,SAAU,CACN,MAAO,GACP,KAAM,QACN,UAAW,GACX,OAAQ,YACZ,CACJ,CAAA,EAEJ,gBAAgB,KAAK,MAAM,EAE3B,YAAY,OAAO,CACf,OAAQ,KAAK,KAAK,OAAO,GAAG,UAAU,yDAA0D,CAC5F,IAAA,CACH,EACD,QAAS,YAAY,WAAW,CAAE,MAAmB,EACrD,QACI,KAAK,SAAS,IAAI,OAAQ,uBAAuB,GAAK,CAAC,OAAO,eACxD,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,EACtD,CAAC,CAAA,CACd,EAAE,KAAK,CACZ,CACJ,CAlCgB,sDAAAA,QAAA,sBAAA,uBAAA,EAoChB,eAAsB,oBAClB,MACA,OACA,GACA,SACA,cACgB,CAChB,GAAI,CAAC,kBAAkB,KAAK,GAAK,IAAM,GAAK,SAAW,EACnD,OAAO,SAAW,EAGtB,MAAM,KAAO,GAAG,MAAM,OAAO,MAAQ,MAAM,IAAI,GAC/C,IAAI,sBAAwB,GACxB,aAAe,EACf,eAAiB,GACrB,MAAM,gBAAyB,CAAA,EACzB,gBAAkB,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,EAE9E,MAAQ,kBAAkB,MAAO,OAAQ,gBAAiB,KAAM,sBAAuB,cAAc,EAC3G,6BAAwB,MAAM,sBAC9B,eAAiB,MAAM,eAED,sBAAA,MAAO,gBAAiB,IAAI,EAG9C,CAAC,iBACA,eAAc,SAAS,eAAe,GAAI,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,KAEpF,eAAe,WAAW,iBAAiB,EAC3C,cAAgB,MAAM,aAAa,SAAS,GAAG,OAAS,GAAK,EAE9C,aAAA,GAInB,+CAA+C,MAAO,aAAa,IACnD,cAAA,GAGhB,gBACM,MAAA,MAAM,OAAO,MAAM,EAGzB,uBACM,MAAA,MAAM,kBAAkB,SAAS,GAIvC,QAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,EAAE,SAAS,eAAe,GAChF,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,IAG/C,CAAC,gBAAkB,sCAAsC,MAAO,eAAe,IAC1E,MAAM,aAAa,aAAa,GAC3B,MAAA,MAAM,gBAAgB,aAAa,EAE9B,aAAA,GAIX,YAAA,aAAc,EAAG,KAAK,EAE9B,gBAAgB,OAAS,GACnB,MAAA,MAAM,wBAAwB,OAAQ,eAAe,EAGxD,cACX,CAnEsB,kDAAAA,QAAA,oBAAA,qBAAA,EAqEtB,eAAsB,4BAA4B,KAAgB,CAC9D,MAAM,MAAQ,KAAK,OACnB,GAAI,UAAU,GAAK,KAAK,OAAS,SAAW,MAAO,CAC/C,MAAM,MAAa,MAAM,MACzB,IAAI,WAAkB,GAClB,eAAsB,GACtB,YAAmB,GACnB,gBAAuB,GACvB,QACA,WAAa,MAAM,KAAM,MAAS,KAAK,OAAS,aAAa,EAC5C,eAAA,MAAM,UAAU,OAAO,KAAM,QAAW,OAAO,OAAS,kBAAkB,GAAK,GAEhG,YAAc,MAAM,KAAM,MAAS,KAAK,OAAS,eAAe,EAC9C,gBAAA,MAAM,UAAU,OAAO,KAAM,QAAW,OAAO,OAAS,oBAAoB,GAAK,IAEvG,MAAM,KAAO,GAAG,MAAM,OAAO,MAAQ,MAAM,IAAI,GAE/C,GAAI,cAAgB,CAAC,iBAAmB,eAAe,WAAY,CAC/D,MAAM,OAAc,CAChB,KAAM,SACN,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,0BAA0B,EAChE,IAAK,iDACL,OAAQ,CACJ,KAAM,qBACN,UAAW,CACP,KAAM,EACV,EACA,SAAU,CACN,MAAO,GACP,KAAM,QACN,UAAW,GACX,OAAQ,YACZ,CACJ,CAAA,EAGJ,YAAY,OAAO,CACf,OAAQ,KAAK,KAAK,OAAO,GAAG,UAAU,2DAA4D,CAC9F,IAAA,CACH,EACD,QAAS,YAAY,WAAW,CAAE,MAAY,MAAM,MAAO,EAC3D,QACI,KAAK,SAAS,IAAI,OAAQ,uBAAuB,GAAK,CAAC,OAAO,eACxD,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,EACtD,CAAC,CAAA,CACd,EAAE,KAAK,EAER,MAAM,MAAM,wBAAwB,OAAQ,CAAC,MAAM,CAAC,CAC7C,SAAA,aAAe,CAAC,gBAAkB,eAAe,WAAY,CACpE,MAAM,OAAc,CAChB,KAAM,SACN,KAAM,KAAK,KAAK,SAAS,GAAG,UAAU,yBAAyB,EAC/D,IAAK,uCACL,OAAQ,CACJ,KAAM,mBACN,UAAW,CACP,KAAM,EACV,EACA,SAAU,CACN,MAAO,GACP,KAAM,QACN,UAAW,GACX,OAAQ,YACZ,CACJ,CAAA,EAGJ,MAAM,MAAM,wBAAwB,OAAQ,CAAC,MAAM,CAAC,CAAA,MAE9C,MAAA,KAAK,QAAQ,kBAAkB,SAAS,CAEtD,CACJ,CAxEsB,kEAAAA,QAAA,4BAAA,6BAAA,EA0EtB,eAAsB,mCAAmC,KAAgB,CACrE,MAAM,MAAmB,KAAK,OAE1B,UAAA,GACA,KAAK,OAAS,SACd,KAAK,SAAS,IAAI,WAAY,oCAAoC,GAChD,MAAM,OAAQ,YAAY,IAAI,QAAU,GAC1D,CAAC,MAAM,aAAa,aAAa,IAE5B,MAAM,aAAa,aAAa,GAC3B,MAAA,KAAK,QAAQ,gBAAgB,aAAa,EAG5D,CAbsB,gFAAAA,QAAA,mCAAA,oCAAA,EAef,SAAS,sCAAsC,QAA0B,CAC5E,MAAM,cAAgB,OAAO,KAAK,SAAS,IAAI,WAAY,6CAA6C,CAAC,EACzG,GAAI,eAAiB,CAAC,cAAc,WAAW,IAAI,EAAG,CAClD,MAAM,MAAQ,QAAQ,MAClB,GAAA,OAAS,kBAAkB,KAAK,GAC5B,QAAQ,SAAS,SAAS,cAAc,EAAG,CACrC,MAAA,IAAM,KAAK,MACX,KAAe,MAAM,QAAQ,WAAY,kBAAkB,GAAK,IAKtE,GAJA,QAAQ,IAAI,uBAAuB,IAAI,YAAY,GAAG,EAAE,EAGrC,CAAC,MAAM,QAAQ,IAAM,IAAM,GAAG,EACjC,CACZ,MAAM,qBAAuB,OAAO,aAAa,OAAO,GAAG,OAAS,EACpE,IAAI,aAAe,EACnB,GAAI,CAAC,cAAc,WAAW,IAAI,GAAK,qBAAuB,EAAG,CACvD,MAAA,YAAc,+CAA+C,MAAO,aAAa,GAGnF,eAAc,SAAS,eAAe,GAChC,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,KAGnD,aAAe,aAAe,EAE1B,cACA,aAAe,aAAe,IAG9B,QAAA,IACJ,0CAA0C,IAAI,YAAY,GAAG,sBAAsB,oBAAoB,qBAAqB,YAAY,EAAA,EAGhI,YAAA,aAAc,qBAAsB,KAAK,CACzD,CACJ,CACJ,CAER,CACJ,CAvCgB,sFAAAA,QAAA,sCAAA,uCAAA,EAyCA,SAAA,sCAAsC,MAAkB,OAAyB,CACvF,MAAA,GAAK,MAAM,WAAW,GAExB,GAAA,IACA,GAAG,OACH,KAAK,SAAS,SAAS,OAAS,GAChC,CAAC,OAAO,WAAW,IAAI,IACtB,QAAO,SAAS,eAAe,GAAI,CAAC,YAAa,UAAU,EAAE,SAAS,MAAM,IAAI,GACnF,CAEQ,MAAA,eADW,oBAAoB,KAAK,EACV,SAAU,SAAY,QAAQ,MAAM,KAAK,SAAS,OAAS,aAAa,EAClG,YAAc,gBAAgB,QAAQ,CAAC,GAAG,OAAS,EACnD,aAAe,gBAAgB,OAAO,MAAM,SAAS,SAAW,CAAI,GAAA,SAAS,WAAW,EACtF,OAAA,aAAe,GAAG,OAAS,cAAgB,EACvD,CACO,MAAA,EACX,CAhBgB,sFAAAA,QAAA,sCAAA,uCAAA,ECtkBhB,SAAS,kBAAkB,MAAO,CACvB,OAAA,OAAO,OAAO,IAAI,SAAS,GAAK,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAChH,CAFS,8CAAAA,QAAA,kBAAA,mBAAA,EAIO,SAAA,oBAAoB,QAA0B,aAAgC,CACtF,GAAA,CAAC,gBAAgB,OAAO,EAAU,MAAA,GAEhC,MAAA,MAAQc,kBAAgB,OAAO,EAE/B,OAAS,gBACX,MACA,SAAS,OAAO,MAAM,SAAS,QAAQ,OAAQ,GAAM,EAAE,WAAW,SAAS,CAAC,CAAA,EAGhF,OAAI,QACA,WAAW,MAAO,OAAQ,SAAS,OAAO,MAAM,SAAS,MAAO,YAAY,EACrE,IAGJ,EACX,CAhBgB,kDAAAd,QAAA,oBAAA,qBAAA,EAkBhB,SAASc,kBAAgB,QAA6C,CAClE,OAA0B,QAAQ,OAAO,OAAO,IAAY,QAAQ,QAAQ,KAAK,CACrF,CAFSA,8CAAAA,QAAAA,kBAAAA,mBAAAA,EAIT,SAAS,gBAAgB,QAAmC,CAExD,MAAM,QADU,SAAS,OAAO,MAAM,SAAW,CAAA,IACzB,OAExB,OACI,QAAQ,OACR,kBAAkB,QAAQ,KAAK,GAC/B,QAAQ,OACR,KAAK,QAAQ,QACb,QAAQ,MACR,CAAC,oBAAqB,cAAe,aAAa,EAAE,SACvB,QAAQ,MAAM,KAAM,SAAS,IAAA,GAE1D,QAAQ,KAAM,GAAM,IAAM,QAAQ,CAE1C,CAfS,0CAAAd,QAAA,gBAAA,iBAAA,EAiBT,SAAS,gBAAgB,MAA0B,QAA2B,CAC1E,MAAM,MAAQ,MAAM,MACd,iBAAmB,CACrB,KAAM,GAAG,UAAU,sCACnB,QAAS,GAAG,UAAU,yCACtB,SAAU,GAAG,UAAU,0CACvB,YAAa,GAAG,UAAU,6CAC1B,UAAW,GAAG,UAAU,2CACxB,WAAY,GAAG,UAAU,2CAAA,EAG7B,OAAI,OAAO,QAAU,CAAC,kBAAkB,KAAK,EAClC,iBAAiB,MAChB,OAAO,WAAW,OAAS,IAAM,GAAK,CAAC,kBAAkB,KAAK,EAC/D,iBAAiB,QACjB,KAAK,QAAQ,QAAQ,WAAW,QAAU,OAAS,KAAK,QAAQ,OAAO,UAAU,SACjF,iBAAiB,SACjB,OAAO,aAAa,aAAa,EACjC,iBAAiB,YACjB,OAAO,aAAa,WAAW,EAC/B,iBAAiB,UAExB,OAAO,aAAa,YAAY,GAChC,CAAC,CAAC,gBAAiB,mBAAmB,EAAE,KAAM,GAAM,QAAQ,SAAS,CAAC,CAAC,EAEhE,iBAAiB,WAErB,EACX,CA5BS,0CAAAA,QAAA,gBAAA,iBAAA,EA8BT,SAAS,WAAW,MAA0B,OAAgB,MAAe,aAAuB,CAC1F,MAAA,UAAY,aAAe,6BAA+B,4BAC1D,UAAY,MAAM,OAAO,MAAQ,YAEpC,GAAA,cAAc,aAAe,QAAU,MAAM,EAAE,4BAA4B,MAAO,UAAW,OAAQ,SAAS,CAAC,CACtH,CALS,gCAAAA,QAAA,WAAA,YAAA,EAOT,SAAS,4BAA4B,MAAe,UAAmB,OAAgB,UAA2B,CAC9G,OAAO,KAAK,KAAK,OAAO,GAAG,UAAU,aAAa,SAAS,GAAI,CAC3D,MACA,UACA,OAAQ,KAAK,KAAK,SAAS,MAAM,CAAA,CACpC,CACL,CANS,kEAAAA,QAAA,4BAAA,6BAAA,ECjFT,eAAsB,qBAAqB,QAA0B,CACjE,MAAM,eAAiB,QAAQ,QAG/B,GAF8B,UAAU,GAAK,gBAAkB,KAAK,SAAW,KAAK,QAAQ,OAEjE,CAEvB,MAAM,YAD2B,gBAAgB,OAAO,GAC7B,MAE3B,GAAI,YAAa,CACP,MAAA,iBAAmB,yBAAyB,cAAc,EAC1D,UAAY,iBAAmB,KAAK,iBAAiB,CAAC,CAAC,GAAK,GAElE,GAAI,UAAW,CACX,MAAM,cAAgB,iBAAiB,YAAa,eAAgB,SAAS,EAC7E,MAAM,aAAa,wBAAwB,OAAQ,CAAC,aAAa,CAAC,CACtE,CACJ,CACJ,CACJ,CAlBsB,oDAAAA,QAAA,qBAAA,sBAAA,EAoBtB,SAAS,gBAAgB,QAA6C,CAClE,OAA0B,QAAQ,OAAO,OAAO,IAAY,QAAQ,QAAQ,KAAK,CACrF,CAFS,0CAAAA,QAAA,gBAAA,iBAAA,EAIT,SAAS,yBAAyB,eAAiD,CAExE,OAAA,eAAe,MAAM,2CAA2C,CAC3E,CAHS,4DAAAA,QAAA,yBAAA,0BAAA,EAKT,SAAS,iBAAiB,YAAa,eAAwB,UAAmB,CACxE,MAAA,eAAiB,eAAe,MAAM,mCAAmC,EAExE,MAAA,CACH,KAAM,SACN,KAAM,cAAc,cAAc,EAClC,IAAK,+CACL,OAAQ,oBAAoB,YAAa,SAAS,CAAA,CAE1D,CATS,4CAAAA,QAAA,iBAAA,kBAAA,EAWT,SAAS,cAAc,eAAiD,CACpE,OAAI,eACO,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,EAAI,eAAe,CAAC,EAG5F,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,EACrE,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,CAGxF,CATS,sCAAAA,QAAA,cAAA,eAAA,EAWT,SAAS,oBAAoB,YAAa,UAAmB,CAClD,MAAA,CACH,UAAW,CAAE,KAAM,EAAK,EACxB,SAAU,sBAAsB,SAAS,EACzC,YAAa,CACT,MAAO,OAAO,KAAK,KAAK,SAAS,GAAG,UAAU,qCAAqC,CAAC,OACxF,EACA,OAAQ,CACJ,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,CACvF,EACA,MAAO,CAAC,EACR,KAAM,8BAA8B,WAAA,CAAY,GAChD,aAAc,wBAAwB,WAAW,EACjD,OAAQ,CACJ,MAAO,CAAC,CACZ,EACA,MAAO,CACH,MAAO,YAAY,OAAS,CAChC,EACA,MAAO,KACP,QAAS,IAAA,CAEjB,CAtBS,kDAAAA,QAAA,oBAAA,qBAAA,EAwBT,SAAS,sBAAsB,UAAmB,CACvC,MAAA,CACH,MAAO,IAAI,KAAK,SAAS,EAAE,KAAK,CAAE,MAAO,EAAA,CAAO,EAAE,MAAQ,EAC1D,KAAM,SACN,UAAW,GACX,OAAQ,YAAA,CAEhB,CAPS,sDAAAA,QAAA,sBAAA,uBAAA,EAST,SAAS,wBAAwB,YAAa,CAC1C,OACI,KAAK,SAAS,IAAI,WAAY,4BAA4B,GAC1D,CAAC,KAAK,QAAQ,OAAO,QAAQ,IAAK,GAAM,EAAE,EAAE,EAAE,SAAS,YAAY,EAAE,CAE7E,CALS,0DAAAA,QAAA,wBAAA,yBAAA,ECrFa,eAAA,0BAA0B,KAAW,QAA0B,CACjF,MAAM,UAAoB,QAAQ,OAAO,KAAK,QAAQ,KAChD,OAAc,aAAa,SAAS,EAEpC,sBAAwB,0BAA0B,MAAM,EAE9D,GAAI,mBAAmB,GAAK,uBAAyB,sBAAsB,OAAS,EAAG,CAC/E,KAAK,SAAS,IAAI,WAAY,qDAAqD,GACzD,0BAAA,QAAS,sBAAuB,IAAI,EAElE,MACJ,CAIA,GAFA,oBAAoB,KAAM,OAAO,EAE7B,sBAAsB,GAAK,CAAC,wBAAyB,CAC/C,KAAA,CAAE,QAAS,KAAM,EAAI,MAAM,oBAAoB,QAAS,OAAQ,UAAW,IAAI,EAI/E,QAFW,KAAK,SAAS,IAAI,WAAY,2CAA2C,EAGpF,CAAA,EACA,KAAK,MACA,OAAQ,GAAM,EAAE,MAAM,EACtB,OAAQ,GAAM,EAAE,KAAO,YAAY,qBAAqB,IAAI,EAAE,IAAKe,IAAMA,GAAE,EAAE,EAAE,CAAC,CAAC,EACjF,IAAK,GAAM,EAAE,EAAE,EACpB,KAAO,KAAK,OACd,QAAQ,OAAS,EACjB,MAAM,YAAY,OAAO,CACrB,QACA,KACA,QACA,KAAA,CACH,EAED,MAAM,YAAY,OAAO,CACrB,KACA,QACA,KAAA,CACH,CAET,CACJ,CA1CsB,8DAAAf,QAAA,0BAAA,2BAAA,EA4CtB,SAAS,0BAA0B,QAAS,iBAAkB,KAAW,CACrE,MAAM,WAAa,QAAQ,QACrB,eAAiB,EAAE,QAAQ,UAAU,QAAQ,EAEpC,eAAA,KAAK,6BAA6B,EAAE,MAC/C,KAAK,KAAK,OAAO,GAAG,UAAU,sDAAuD,CACjF,YAAa,kBAAkB,KAAK,GAAG,GAAK,EAAA,CAC/C,CAAA,EAGC,MAAA,WAAa,eAAe,OAE9B,aAAe,aACf,KAAK,QAAU,WACf,QAAQ,aAAa,CAAE,QAAS,UAAY,CAAA,EAEpD,CAhBS,8DAAAA,QAAA,0BAAA,2BAAA,EAkBT,eAAe,oBAAoB,QAA0B,OAAQ,UAAmB,KAAW,CAC/F,MAAM,UAAY,KAAK,KAAK,SAAS,GAAG,UAAU,kDAAkD,EAC9F,UAAY,KAAK,SAAS,IAAI,OAAQ,kCAAkC,EACxE,UACA,QAAQ,OAAS,QAAQ,OAAO,MAAQ,QAAQ,OAAO,MAAQ,UAE/D,KAAO,QAAQ,OAAO,KAAK,QAAQ,MAAQ,QAC3C,gBAAkB,QAAQ,OAAO,KAAK,SAAS,WAAa,GAE5D,YADU,QAAQ,MAAM,KAAK,SACN,SAAS,SAAS,oBAAoB,EAC7D,QAAU,kBAAkB,OAAQ,UAAW,KAAM,gBAAiB,UAAW,KAAM,WAAW,EAElG,MAAQ,CACV,qBAAsB,CAClB,aAAc,CACV,WAAY,QAAQ,OAAO,KAAK,QAAQ,KACxC,eAAgB,QAAQ,MAAM,KAAK,OAAO,QAC9C,CACJ,CAAA,EAGG,MAAA,CAAE,QAAS,MACtB,CAtBe,kDAAAA,QAAA,oBAAA,qBAAA,EAwBf,SAAS,gBAAgB,MAAuB,CAarC,MAZc,CACjB,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,GAAI,EAAA,EAEY,KAAK,GAAK,CAClC,CAdS,0CAAAA,QAAA,gBAAA,iBAAA,EAgBT,SAAS,iBAAiB,OAAwB,CAOvC,MANe,CAClB,SAAU,EACV,KAAM,EACN,OAAQ,GACR,OAAQ,CAAA,EAES,MAAM,GAAK,CACpC,CARS,4CAAAA,QAAA,iBAAA,kBAAA,EAUT,MAAM,iBAAmB,CAAE,OAAQ,SAAU,OAAQ,WAAY,OAAQ,YAAa,OAAQ,UAE9F,SAAS,0BAA0B,OAAa,CAC5C,OAAO,KAAK,QAAQ,OAAO,SACrB,OAAQ,OACC,MAAM,OACP,OAAQ,GAAM,EAAE,OAAS,OAAO,IAAI,GACpC,OAAQ,GAAM,EAAE,SAAS,OAAO,CAAC,GACjC,OAAQ,GAA4B,EAAI,YAAY,EACrD,KAAM,MAAS,CACZ,MAAM,MAA6B,KAC7B,MAAQ,MAAM,aAEhB,MAAA,CAAC,OAAO,YACP,OAAO,YACJ,OAAO,QAAQ,QAAQ,OAAO,MAAM,IAAI,EAAE,EAAE,SAAS,KAAM,GAAM,EAAE,KAAO,MAAM,EAAE,CAAA,CAE7F,CACR,EACA,IAAK,OAAU,MAAM,IAAI,CAClC,CAlBS,8DAAAA,QAAA,0BAAA,2BAAA,EAoBT,SAAS,oBAAoB,KAAW,QAAgC,CAC/D,KAAA,KAAO,MAAM,mBAAmB,QACrC,KAAK,QAAU,CAAC,GAAG,YAAY,qBAAqB,IAAI,EAAE,IAAK,GAAM,EAAE,EAAE,CAAC,EACrE,KAAK,KAAK,MACX,KAAK,QAAQ,KAAK,KAAK,KAAK,EAAE,EAGlC,QAAQ,aAAa,IAAI,CAC7B,CARS,kDAAAA,QAAA,oBAAA,qBAAA,EAUT,SAAS,oBAA8B,CACnC,MAAO,EAAQ,KAAK,SAAS,IAAI,WAAY,mCAAmC,CACpF,CAFS,gDAAAA,QAAA,mBAAA,oBAAA,EAIT,SAAS,uBAAiC,CACtC,MAAO,EAAQ,KAAK,SAAS,IAAI,WAAY,mCAAmC,CACpF,CAFS,sDAAAA,QAAA,sBAAA,uBAAA,EAIT,SAAS,uBAAiC,CAEtC,OAAO,MAAM,UAAU,iBAAiB,gBAAgB,cAAc,KAAK,CAC/E,CAHS,sDAAAA,QAAA,sBAAA,uBAAA,EAKT,SAAS,kBAAkB,OAAQ,UAAmB,KAAM,gBAAyB,UAAmB,KAAM,MAAO,CACjH,IAAI,QAAU,GACd,GAAI,OAAQ,CACR,QAAU,KAAK,KAAK,SAChB,KAAK,KAAK,OAAO,GAAG,UAAU,wDAAyD,CACnF,UACA,KACA,gBACA,SAAA,CACH,CAAA,EAGD,KAAK,SAAS,IAAI,WAAY,6CAA6C,IAC3E,SAAW,KAAK,KAAK,SACjB,KAAK,KAAK,OAAO,GAAG,UAAU,kEAAmE,CAC7F,OAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,EAC3C,IAAK,OAAe,MAAM,QAAS,CAAA,EACnC,KAAK,EACL,KAAK,IAAI,CAAA,CACjB,CAAA,GAIH,MAAA,MAAQ,OAAO,OAAO,MAAM,MAC5B,KAAO,gBAAgB,KAAK,EAAI,iBAAiB,OAAO,OAAO,QAAQ,QAAU,QAAQ,EAEzF,MAAQ,iBAAiB,eAAe,EAE9C,SAAW,KAAK,KAAK,OAAO,GAAG,UAAU,2DAA4D,CACjG,MACA,KACA,GAAI,SAAS,KAAK,KAAK,SAAS,4BAA4B,CAAC,SAAA,CAChE,CAAA,MAED,SAAW,KAAK,KAAK,SAAS,GAAG,UAAU,4DAA4D,EAG3G,MAAM,QAAU,EAAE,KAAK,OAAO,EAAE,KAAK,QAAQ,EACvC,YAAc,QAAQ,OAAQ,GAAM,QAAQ,CAAC,EAAE,aAAa,aAAa,IAAM,YAAY,EAC3F,mBAAqB,KAAK,QAAQ,KAAM,GAAM,EAAE,KAAO,oBAAoB,GAAG,OAChF,GAAA,YAAY,SAAW,EAAG,CAC1B,MAAM,SAAW,YAAY,KAAK,WAAW,GAAK,GAClD,GAAK,mBAaD,SAAW,KAAK,KAAK,OAAO,GAAG,UAAU,+DAAgE,CACrG,SACA,MAAO,MACD,KAAK,KAAK,SAAS,GAAG,UAAU,mDAAmD,EACnF,EAAA,CACT,MAlBoB,CACrB,MAAM,OAAS,YAAY,KAAK,SAAS,GAAK,GAE9C,SAAW,KAAK,KAAK,OAAO,GAAG,UAAU,uDAAwD,CAC7F,SACA,OACA,OAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,EAC3C,IAAK,OAAe,KAAK,KAAK,OAAO,SAAS,MAAM,SAAS,CAAC,EAC9D,KAAA,EACA,KAAK,GAAG,EACb,KAAA,CACH,CAAA,CAST,CACO,OAAA,OACX,CAhES,8CAAAA,QAAA,kBAAA,mBAAA,EAkEa,eAAA,yBAAyB,QAA0B,KAAmB,CAQxF,GAPY,KAAK,SAAS,SACrB,QACA,EAAA,OAAQ,GAAM,EAAE,OAAS,CAAC,EAC1B,OAAQ,GAAM,EAAE,OAAO,MAAM,OAAO,EACpC,OAAQ,GAAM,EAAE,OAAO,MAAM,QAAQ,OAAS,QAAQ,OAAO,MAAM,QAAQ,IAAI,EAC/E,MAEI,CACC,MAAA,OAAS,KAAK,cAAc,cAAc,EAC5C,GAAA,QAAU,OAAO,UAAW,CAEtB,MAAA,aADS,MAAM,SAAiB,QAAQ,OAAO,KAAK,QAAQ,IAAI,IAC1C,MAAQ,MAC9B,aACF,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,EACnE,4BAA4B,WAAW,QAC3C,OAAO,UAAY,OAAO,UAAU,QAAQ,YAAa,YAAY,CACzE,CACJ,CACJ,CAnBsB,4DAAAA,QAAA,yBAAA,0BAAA,EC7Lf,MAAM,yBAA2BA,QAAA,CAAC,QAA0B,KAAW,SAAU,QAAoB,CACxG,IAAI,QAAU,GACd,MAAM,yBAA2B,KAAK,SAAS,IAAI,WAAY,mBAAmB,IAAM,aAClF,qBAAuB,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,EACnF,wBAA0B,KAAK,SAAS,IAAI,WAAY,kBAAkB,EAC1E,SAAW,CAAC,cAAe,eAAgB,WAAY,YAAa,OAAQ,SAAU,SAAS,EAAE,KAAM,KACzG,MAAM,SAAS,SAAS,IAAI,GAAG,CAAA,EAE7B,YAAc,cAChB,KAAK,QAAQ,OAAO,SAAS,KAAM,QAAW,OAAO,KAAO,QAAQ,OAAO,EAAE,GAAK,GAClF,OAAA,EAIA,OAAA,yBACA,QAAQ,MAAM,MAAM,SAAS,KAC3B,UAAY,CAAC,aAAiB,CAAC,UAAY,cAEnB,0BAAA,KAAM,OAAO,EAAE,KAAK,EAG9C,2BACU,QAAA,kBAAkB,QAAS,OAAO,KAAK,SAAS,IAAI,WAAY,mBAAmB,CAAC,CAAC,GAG/F,SAAW,uBAAyB,iBAC1B,QAAA,oBAAoB,QAAS,EAAI,GAGxC,OACX,EA9BwC,0BAAA,EAgCxC,SAAS,cAAc,QAAkB,QAA0B,CACzD,MAAA,MAAQ,QAAQ,OAAO,OAAS,SAChC,OAAS,QAAQ,OAAO,WAAa,QACrC,UAAY,KAAK,SAAS,IAAI,WAAY,2BAA2B,IAAM,OAC3E,cAAgB,KAAK,SAAS,IAAI,WAAY,2BAA2B,IAAM,YAC/E,eAAiB,KAAK,SAAS,IAAI,WAAY,2BAA2B,IAAM,kBAEtF,OAAQ,OAAS,WAAe,CAAC,QAAU,eAAmB,CAAC,SAAW,cAC9E,CARS,sCAAAA,QAAA,cAAA,eAAA,EAUF,SAAS,sBAAsB,QAA0B,CAC/B,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,IAC5D,YACzB,oBAAoB,QAAS,EAAK,EAGtC,MAAM,yBAA2B,OAAO,KAAK,SAAS,IAAI,WAAY,mBAAmB,CAAC,EACtF,CAAC,KAAM,UAAU,EAAE,SAAS,wBAAwB,GACpD,kBAAkB,QAAS,wBAAwB,EAGlD,qBAAqB,OAAO,IAEzB,KAAK,SAAS,IAAI,WAAY,qBAAqB,IAClD,KAAK,SAAS,IAAI,WAAY,yBAAyB,GACpD,KAAK,SAAS,IAAI,WAAY,8BAA8B,GAC5D,KAAK,SAAS,IAAI,WAAY,uCAAuC,IAAM,OAEhE,eAAA,OAAO,EAAE,OAGxB,KAAK,SAAS,IAAI,WAAY,sBAAsB,GAC/B,qBAAA,OAAO,EAAE,QAGtC,sCAAsC,OAAO,CACjD,CA1BgB,sDAAAA,QAAA,sBAAA,uBAAA,EA4BhB,SAAS,6CAA6C,QAA0B,CACpD,wBAAA,QAAS,EAAQ,KAAK,SAAS,IAAI,WAAY,yBAAyB,CAAE,CACtG,CAFS,oGAAAA,QAAA,6CAAA,8CAAA,EAIO,SAAA,sBAAsB,QAA0B,GAAY,CAClE,MAAA,KAAoB,GAAG,IAAI,CAAC,EAEhB,kBAAA,QAAS,EAAQ,KAAK,SAAS,IAAI,WAAY,wBAAwB,CAAE,EAEvF,KAAK,SAAS,IAAI,WAAY,uBAAuB,GACrD,iBAAiB,OAAO,EAG5B,6CAA6C,OAAO,EAGpD,MAAM,oBAA2B,QAAQ,QAAQ,WAAY,iBAAiB,EAS1E,GARA,CAAC,MAAM,mBAAmB,GAAK,oBAAsB,KAAK,KAAK,MAC1D,KAAA,UAAU,IAAI,yBAAyB,EAG5C,KAAK,SAAS,IAAI,WAAY,oCAAoC,GAClE,yBAAyB,QAAS,IAAI,EAGtC,qBAAqB,OAAO,EAAG,CAC/B,MAAM,kBAAoB,OAAO,KAAK,SAAS,IAAI,WAAY,uBAAuB,CAAC,EACnF,CAAC,cAAe,cAAe,gBAAgB,EAAE,SAAS,iBAAiB,GAC1D,iBAAA,QAAS,KAAM,iBAAiB,CACrD,MAGI,OAAO,KAAK,SAAS,IAAI,WAAY,iCAAiC,CAAC,IAAM,oBAC7E,OAAO,KAAK,SAAS,IAAI,WAAY,iCAAiC,CAAC,IAAM,wBAE7E,4BAA4B,IAAI,GAG/B,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IAAM,oBAChF,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IACzE,wBACR,CAAC,SAAU,QAAS,OAAO,EAAE,SAAS,QAAQ,MAAM,MAAQ,EAAE,GAE9D,kCAAkC,IAAI,IAGpC,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IAAM,oBACjF,OAAO,KAAK,SAAS,IAAI,WAAY,uCAAuC,CAAC,IACzE,wBACJ,CAAC,QAAQ,MACb,QAAQ,MAAM,OAAS,WAEvB,kCAAkC,IAAI,EAc1C,GATA,KAAK,SAAS,IAAI,WAAY,0BAA0B,GACxD,SAAS,OAAO,MAAM,QAAQ,OAAS,SACvC,qBAAqB,OAAO,GAE5B,yBAAyB,QAAS,IAAI,EAIzB,QAAQ,MAAM,GAAG,EAAE,GACtB,QAAQ,YAAa,CACzB,MAAA,QAAe,GAAG,IAAI,CAAC,EAE7B,GAAI,QAAS,CACH,MAAA,KAAO,QAAQ,cAAc,gCAAgC,EAC7D,YAAc,QAAQ,cAAc,+BAA+B,EACnE,aAAe,QAAQ,cAAc,4BAA4B,EACnE,GAAA,MAAQ,aAAe,aAAc,CAE/B,MAAA,OAAS,SAAS,cAAc,MAAM,EAC5C,OAAO,UAAU,IAAI,MAAO,kBAAmB,eAAe,EAC9D,OAAO,UAAY,KAAK,KAAK,SAAS,GAAG,UAAU,yCAAyC,EAC5F,OAAO,QAAQ,KAAO,gBACA,KAAK,cAAc,MAAM,GAC5B,QAAQ,aAAe,OACtC,OAAO,QAAQ,WAAa,MAEhC,KAAK,OAAO,MAAM,EAGZ,MAAA,KAAO,SAAS,cAAc,MAAM,EAC1C,KAAK,UAAY,gBACjB,KAAK,UAAY,QACjB,aAAa,OAAO,IAAI,EAGX,aAAA,UAAU,IAAI,eAAe,CAC9C,CACJ,CACJ,CACJ,CA5FgB,sDAAAA,QAAA,sBAAA,uBAAA,EA8FhB,SAAS,mCAAmC,MAAO,CAC/C,MAAM,MAA4B,MAAM,OAAO,OAAQ,GAAM,EAAE,MAAM,EACjE,GAAA,OAAS,MAAM,OAAS,EAAG,CAC3B,UAAW,QAAQ,MACX,KAAK,OAAO,IAAI,WAAW,GAAK,KAAK,OAAS,UAAY,KAAK,OAAO,IAAI,oBAAoB,EAExF,MAAA,gBAAgB,KAAM,CAAE,UAAW,OAAQ,UAAW,EAAG,OAAQ,EAAA,CAAO,EAExE,MAAA,gBAAgB,KAAM,CAAE,UAAW,UAAW,UAAW,EAAG,OAAQ,EAAA,CAAO,EAGzF,MAAM,QAAU,KAAK,KAAK,OAAO,GAAG,UAAU,uDAAwD,CAClG,KAAM,MAAM,QAAQ,SAAS,QAAQ,KAAM,GAAM,EAAE,OAAO,KAAO,MAAM,EAAE,GAAG,MAAQ,MAAM,KAC1F,MAAO,MAAM,IAAK,GAAM,EAAE,IAAI,EAAE,KAAK,IAAI,CAAA,CAC5C,EACD,YAAY,OAAO,CACf,OAAQ,QACR,QAAS,YAAY,WAAW,CAAE,MAAO,CAAA,CAC5C,EAAE,KAAK,CACZ,CACJ,CApBS,gFAAAA,QAAA,mCAAA,oCAAA,EAsBa,eAAA,eAAe,KAAgB,SAAc,IAAU,CAErE,KAAK,OAAO,SAAS,cAAc,GACnC,KAAK,MAAM,aAAa,aAAa,GACrC,KAAK,SAAS,IAAI,WAAY,oCAAoC,GAClE,kBAAkB,KAAK,KAAK,GAE5B,mCAAmC,KAAK,KAAK,CAErD,CATsB,wCAAAA,QAAA,eAAA,gBAAA,EAWA,eAAA,eAAe,MAAiB,QAAc,CAAC,CAA/C,wCAAAA,QAAA,eAAA,gBAAA,EAEA,eAAA,eAAe,KAAgB,SAAc,CAC/D,MAAM,qBAAqB,IAAI,CACnC,CAFsB,wCAAAA,QAAA,eAAA,gBAAA,EAIN,SAAA,gBAAgB,UAA0B,QAAwB,OAAgB,CAC1F,KAAK,SAAS,IAAI,WAAY,qCAAqC,GACnE,iBAAiB,UAAW,MAAM,EAAE,KAAK,IAAM,SAAS,qCAAqC,CAAC,CAEtG,CAJgB,0CAAAA,QAAA,gBAAA,iBAAA,EAMM,eAAA,kBAAkB,UAA0B,QAAwB,OAAgB,CACtG,MAAM,QAAU,OAAO,KAAK,SAAS,IAAI,WAAY,sBAAsB,CAAC,EACxE,KAAK,SAAS,IAAI,WAAY,mBAAmB,EACjD,kBAAkB,UAAW,MAAM,EAAE,KAAM,WAAc,CACjD,UAAY,QACZ,gBAAgB,UAAW,SAAS,CACxC,CACH,EACM,UAAY,QACnB,gBAAgB,UAAW,CAAC,CAIpC,CAbsB,8CAAAA,QAAA,kBAAA,mBAAA,EAeN,SAAA,mBAAmB,KAAyB,EAAW,KAAW,CACxE,MAAA,KAAO,EAAE,IAAI,CAAC,EAChB,MAAQ,KAAK,MAAM,MAAQ,KAAK,SAAS,IAAI,WAAY,cAAc,GACvE,cAAc,KAAM,IAAI,CAEhC,CALgB,gDAAAA,QAAA,mBAAA,oBAAA,EAOM,eAAA,mBAAmB,MAAqB,OAAgC,CAC1F,MAAM,SAAW,QAAA,MAAG,YAAY,OAAQ,4BAA4B,EAGhE,GAAA,OAAO,UAAa,SAAU,CAC9B,MAAM,eAAmC,MAAM,OAAQ,WAAW,IAAI,OAAS,EAE3E,KAAK,MAAM,MACX,OAAO,OAAS,UAChB,OAAO,OAAO,KAAO,GACrB,eAAiB,GACjB,UAAY,GACZ,KAAK,SAAS,IAAI,OAAQ,yBAAyB,GACnD,OAAO,KAAK,SAAS,IAAI,WAAY,mCAAmC,CAAC,IAAM,YAE/E,MAAM,gBAAgB,KAAK,EAG/B,MAAM,cAAgB,OAAO,KAAK,SAAS,IAAI,WAAY,uBAAuB,CAAC,EACnF,gCAAgC,MAAO,OAAQ,eAAgB,SAAU,aAAa,CAC1F,CACJ,CArBsB,gDAAAA,QAAA,mBAAA,oBAAA,EAuBf,SAAS,mBAAmB,UAAW,OAAQ,WAAY,MAAO,CACjE,KAAK,SAAS,IAAI,WAAY,gBAAgB,IAAM,OAAO,GAAK,OAAO,IACpE,QAAA,MAAA,YAAY,QAAS,YAAa,CACjC,cAAe,KAAK,SAAS,IAAI,WAAY,qBAAqB,CAAA,CACrE,CAET,CANgB,gDAAAA,QAAA,mBAAA,oBAAA,EAQM,eAAA,gBAAgB,SAA6B,MAAO,CAClE,KAAK,MAAM,MAAQ,KAAK,SAAS,IAAI,WAAY,cAAc,GACtC,yBAAA,KAAK,EAAE,OAIhC,KAAK,MAAM,MACX,KAAK,SAAS,IAAI,OAAQ,yBAAyB,GACnD,OAAO,KAAK,SAAS,IAAI,WAAY,mCAAmC,CAAC,IAAM,WAC/E,MAAM,OACN,MAAM,MAAM,SAAS,QAAQ,GAC7B,MAAM,MAAM,OACZ,MAAM,MAAM,MAAM,KAAO,GAEnB,MAAA,gBAAgB,MAAM,MAAM,KAAK,CAE/C,CAhBsB,0CAAAA,QAAA,gBAAA,iBAAA,EAmBf,SAAS,eACZ,SACA,QACA,UACA,KACF,CACM,GAAA,CAAC,WAAa,OAAS,MAAO,OAElC,MAAM,IAAM,QAAQ,KAAK,KAAM,GAAM,aAAa,KAAO,EAAE,SAAW,GAAK,EAAE,QAAU,EAAE,EACnF,OAAS,KAAK,QAAQ,KAAM,GAAM,EAAE,QAAU,EAAE,QAAU,EAAE,EAC9D,KAAO,SACP,QAAQ,MAAM,KACV,aAAa,SAAS,CAAE,MAAO,eAAgB,SAAU,IAAK,UAAW,GAAM,EAC/E,YAAY,SAAS,CAAE,MAAO,cAAe,OAAQ,GAAI,UAAW,GAAM,CAAA,EAG9E,QAAQ,QAAU,GAClB,QAAQ,QAAQ,YAAc,GAEtC,CAnBgB,wCAAAA,QAAA,eAAA,gBAAA,EAqBhB,eAAsB,qBAAsB,CACxC,MAAM,oBAAsB,KAAK,SAAS,IAAI,WAAY,cAAc,EACpE,KAAK,KAAK,MAAQ,qBAClB,MAAM,aAAa,mBAAmB,CAE9C,CALsB,kDAAAA,QAAA,oBAAA,qBAAA,EAON,SAAA,qBAAqB,MAAkC,EAAW,CACxE,MAAA,KAAoB,EAAE,IAAI,CAAC,EAExB,SAAA,mBAAmB,QAAkB,cAAuB,CAC3D,MAAA,SAAW,QAAQ,aAAa,aAAa,EAC5C,OAAA,SAAW,aAAa,QAAQ,EAAI,IAC/C,CAHS,gDAAAA,QAAA,mBAAA,oBAAA,EAKA,SAAA,cAAc,QAAkB,cAAuB,CACtD,MAAA,OAAiB,QAAQ,aAAa,aAAa,EACzD,OAAO,OAAS,MAAM,OAAO,OAAO,IAAI,MAAM,EAAI,IACtD,CAHS,sCAAAA,QAAA,cAAA,eAAA,EAKT,SAAS,gBAAgB,QAAiB,aAAsB,aAAsB,UAAW,CACzF,GAAA,MAAM,OAAO,OAAS,gBAAkB,KAAK,SAAS,IAAI,WAAY,OAAO,EAAG,CAC1E,MAAA,MAAQ,KAAK,iBAAiB,YAAY,EAChD,UAAW,QAAQ,MAAO,CAChB,MAAA,kBAAoB,KAAK,iBAAiB,YAAY,EAC5D,UAAW,WAAW,kBAAmB,CAC/B,MAAA,KAAO,UAAU,OAAO,EAC9B,GAAI,KAAM,CACA,MAAA,OAAS,KAAK,OAAO,OAAO,OAC9B,QACmB,QAAQ,iBAAiB,IAAI,EACrC,QAAS,IAAO,GAAG,UAAU,IAAI,6BAA6B,MAAM,EAAE,CAAC,CAE1F,CACJ,CACJ,CACJ,CACJ,CAjBS,0CAAAA,QAAA,gBAAA,iBAAA,EAmBT,gBAAgB,2BAA4B,cAAe,SAAW,SAClE,cAAc,QAAS,cAAc,CAAA,EAGzC,gBAAgB,0BAA2B,cAAe,QAAU,SAChE,cAAc,QAAS,cAAc,CAAA,EAGzC,gBAAgB,6BAA8B,iBAAkB,gBAAkB,SAC9E,mBAAmB,QAAS,gBAAgB,CAAA,EAG5C,MAAM,OAAO,OAAS,gBAAkB,KAAK,SAAS,IAAI,WAAY,6BAA6B,GACjF,KAAK,iBAAiB,aAAa,EAC3C,QAAS,MAAS,CAClB,MAAA,kBAAoB,KAAK,iBAAiB,OAAO,EACvD,UAAW,WAAW,kBAAmB,CAC/B,MAAA,KAAyC,cAAc,QAAS,cAAc,EAChF,MACgB,KAAK,OAAO,cAAc,MAAM,OAAS,GAElC,QAAQ,iBAAiB,IAAI,EACrC,QAAS,WAAe,UAAU,WAAa,GAAI,CAG1E,CAAA,CACH,CAET,CA5DgB,oDAAAA,QAAA,qBAAA,sBAAA,EC5UA,SAAA,sBAAsB,MAAO,QAAgB,CACrD,KAAK,MAAM,MACX,QAAQ,QAAQ,CACZ,KAAM,iBACN,KAAM,sCACN,UAAY,IAA8B,CAChC,MAAA,GAAK,GAAG,KAAK,aAAa,EAGzB,OAFO,KAAK,QAAQ,IAAI,EAAE,GAEpB,SAAS,KAAK,CAC/B,EACA,SAAU,MAAO,IAA8B,CACrC,MAAA,GAAK,GAAG,KAAK,aAAa,EAC1B,MAAa,KAAK,QAAQ,IAAI,EAAE,EAGhC,SAAW,GAEP,IAAI,OAAO,CACjB,MAAO,YACP,QACI,+TAE+F,QAAQ,uHACV,QAAQ,6BACzG,QAAS,CACL,MAAO,CACH,KAAM,sCACN,MAAO,QACP,SAAU,MAAO,MAAiB,CAC3B,GAAA,eAAe,KAAK,6BAA6B,EACpD,MAAM,WAAa,SAAiB,KAAK,KAAK,aAAa,EAAE,KAAK,EAC5D,SAAW,SAAiB,KAAK,KAAK,WAAW,EAAE,KAAK,EAE9D,QAAS,EAAI,WAAY,GAAK,SAAU,IAC9B,MAAA,gBAAgB,MAAO,CAAC,EAE/B,GAAA,eAAe,KAAK,UAAU,MAAM,IAAI,cAAc,UAAU,MAAM,QAAQ,GAAG,CACxF,CACJ,CACJ,EACA,QAAS,OAAA,CACZ,EACC,OAAO,EAAI,CACjB,CAAA,CACH,CAET,CA/CgB,sDAAAA,QAAA,sBAAA,uBAAA,ECTA,SAAA,mBAAmB,KAAc,SAAqC,CACvE,UAAA,OAAO,SAAS,SAAa,CACpC,MAAM,eAAsC,SAAS,SAAY,GAAG,EAChE,GAAA,gBAAkB,eAAe,IAAQ,CACnC,MAAA,YAAc,eAAe,IA6BnC,GAAI,cAAgB,wBAA0B,YAAY,WAAW,iBAAiB,EAAG,CAC/E,MAAA,YAAc,EAChB,KAAK,SAAS,IAAI,WAAY,sBAAsB,IAAM,SACzD,KAAK,MAAM,KACN,KAAK,SAAS,IAAI,WAAY,sBAAsB,IAAM,UAC1D,KAAK,SAAS,IAAI,WAAY,sBAAsB,IAAM,OAE/D,KAAA,KAAK,eAAe,WAAW,IAAI,EAAE,OAAS,EAAA,OAAA,EAAS,OAAO,WAAW,CAClF,CACA,GAAI,cAAgB,gCAAkC,YAAY,WAAW,yBAAyB,EAAG,CAC/F,MAAA,YAAc,EAChB,KAAK,SAAS,IAAI,WAAY,8BAA8B,IAAM,SACjE,KAAK,MAAM,KACN,KAAK,SAAS,IAAI,WAAY,8BAA8B,IAAM,UAClE,KAAK,SAAS,IAAI,WAAY,8BAA8B,IAAM,OAEvE,KAAA,KAAK,eAAe,WAAW,IAAI,EAAE,OAAS,EAAA,OAAA,EAAS,OAAO,WAAW,CAClF,CACA,GAAI,cAAgB,uBAAyB,YAAY,WAAW,gBAAgB,EAAG,CAE7E,MAAA,YAAc,EAChB,KAAK,SAAS,IAAI,WAAY,qBAAqB,IAAM,SACxD,KAAK,MAAM,KACN,KAAK,SAAS,IAAI,WAAY,qBAAqB,IAAM,UACzD,KAAK,SAAS,IAAI,WAAY,qBAAqB,IAAM,OAG9D,KAAA,KAAK,eAAe,WAAW,IAAI,EAAE,OAAS,EAAA,OAAA,EAAS,OAAO,WAAW,EACzE,KAAA,KAAK,gBAAgB,WAAW,IAAI,EAAE,OAAS,EAAA,OAAA,EAAS,OAAO,WAAW,CACnF,CA6BJ,CACJ,CACJ,CA7FgB,gDAAAA,QAAA,mBAAA,oBAAA,ECgBhB,eAAsB,uBAAuB,CACzC,KAAO,YACP,OAAS,CAAC,EACV,OAAS,KACT,eAAiB,GACjB,MAAQ,EACZ,EAAkC,GAAI,CAClC,MAAM,KAAO,yBACP,QAAU,KAAK,KAAK,kBACpB,WAAa,OAAO,KAAK,QAAQ,QAAQ,EAC/C,WAAW,KAAK,KAAK,EACrB,MAAM,QAAU,CACZ,MAAO,WACP,IAAK,WACL,QAAS,QAAA,EAGP,aAAe,KACrB,GAAI,CAAC,WAAW,SAAS,IAAI,GAAK,CAAC,WAAW,SAAU,KAAO,QAAQ,IAAI,GAAK,EAAG,EAC/E,UAAG,cAAc,MAAM,GAAG,IAAI,kBAAkB,YAAY,EAAE,EACvD,KAEP,GAAA,CAAC,MAAM,QAAQ,MAAM,GAAM,OAAO,QAAU,OAAO,KAAK,IAAM,EAAK,EACnE,UAAG,cAAc,MAAM,GAAG,IAAI,2CAA2C,EAClE,KAEP,GAAA,QAAU,OAAO,QAAW,WAC5B,UAAG,cAAc,MAAM,GAAG,IAAI,sCAAsC,EAC7D,KAIN,OAAO,KAAK,QAAQ,WAAW,gBAAgB,OAAO,EAAE,QACzD,MAAM,QAAQ,WAAW,cAAc,QAAQ,eAAgB,CAAA,EAOnE,MAAM,eAJF,OAAS,MACH,OAAO,OAAO,QAAQ,QAAQ,EAAE,QAAS,GAAW,OAAO,QAAQ,CAAC,CAAC,EACrE,OAAO,QAAQ,QAAQ,SAAS,IAAI,CAAC,GAEhB,OAAO,CAAC,CAAC,EAAG,CAAC,IAAY,EAAG,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,IAAM,IAAI,EAE/E,QAAU,QAAQ,WAAW,gBAAgB,QAE7C,gBADiC,OAAO,OAAO,OAAO,EAEvD,OAAQ,GAAM,GAAG,IAAI,EACrB,IAAK,GACF,EAAE,KAAK,QAAQ,CACX,OAAQ,EAAA,CACX,CAAA,EAET,OAAO,KAAK,6BAA8B,qBAAsB,gBAAiB,uBAAuB,EAExG,MAAM,IAAa,CAAA,EACb,qBAAgB,GAAM,CAClB,MAAA,MACF,GAAG,QAAQ,SAAS,aAAa,OACjC,GAAG,QAAQ,aAAa,OACxB,GAAG,QAAQ,SAAS,QAAQ,OAC5B,GAAG,QAAQ,QAAQ,OACnB,IACF,QAAQ,CACN,OAAQ,EAAA,CACX,EACD,OAAK,KACE,gBAAgB,SAAS,IAAI,EADlB,CAAC,cACiB,EAXnB,cAAA,EAcrB,UAAW,YAAY,cAAe,CAClC,MAAM,KAAO,KAAK,MAAM,IAAI,QAAQ,EAI9B,aAHc,MAAM,MAAM,SAAS,CACrC,MAAA,CACH,IACgC,OAAO,YAAY,EACpD,IAAI,aAAyC,CAAA,EACzC,GAAA,CACA,aAAe,OAAS,aAAa,OAAO,MAAM,EAAI,kBACjD,MAAO,CACZ,UAAG,cAAc,MAAM,6BAA6B,MAAM,SAAA,CAAU,EAAE,EAC/D,IACX,CAEA,GAAI,MAAO,CACD,MAAA,OAAS,MAAM,MAAM,aAAa,CACpC,QAAS,cAAc,IAAK,GAAM,EAAE,GAAG,CAAA,CAC1C,EACG,IAAA,KAAK,GAAW,MAAO,CAAA,MAEvB,IAAA,KAAK,GAAW,YAAa,CAEzC,CACO,OAAA,GACX,CA5FsB,wDAAAA,QAAA,uBAAA,wBAAA,ECxBtB,eAAe,oBAAoB,MAAO,MAAO,CACvC,MAAA,MAAQ,MAAM,OAAO,UAAU,MAC/B,QAAU,MAAM,MAChB,OAAS,KAAK,IAAI,QAAU,MAAO,MAAM,GAAG,EAClD,MAAM,MAAM,OAAO,CAAE,+BAAgC,MAAQ,CAAA,EAC7D,MAAM,YAAY,OAAO,CACrB,KAAM,MAAM,mBAAmB,MAC/B,QAAS,YAAY,WAAW,KAAK,EACrC,OAAQ,yJACR,QAAS,KAAK,KAAK,OAAO,GAAG,UAAU,0BAA2B,CAAE,MAAO,OAAS,OAAA,CAAS,CAAA,CAChG,CACL,CAXe,kDAAAA,QAAA,oBAAA,qBAAA,EAkBf,eAAsB,QAAQ,OAAc,OAAO,OAAO,WAAW,IAAK,OAAU,MAAM,KAAK,GAAK,CAAA,EAAI,CAChG,GAAA,OAAO,SAAW,EAAG,CACrB,MAAM,MAAQ,OAAO,OAAO,WAAW,CAAC,EAAE,MAC1C,IAAI,OAAS,EACT,QAEc,MAAM,OAAO,IAAK,GAAM,EAAE,KAAK,EAAE,QAEpC,KAAM,GACF,CACH,kBACA,eACA,gBACA,gBACA,eACA,YACA,sBACA,aACA,mBACA,eACA,eACF,EAAA,SAAS,EAAE,MAAM,QAAQ,IAAI,CAClC,IAED,OAAS,MAAM,OAAO,UAAa,MAAM,KAE7C,oBAAoB,MAAO,MAAM,EACrC,MAEG,GAAA,cAAc,KAAK,KAAK,KAAK,SAAS,GAAG,UAAU,gCAAgC,CAAC,CAE/F,CA/BsB,0BAAAA,QAAA,QAAA,SAAA,ECsCf,MAAM,WAAa,qBACb,SAAW,MACX,eAAiB,YAExB,gBAAkB,IAGZ,IAAA,OAAAgB,SACRA,OAAAA,OAAA,KAAO,CAAP,EAAA,OACAA,OAAAA,OAAA,KAAO,EAAP,EAAA,OACAA,OAAAA,OAAA,MAAQ,EAAR,EAAA,QACAA,OAAAA,OAAA,MAAQ,EAAR,EAAA,QACAA,OAAAA,OAAA,OAAS,EAAT,EAAA,SALQA,SAAA,OAAA,CAAA,CAAA,EAQL,IAAI,MAAe,EAE1B,SAAS,OAAO,SAAU,WAAY,aAAc,KAAO,GAAO,CACzD,YAAY,IAAI,QAAQ,EAUpB,aACK,MAAA,IAAI,SAAU,YAAY,EAChC,YAAY,OAAO,QAAQ,GAX3B,aACI,KACM,MAAA,KAAK,SAAU,YAAY,EAE3B,MAAA,GAAG,SAAU,YAAY,EAEnC,YAAY,IAAI,QAAQ,EAQpC,CAhBS,wBAAAhB,QAAA,OAAA,QAAA,EAkBO,SAAA,YAAY,WAAa,GAAO,CACxC,MAAQ,IAAe,KAAK,KAAK,MACjC,KAAK,OAAO,KAAK,UAAY,WAAY,CAAE,UAAW,cAAe,EAErE,YACA,YAAY,MAAM,EAGtB,MAAM,GAAK,KAAK,SAEhB,OAAO,gCAAiC,GAAG,IAAI,WAAY,WAAW,EAAG,qBAAqB,EAC9F,OAAO,yBAA0B,GAAG,IAAI,WAAY,WAAW,EAAG,qBAAqB,EAEvF,OACI,uBACA,GAAG,IAAI,WAAY,kBAAkB,GACjC,GAAG,IAAI,WAAY,mBAAmB,IAAM,MAC5C,GAAG,IAAI,WAAY,sBAAsB,IAAM,eACnD,wBAAA,EAGJ,OACI,oBACA,GAAG,IAAI,WAAY,qBAAqB,GACpC,GAAG,IAAI,WAAY,yBAAyB,GAC5C,GAAG,IAAI,WAAY,8BAA8B,GACjD,GAAG,IAAI,WAAY,uCAAuC,IAAM,MAChE,GAAG,IAAI,WAAY,sBAAsB,GACzC,GAAG,IAAI,WAAY,sBAAsB,GACzC,GAAG,IAAI,WAAY,sBAAsB,IAAM,YAC/C,GAAG,IAAI,WAAY,6CAA6C,EACpE,qBAAA,EAGJ,OACI,oBACA,GACA,qBAAA,EAGJ,OACI,aACA,KAAK,SAAS,IAAI,WAAY,oCAAoC,EAClE,QAAA,MAAG,SAAS,eAAgB,EAAE,CAAA,EAG3B,OAAA,aAAc,GAAO,cAAc,EAE1C,OACI,aACA,GAAG,IAAI,WAAY,6BAA6B,GAAK,GAAG,IAAI,WAAY,oCAAoC,EAC5G,cAAA,EAGG,OAAA,mBAAoB,GAAG,IAAI,WAAY,cAAc,IAAM,GAAI,oBAAqB,EAAI,EAE/F,OAAO,eAAgB,GAAG,IAAI,WAAY,qCAAqC,EAAG,eAAe,EAEjG,OACI,iBACA,GAAG,IAAI,WAAY,sBAAsB,IAAM,QAAU,GAAG,IAAI,WAAY,mBAAmB,EAC/F,iBAAA,EAGJ,OAAO,cAAe,GAAG,IAAI,WAAY,sBAAsB,EAAG,cAAc,EAEhF,OAAO,iBAAkB,GAAG,IAAI,WAAY,cAAc,EAAG,kBAAkB,EAE/E,OACI,iBACS,GAAG,IAAI,WAAY,qBAAqB,EAAG,WAAW,aAAa,GACxE,CAAC,OAAO,GAAG,IAAI,WAAY,uBAAuB,CAAC,EAAE,WAAW,IAAI,GACpE,CAAC,OAAO,GAAG,IAAI,WAAY,sBAAsB,CAAC,EAAE,WAAW,IAAI,GACnE,CAAC,OAAO,GAAG,IAAI,WAAY,oCAAoC,CAAC,EAAE,WAAW,IAAI,GACjF,GAAG,IAAI,WAAY,0CAA0C,GAC5D,GAAG,IAAI,OAAQ,yBAAyB,GACrC,GAAG,IAAI,WAAY,mCAAmC,IAAM,WACpE,kBAAA,EAGJ,OAAO,iBAAkB,GAAG,IAAI,WAAY,gBAAgB,EAAG,kBAAkB,EAEjF,OACI,cACA,GAAG,IAAI,WAAY,cAAc,GAC5B,GAAG,IAAI,OAAQ,yBAAyB,GACrC,GAAG,IAAI,WAAY,mCAAmC,IAAM,UACpE,eAAA,EAGJ,OACI,mBAKA,GACA,oBAAA,mBAIR,CArGgB,kCAAAA,QAAA,YAAA,aAAA,EAuGhB,MAAM,GAAG,cAAe,CAAC,KAAM,MAAO,WAAa,kBAEnD,CAAC,EAGD,MAAM,KAAK,OAAQ,MAAO,QAAsB,CACpC,QAAA,GAAG,UAAU,oCAAoC,EACjD,MAAA,+BAIR,MAAM,iBAAiB,EACvB,qCAAA,EAAuC,OAEvC,6CAAA,EAA+C,mCAK/C,MAAM,GAAG,kCAAmC,CAAC,KAAW,KAAc,YAAyC,CAC3G,mBAAmB,KAAM,SAAS,EAClC,KAAK,YAAY,CAAA,CACpB,eAYL,CAAC,EAEM,SAAS,iBAAkB,CAC1B,GAAA,CAAC,UAAU,cAAc,QAAQ,GAAG,UAAU,SAAS,QAAQ,EAC/D,OAGJ,GAAI,KAAK,SAAS,IAAI,WAAY,kBAAkB,IAAM,GAAI,CAE1D,MAAM,KAAe,KAAK,SAAS,IAAI,WAAY,kBAAkB,EAC/D,OAAS,KAAK,WAAW,MAAM,EAAI,GAAK,YAC9C,SAAS,gBAAgB,MAAM,YAAY,6BAA8B,OAAS,OAAS,KAAO,GAAG,CACzG,CAEA,SAAS,gBAAgB,MAAM,YAAY,oCAAqC,KAAK,EACrF,SAAS,gBAAgB,MAAM,YAAY,4CAA6C,IAAI,EACxF,KAAK,SAAS,IAAI,WAAY,uBAAuB,IACrD,SAAS,gBAAgB,MAAM,YAAY,oCAAqC,kBAAkB,EAClG,SAAS,gBAAgB,MAAM,YAAY,4CAA6C,OAAO,EAC/F,SAAS,gBAAgB,MAAM,YAAY,wCAAyC,EAAE,GAG1F,MAAM,KAAO,KAAK,SAAS,IAAI,WAAY,iBAAiB,EAC5D,GAAI,OAAS,GAAa,CAChB,MAAA,QAAU,SAAS,cAAc,YAAY,EAC/C,MAAQ,OAAS,IAAM,UAEvB,QAAQ,YAAc,KACJ,MAAM,MAAM,cAAc,KAAK,SAE7C,KAAK,KAAK,aAAa,KAAK,OAAY,MAMpD,CACJ,CAnCgB,0CAAAA,QAAA,gBAAA,iBAAA,EAsChB,MAAM,KAAK,QAAS,SAAY,CACpB,QAAA,GAAG,UAAU,eAAe,EAC5B,MAAA,iCAMZ,CAAC,EAED,SAAS,2BAA4B,CACjC,MAAM,iCAAmC,KAAK,SAAS,IAAI,WAAY,kCAAkC,EACnG,2BAA6B,KAAK,SAAS,IAAI,WAAY,4BAA4B,EAG7F,GAAI,4BAA8B,iCAAkC,CAChE,MAAMiB,sBAAuB,KAAK,SAAS,IAAI,OAAQ,sBAAsB,EACzE,mCACKA,sBAAqB,KAAM,SAAY,QAAQ,KAAO,qBAAqB,GAC5EA,sBAAqB,KAAK,CACtB,GAAI,sBACJ,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,kDAAkD,EACzF,UAAW,CAAC,UAAU,EACtB,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,EAAE,CAAA,CAC9B,GAIL,6BACKA,sBAAqB,KAAM,SAAY,QAAQ,KAAO,eAAe,GACtEA,sBAAqB,KAAK,CACtB,GAAI,gBACJ,MAAO,KAAK,KAAK,SAAS,GAAG,UAAU,4CAA4C,EACnF,UAAW,CAAC,OAAO,EACnB,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,CAAA,CAChD,GAIT,KAAK,SAAS,IAAI,OAAQ,uBAAwBA,qBAAoB,CAC1E,CAEA,MAAM,qBAAuB,KAAK,SAAS,IAAI,OAAQ,sBAAsB,EAGzE,sBACA,CAAC,4BACD,qBAAqB,KAAM,SAAY,QAAQ,KAAO,eAAe,IAEhD,qBAAA,OACjB,qBAAqB,UAAW,SAAY,QAAQ,KAAO,eAAe,EAC1E,CAAA,EAEJ,KAAK,SAAS,IAAI,OAAQ,uBAAwB,oBAAoB,GAItE,sBACA,CAAC,kCACD,qBAAqB,KAAM,SAAY,QAAQ,KAAO,qBAAqB,IAEtD,qBAAA,OACjB,qBAAqB,UAAW,SAAY,QAAQ,KAAO,qBAAqB,EAChF,CAAA,EAEJ,KAAK,SAAS,IAAI,OAAQ,uBAAwB,oBAAoB,EAE9E,CAzDS,8DAAAjB,QAAA,0BAAA,2BAAA,EA4DT,MAAM,KAAK,QAAS,IAAM,CAEd,QAAA,GAAG,UAAU,UAAU,EACvB,MAAA,GAOR,KAAK,cAAgB,CACjB,gBACA,cACA,yBACA,2BACA,yBACA,kCAAmC,+BACnC,wBACA,kBACA,QACA,yBACA,qBACA,gBACA,sBAAA,EAGA,KAAK,QAAQ,IAAI,0BAA0B,GAAG,QAC3C,GAAA,cAAc,MAAM,KAAK,KAAK,SAAS,GAAG,UAAU,mCAAmC,CAAC,EAG3F,KAAK,QAAQ,IAAI,cAAc,GAAG,QAC/B,GAAA,cAAc,MAAM,KAAK,KAAK,SAAS,GAAG,UAAU,uBAAuB,CAAC,EAGnF,MAAM,GAAK,KAAK,SAAS,IAAI,WAAY,gBAAgB,EACnD,IAAM,KAAK,QAAQ,IAAI,mBAAmB,EAShD,GARI,IAAM,KAAK,QACR,GAAA,cAAc,MAAM,KAAK,KAAK,SAAS,GAAG,UAAU,4BAA4B,CAAC,gBAOpF,UAAe,GAAA,KAAK,SAAS,IAAI,WAAY,kBAAkB,EAAG,CAC9D,IAAA,iBAAmB,qBAAqB,EAAK,GAC7C,iBAAmB,GAAK,KAAK,SAAS,IAAI,WAAY,mCAAmC,KACzF,iBAAmB,qBAAqB,EAAI,EACjC,WAAA,gBAAgB,EAAE,KAAK,IAAM,CACpC,2BAA2B,gBAAgB,CAAA,CAC9C,EAET,CAEA,KAAK,OAAO,GAAG,UAAY,WAAa,WAAc,CAClD,OAAQ,WAAW,UAAW,CAC1B,IAAK,cACI,KAAK,KAAK,oBAGf,MACJ,IAAK,eACG,GAAA,CAAC,KAAK,KAAK,KAAM,CACX,MAAA,KAAO,UAAU,KAAK,CAAC,EACvB,QAAU,UAAU,KAAK,CAAC,EAC7B,GAAA,cAAc,OAAO,QAAS,IAAI,CACzC,CACA,KAGR,CAAA,CACH,8BAIO,MAAA,GACF,MAAA,QAAQ,GAAG,UAAU,cAAc,CAC7C,CAAC,EAED,SAAS,2BAA4B,CACjC,WAAW,eAAe,eAAgB,SAAU,MAAc,MAAY,QAAc,CACpF,OAAA,MAAM,SAAS,KAAK,EACb,QAAQ,GAAG,IAAI,EAEf,QAAQ,QAAQ,IAAI,CAC/B,CACH,EACD,WAAW,eAAe,WAAY,SAAU,GAAI,GAAI,QAAS,CAC7D,OAAI,KAAO,GAAW,QAAQ,GAAG,IAAI,EACzB,QAAQ,SAAQ,CAC/B,EACD,WAAW,eAAe,WAAY,SAAU,GAAI,GAAI,QAAS,CAC7D,OAAI,KAAO,GAAW,QAAQ,GAAG,IAAI,EACzB,QAAQ,SAAQ,CAC/B,EAED,WAAW,eAAe,YAAa,SAAU,QAAS,QAAS,CAC/D,OAAI,MAAM,OAAO,GAAO,OAAO,SAAY,SAChC,QAAQ,GAAG,IAAI,EAEf,QAAQ,QAAQ,IAAI,CAC/B,CACH,EAEU,WAAA,eAAe,gBAAiB,UAAY,CAC5C,CACV,EAED,WAAW,eAAe,aAAc,SAAU,QAAS,IAAK,CAC5D,UAAW,QAAQ,QACf,GAAI,OAAO,yBAAyB,KAAM,GAAG,EAClC,MAAA,GAGR,MAAA,EAAA,CACV,CACL,CArCS,8DAAAA,QAAA,0BAAA,2BAAA"}